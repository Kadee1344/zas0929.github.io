!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){function n(t){var e=!!t&&"length"in t&&t.length,n=st.type(t);return"function"!==n&&!st.isWindow(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}function i(t,e,n){if(st.isFunction(e))return st.grep(t,function(t,i){return!!e.call(t,i,t)!==n});if(e.nodeType)return st.grep(t,function(t){return t===e!==n});if("string"==typeof e){if(gt.test(e))return st.filter(e,t,n);e=st.filter(e,t)}return st.grep(t,function(t){return Q.call(e,t)>-1!==n})}function r(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function s(t){var e={};return st.each(t.match($t)||[],function(t,n){e[n]=!0}),e}function o(){U.removeEventListener("DOMContentLoaded",o),t.removeEventListener("load",o),st.ready()}function a(){this.expando=st.expando+a.uid++}function c(t,e,n){var i;if(void 0===n&&1===t.nodeType)if(i="data-"+e.replace(kt,"-$&").toLowerCase(),n=t.getAttribute(i),"string"==typeof n){try{n="true"===n||"false"!==n&&("null"===n?null:+n+""===n?+n:Ot.test(n)?st.parseJSON(n):n)}catch(r){}Tt.set(t,e,n)}else n=void 0;return n}function l(t,e,n,i){var r,s=1,o=20,a=i?function(){return i.cur()}:function(){return st.css(t,e,"")},c=a(),l=n&&n[3]||(st.cssNumber[e]?"":"px"),u=(st.cssNumber[e]||"px"!==l&&+c)&&Et.exec(st.css(t,e));if(u&&u[3]!==l){l=l||u[3],n=n||[],u=+c||1;do s=s||".5",u/=s,st.style(t,e,u+l);while(s!==(s=a()/c)&&1!==s&&--o)}return n&&(u=+u||+c||0,r=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=l,i.start=u,i.end=r)),r}function u(t,e){var n="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[];return void 0===e||e&&st.nodeName(t,e)?st.merge([t],n):n}function h(t,e){for(var n=0,i=t.length;n<i;n++)St.set(t[n],"globalEval",!e||St.get(e[n],"globalEval"))}function f(t,e,n,i,r){for(var s,o,a,c,l,f,d=e.createDocumentFragment(),p=[],g=0,v=t.length;g<v;g++)if(s=t[g],s||0===s)if("object"===st.type(s))st.merge(p,s.nodeType?[s]:s);else if(Rt.test(s)){for(o=o||d.appendChild(e.createElement("div")),a=(Pt.exec(s)||["",""])[1].toLowerCase(),c=Lt[a]||Lt._default,o.innerHTML=c[1]+st.htmlPrefilter(s)+c[2],f=c[0];f--;)o=o.lastChild;st.merge(p,o.childNodes),o=d.firstChild,o.textContent=""}else p.push(e.createTextNode(s));for(d.textContent="",g=0;s=p[g++];)if(i&&st.inArray(s,i)>-1)r&&r.push(s);else if(l=st.contains(s.ownerDocument,s),o=u(d.appendChild(s),"script"),l&&h(o),n)for(f=0;s=o[f++];)It.test(s.type||"")&&n.push(s);return d}function d(){return!0}function p(){return!1}function g(){try{return U.activeElement}catch(t){}}function v(t,e,n,i,r,s){var o,a;if("object"==typeof e){"string"!=typeof n&&(i=i||n,n=void 0);for(a in e)v(t,a,n,i,e[a],s);return t}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),r===!1)r=p;else if(!r)return t;return 1===s&&(o=r,r=function(t){return st().off(t),o.apply(this,arguments)},r.guid=o.guid||(o.guid=st.guid++)),t.each(function(){st.event.add(this,e,r,i,n)})}function m(t,e){return st.nodeName(t,"table")&&st.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function y(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function b(t){var e=Xt.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function x(t,e){var n,i,r,s,o,a,c,l;if(1===e.nodeType){if(St.hasData(t)&&(s=St.access(t),o=St.set(e,s),l=s.events)){delete o.handle,o.events={};for(r in l)for(n=0,i=l[r].length;n<i;n++)st.event.add(e,r,l[r][n])}Tt.hasData(t)&&(a=Tt.access(t),c=st.extend({},a),Tt.set(e,c))}}function $(t,e){var n=e.nodeName.toLowerCase();"input"===n&&Dt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}function _(t,e,n,i){e=J.apply([],e);var r,s,o,a,c,l,h=0,d=t.length,p=d-1,g=e[0],v=st.isFunction(g);if(v||d>1&&"string"==typeof g&&!it.checkClone&&Ht.test(g))return t.each(function(r){var s=t.eq(r);v&&(e[0]=g.call(this,r,s.html())),_(s,e,n,i)});if(d&&(r=f(e,t[0].ownerDocument,!1,t,i),s=r.firstChild,1===r.childNodes.length&&(r=s),s||i)){for(o=st.map(u(r,"script"),y),a=o.length;h<d;h++)c=r,h!==p&&(c=st.clone(c,!0,!0),a&&st.merge(o,u(c,"script"))),n.call(t[h],c,h);if(a)for(l=o[o.length-1].ownerDocument,st.map(o,b),h=0;h<a;h++)c=o[h],It.test(c.type||"")&&!St.access(c,"globalEval")&&st.contains(l,c)&&(c.src?st._evalUrl&&st._evalUrl(c.src):st.globalEval(c.textContent.replace(zt,"")))}return t}function w(t,e,n){for(var i,r=e?st.filter(e,t):t,s=0;null!=(i=r[s]);s++)n||1!==i.nodeType||st.cleanData(u(i)),i.parentNode&&(n&&st.contains(i.ownerDocument,i)&&h(u(i,"script")),i.parentNode.removeChild(i));return t}function C(t,e){var n=st(e.createElement(t)).appendTo(e.body),i=st.css(n[0],"display");return n.detach(),i}function S(t){var e=U,n=qt[t];return n||(n=C(t,e),"none"!==n&&n||(Gt=(Gt||st("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement),e=Gt[0].contentDocument,e.write(),e.close(),n=C(t,e),Gt.detach()),qt[t]=n),n}function T(t,e,n){var i,r,s,o,a=t.style;return n=n||Kt(t),o=n?n.getPropertyValue(e)||n[e]:void 0,""!==o&&void 0!==o||st.contains(t.ownerDocument,t)||(o=st.style(t,e)),n&&!it.pixelMarginRight()&&Ut.test(o)&&Yt.test(e)&&(i=a.width,r=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=o,o=n.width,a.width=i,a.minWidth=r,a.maxWidth=s),void 0!==o?o+"":o}function O(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function k(t){if(t in ie)return t;for(var e=t[0].toUpperCase()+t.slice(1),n=ne.length;n--;)if(t=ne[n]+e,t in ie)return t}function A(t,e,n){var i=Et.exec(e);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):e}function E(t,e,n,i,r){for(var s=n===(i?"border":"content")?4:"width"===e?1:0,o=0;s<4;s+=2)"margin"===n&&(o+=st.css(t,n+jt[s],!0,r)),i?("content"===n&&(o-=st.css(t,"padding"+jt[s],!0,r)),"margin"!==n&&(o-=st.css(t,"border"+jt[s]+"Width",!0,r))):(o+=st.css(t,"padding"+jt[s],!0,r),"padding"!==n&&(o+=st.css(t,"border"+jt[s]+"Width",!0,r)));return o}function j(t,e,n){var i=!0,r="width"===e?t.offsetWidth:t.offsetHeight,s=Kt(t),o="border-box"===st.css(t,"boxSizing",!1,s);if(r<=0||null==r){if(r=T(t,e,s),(r<0||null==r)&&(r=t.style[e]),Ut.test(r))return r;i=o&&(it.boxSizingReliable()||r===t.style[e]),r=parseFloat(r)||0}return r+E(t,e,n||(o?"border":"content"),i,s)+"px"}function M(t,e){for(var n,i,r,s=[],o=0,a=t.length;o<a;o++)i=t[o],i.style&&(s[o]=St.get(i,"olddisplay"),n=i.style.display,e?(s[o]||"none"!==n||(i.style.display=""),""===i.style.display&&Mt(i)&&(s[o]=St.access(i,"olddisplay",S(i.nodeName)))):(r=Mt(i),"none"===n&&r||St.set(i,"olddisplay",r?n:st.css(i,"display"))));for(o=0;o<a;o++)i=t[o],i.style&&(e&&"none"!==i.style.display&&""!==i.style.display||(i.style.display=e?s[o]||"":"none"));return t}function D(t,e,n,i,r){return new D.prototype.init(t,e,n,i,r)}function P(){return t.setTimeout(function(){re=void 0}),re=st.now()}function I(t,e){var n,i=0,r={height:t};for(e=e?1:0;i<4;i+=2-e)n=jt[i],r["margin"+n]=r["padding"+n]=t;return e&&(r.opacity=r.width=t),r}function L(t,e,n){for(var i,r=(N.tweeners[e]||[]).concat(N.tweeners["*"]),s=0,o=r.length;s<o;s++)if(i=r[s].call(n,e,t))return i}function R(t,e,n){var i,r,s,o,a,c,l,u,h=this,f={},d=t.style,p=t.nodeType&&Mt(t),g=St.get(t,"fxshow");n.queue||(a=st._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,c=a.empty.fire,a.empty.fire=function(){a.unqueued||c()}),a.unqueued++,h.always(function(){h.always(function(){a.unqueued--,st.queue(t,"fx").length||a.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],l=st.css(t,"display"),u="none"===l?St.get(t,"olddisplay")||S(t.nodeName):l,"inline"===u&&"none"===st.css(t,"float")&&(d.display="inline-block")),n.overflow&&(d.overflow="hidden",h.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(i in e)if(r=e[i],oe.exec(r)){if(delete e[i],s=s||"toggle"===r,r===(p?"hide":"show")){if("show"!==r||!g||void 0===g[i])continue;p=!0}f[i]=g&&g[i]||st.style(t,i)}else l=void 0;if(st.isEmptyObject(f))"inline"===("none"===l?S(t.nodeName):l)&&(d.display=l);else{g?"hidden"in g&&(p=g.hidden):g=St.access(t,"fxshow",{}),s&&(g.hidden=!p),p?st(t).show():h.done(function(){st(t).hide()}),h.done(function(){var e;St.remove(t,"fxshow");for(e in f)st.style(t,e,f[e])});for(i in f)o=L(p?g[i]:0,i,h),i in g||(g[i]=o.start,p&&(o.end=o.start,o.start="width"===i||"height"===i?1:0))}}function F(t,e){var n,i,r,s,o;for(n in t)if(i=st.camelCase(n),r=e[i],s=t[n],st.isArray(s)&&(r=s[1],s=t[n]=s[0]),n!==i&&(t[i]=s,delete t[n]),o=st.cssHooks[i],o&&"expand"in o){s=o.expand(s),delete t[i];for(n in s)n in t||(t[n]=s[n],e[n]=r)}else e[i]=r}function N(t,e,n){var i,r,s=0,o=N.prefilters.length,a=st.Deferred().always(function(){delete c.elem}),c=function(){if(r)return!1;for(var e=re||P(),n=Math.max(0,l.startTime+l.duration-e),i=n/l.duration||0,s=1-i,o=0,c=l.tweens.length;o<c;o++)l.tweens[o].run(s);return a.notifyWith(t,[l,s,n]),s<1&&c?n:(a.resolveWith(t,[l]),!1)},l=a.promise({elem:t,props:st.extend({},e),opts:st.extend(!0,{specialEasing:{},easing:st.easing._default},n),originalProperties:e,originalOptions:n,startTime:re||P(),duration:n.duration,tweens:[],createTween:function(e,n){var i=st.Tween(t,l.opts,e,n,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(i),i},stop:function(e){var n=0,i=e?l.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)l.tweens[n].run(1);return e?(a.notifyWith(t,[l,1,0]),a.resolveWith(t,[l,e])):a.rejectWith(t,[l,e]),this}}),u=l.props;for(F(u,l.opts.specialEasing);s<o;s++)if(i=N.prefilters[s].call(l,t,u,l.opts))return st.isFunction(i.stop)&&(st._queueHooks(l.elem,l.opts.queue).stop=st.proxy(i.stop,i)),i;return st.map(u,L,l),st.isFunction(l.opts.start)&&l.opts.start.call(t,l),st.fx.timer(st.extend(c,{elem:t,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function B(t){return t.getAttribute&&t.getAttribute("class")||""}function V(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var i,r=0,s=e.toLowerCase().match($t)||[];if(st.isFunction(n))for(;i=s[r++];)"+"===i[0]?(i=i.slice(1)||"*",(t[i]=t[i]||[]).unshift(n)):(t[i]=t[i]||[]).push(n)}}function W(t,e,n,i){function r(a){var c;return s[a]=!0,st.each(t[a]||[],function(t,a){var l=a(e,n,i);return"string"!=typeof l||o||s[l]?o?!(c=l):void 0:(e.dataTypes.unshift(l),r(l),!1)}),c}var s={},o=t===Te;return r(e.dataTypes[0])||!s["*"]&&r("*")}function H(t,e){var n,i,r=st.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((r[n]?t:i||(i={}))[n]=e[n]);return i&&st.extend(!0,t,i),t}function X(t,e,n){for(var i,r,s,o,a=t.contents,c=t.dataTypes;"*"===c[0];)c.shift(),void 0===i&&(i=t.mimeType||e.getResponseHeader("Content-Type"));if(i)for(r in a)if(a[r]&&a[r].test(i)){c.unshift(r);break}if(c[0]in n)s=c[0];else{for(r in n){if(!c[0]||t.converters[r+" "+c[0]]){s=r;break}o||(o=r)}s=s||o}if(s)return s!==c[0]&&c.unshift(s),n[s]}function z(t,e,n,i){var r,s,o,a,c,l={},u=t.dataTypes.slice();if(u[1])for(o in t.converters)l[o.toLowerCase()]=t.converters[o];for(s=u.shift();s;)if(t.responseFields[s]&&(n[t.responseFields[s]]=e),!c&&i&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),c=s,s=u.shift())if("*"===s)s=c;else if("*"!==c&&c!==s){if(o=l[c+" "+s]||l["* "+s],!o)for(r in l)if(a=r.split(" "),a[1]===s&&(o=l[c+" "+a[0]]||l["* "+a[0]])){o===!0?o=l[r]:l[r]!==!0&&(s=a[0],u.unshift(a[1]));break}if(o!==!0)if(o&&t["throws"])e=o(e);else try{e=o(e)}catch(h){return{state:"parsererror",error:o?h:"No conversion from "+c+" to "+s}}}return{state:"success",data:e}}function G(t,e,n,i){var r;if(st.isArray(e))st.each(e,function(e,r){n||Ee.test(t)?i(t,r):G(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,n,i)});else if(n||"object"!==st.type(e))i(t,e);else for(r in e)G(t+"["+r+"]",e[r],n,i)}function q(t){return st.isWindow(t)?t:9===t.nodeType&&t.defaultView}var Y=[],U=t.document,K=Y.slice,J=Y.concat,Z=Y.push,Q=Y.indexOf,tt={},et=tt.toString,nt=tt.hasOwnProperty,it={},rt="2.2.4",st=function(t,e){return new st.fn.init(t,e)},ot=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,at=/^-ms-/,ct=/-([\da-z])/gi,lt=function(t,e){return e.toUpperCase()};st.fn=st.prototype={jquery:rt,constructor:st,selector:"",length:0,toArray:function(){return K.call(this)},get:function(t){return null!=t?t<0?this[t+this.length]:this[t]:K.call(this)},pushStack:function(t){var e=st.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t){return st.each(this,t)},map:function(t){return this.pushStack(st.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return this.pushStack(K.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:Z,sort:Y.sort,splice:Y.splice},st.extend=st.fn.extend=function(){var t,e,n,i,r,s,o=arguments[0]||{},a=1,c=arguments.length,l=!1;for("boolean"==typeof o&&(l=o,o=arguments[a]||{},a++),"object"==typeof o||st.isFunction(o)||(o={}),a===c&&(o=this,a--);a<c;a++)if(null!=(t=arguments[a]))for(e in t)n=o[e],i=t[e],o!==i&&(l&&i&&(st.isPlainObject(i)||(r=st.isArray(i)))?(r?(r=!1,s=n&&st.isArray(n)?n:[]):s=n&&st.isPlainObject(n)?n:{},o[e]=st.extend(l,s,i)):void 0!==i&&(o[e]=i));return o},st.extend({expando:"jQuery"+(rt+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===st.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=t&&t.toString();return!st.isArray(t)&&e-parseFloat(e)+1>=0},isPlainObject:function(t){var e;if("object"!==st.type(t)||t.nodeType||st.isWindow(t))return!1;if(t.constructor&&!nt.call(t,"constructor")&&!nt.call(t.constructor.prototype||{},"isPrototypeOf"))return!1;for(e in t);return void 0===e||nt.call(t,e)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?tt[et.call(t)]||"object":typeof t},globalEval:function(t){var e,n=eval;t=st.trim(t),t&&(1===t.indexOf("use strict")?(e=U.createElement("script"),e.text=t,U.head.appendChild(e).parentNode.removeChild(e)):n(t))},camelCase:function(t){return t.replace(at,"ms-").replace(ct,lt)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var i,r=0;if(n(t))for(i=t.length;r<i&&e.call(t[r],r,t[r])!==!1;r++);else for(r in t)if(e.call(t[r],r,t[r])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(ot,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(n(Object(t))?st.merge(i,"string"==typeof t?[t]:t):Z.call(i,t)),i},inArray:function(t,e,n){return null==e?-1:Q.call(e,t,n)},merge:function(t,e){for(var n=+e.length,i=0,r=t.length;i<n;i++)t[r++]=e[i];return t.length=r,t},grep:function(t,e,n){for(var i,r=[],s=0,o=t.length,a=!n;s<o;s++)i=!e(t[s],s),i!==a&&r.push(t[s]);return r},map:function(t,e,i){var r,s,o=0,a=[];if(n(t))for(r=t.length;o<r;o++)s=e(t[o],o,i),null!=s&&a.push(s);else for(o in t)s=e(t[o],o,i),null!=s&&a.push(s);return J.apply([],a)},guid:1,proxy:function(t,e){var n,i,r;if("string"==typeof e&&(n=t[e],e=t,t=n),st.isFunction(t))return i=K.call(arguments,2),r=function(){return t.apply(e||this,i.concat(K.call(arguments)))},r.guid=t.guid=t.guid||st.guid++,r},now:Date.now,support:it}),"function"==typeof Symbol&&(st.fn[Symbol.iterator]=Y[Symbol.iterator]),st.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){tt["[object "+e+"]"]=e.toLowerCase()});var ut=function(t){function e(t,e,n,i){var r,s,o,a,c,l,h,d,p=e&&e.ownerDocument,g=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==g&&9!==g&&11!==g)return n;if(!i&&((e?e.ownerDocument||e:B)!==M&&j(e),e=e||M,P)){if(11!==g&&(l=mt.exec(t)))if(r=l[1]){if(9===g){if(!(o=e.getElementById(r)))return n;if(o.id===r)return n.push(o),n}else if(p&&(o=p.getElementById(r))&&F(e,o)&&o.id===r)return n.push(o),n}else{if(l[2])return Z.apply(n,e.getElementsByTagName(t)),n;if((r=l[3])&&$.getElementsByClassName&&e.getElementsByClassName)return Z.apply(n,e.getElementsByClassName(r)),n}if($.qsa&&!z[t+" "]&&(!I||!I.test(t))){if(1!==g)p=e,d=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(bt,"\\$&"):e.setAttribute("id",a=N),h=S(t),s=h.length,c=ft.test(a)?"#"+a:"[id='"+a+"']";s--;)h[s]=c+" "+f(h[s]);d=h.join(","),p=yt.test(t)&&u(e.parentNode)||e}if(d)try{return Z.apply(n,p.querySelectorAll(d)),n}catch(v){}finally{a===N&&e.removeAttribute("id")}}}return O(t.replace(at,"$1"),e,n,i)}function n(){function t(n,i){return e.push(n+" ")>_.cacheLength&&delete t[e.shift()],t[n+" "]=i}var e=[];return t}function i(t){return t[N]=!0,t}function r(t){var e=M.createElement("div");try{return!!t(e)}catch(n){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function s(t,e){for(var n=t.split("|"),i=n.length;i--;)_.attrHandle[n[i]]=e}function o(t,e){var n=e&&t,i=n&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||q)-(~t.sourceIndex||q);if(i)return i;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function a(t){return function(e){var n=e.nodeName.toLowerCase();return"input"===n&&e.type===t}}function c(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function l(t){return i(function(e){return e=+e,i(function(n,i){for(var r,s=t([],n.length,e),o=s.length;o--;)n[r=s[o]]&&(n[r]=!(i[r]=n[r]))})})}function u(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function h(){}function f(t){for(var e=0,n=t.length,i="";e<n;e++)i+=t[e].value;return i}function d(t,e,n){var i=e.dir,r=n&&"parentNode"===i,s=W++;return e.first?function(e,n,s){for(;e=e[i];)if(1===e.nodeType||r)return t(e,n,s)}:function(e,n,o){var a,c,l,u=[V,s];if(o){for(;e=e[i];)if((1===e.nodeType||r)&&t(e,n,o))return!0}else for(;e=e[i];)if(1===e.nodeType||r){if(l=e[N]||(e[N]={}),c=l[e.uniqueID]||(l[e.uniqueID]={}),(a=c[i])&&a[0]===V&&a[1]===s)return u[2]=a[2];if(c[i]=u,u[2]=t(e,n,o))return!0}}}function p(t){return t.length>1?function(e,n,i){for(var r=t.length;r--;)if(!t[r](e,n,i))return!1;return!0}:t[0]}function g(t,n,i){for(var r=0,s=n.length;r<s;r++)e(t,n[r],i);return i}function v(t,e,n,i,r){for(var s,o=[],a=0,c=t.length,l=null!=e;a<c;a++)(s=t[a])&&(n&&!n(s,i,r)||(o.push(s),l&&e.push(a)));return o}function m(t,e,n,r,s,o){return r&&!r[N]&&(r=m(r)),s&&!s[N]&&(s=m(s,o)),i(function(i,o,a,c){var l,u,h,f=[],d=[],p=o.length,m=i||g(e||"*",a.nodeType?[a]:a,[]),y=!t||!i&&e?m:v(m,f,t,a,c),b=n?s||(i?t:p||r)?[]:o:y;if(n&&n(y,b,a,c),r)for(l=v(b,d),r(l,[],a,c),u=l.length;u--;)(h=l[u])&&(b[d[u]]=!(y[d[u]]=h));if(i){if(s||t){if(s){for(l=[],u=b.length;u--;)(h=b[u])&&l.push(y[u]=h);s(null,b=[],l,c)}for(u=b.length;u--;)(h=b[u])&&(l=s?tt(i,h):f[u])>-1&&(i[l]=!(o[l]=h))}}else b=v(b===o?b.splice(p,b.length):b),s?s(null,o,b,c):Z.apply(o,b)})}function y(t){for(var e,n,i,r=t.length,s=_.relative[t[0].type],o=s||_.relative[" "],a=s?1:0,c=d(function(t){return t===e},o,!0),l=d(function(t){return tt(e,t)>-1},o,!0),u=[function(t,n,i){var r=!s&&(i||n!==k)||((e=n).nodeType?c(t,n,i):l(t,n,i));return e=null,r}];a<r;a++)if(n=_.relative[t[a].type])u=[d(p(u),n)];else{if(n=_.filter[t[a].type].apply(null,t[a].matches),n[N]){for(i=++a;i<r&&!_.relative[t[i].type];i++);return m(a>1&&p(u),a>1&&f(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(at,"$1"),n,a<i&&y(t.slice(a,i)),i<r&&y(t=t.slice(i)),i<r&&f(t))}u.push(n)}return p(u)}function b(t,n){var r=n.length>0,s=t.length>0,o=function(i,o,a,c,l){var u,h,f,d=0,p="0",g=i&&[],m=[],y=k,b=i||s&&_.find.TAG("*",l),x=V+=null==y?1:Math.random()||.1,$=b.length;for(l&&(k=o===M||o||l);p!==$&&null!=(u=b[p]);p++){if(s&&u){for(h=0,o||u.ownerDocument===M||(j(u),a=!P);f=t[h++];)if(f(u,o||M,a)){c.push(u);break}l&&(V=x)}r&&((u=!f&&u)&&d--,i&&g.push(u))}if(d+=p,r&&p!==d){for(h=0;f=n[h++];)f(g,m,o,a);if(i){if(d>0)for(;p--;)g[p]||m[p]||(m[p]=K.call(c));m=v(m)}Z.apply(c,m),l&&!i&&m.length>0&&d+n.length>1&&e.uniqueSort(c)}return l&&(V=x,k=y),g};return r?i(o):o}var x,$,_,w,C,S,T,O,k,A,E,j,M,D,P,I,L,R,F,N="sizzle"+1*new Date,B=t.document,V=0,W=0,H=n(),X=n(),z=n(),G=function(t,e){return t===e&&(E=!0),0},q=1<<31,Y={}.hasOwnProperty,U=[],K=U.pop,J=U.push,Z=U.push,Q=U.slice,tt=function(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",nt="[\\x20\\t\\r\\n\\f]",it="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",rt="\\["+nt+"*("+it+")(?:"+nt+"*([*^$|!~]?=)"+nt+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+it+"))|)"+nt+"*\\]",st=":("+it+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",ot=new RegExp(nt+"+","g"),at=new RegExp("^"+nt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+nt+"+$","g"),ct=new RegExp("^"+nt+"*,"+nt+"*"),lt=new RegExp("^"+nt+"*([>+~]|"+nt+")"+nt+"*"),ut=new RegExp("="+nt+"*([^\\]'\"]*?)"+nt+"*\\]","g"),ht=new RegExp(st),ft=new RegExp("^"+it+"$"),dt={ID:new RegExp("^#("+it+")"),CLASS:new RegExp("^\\.("+it+")"),TAG:new RegExp("^("+it+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+st),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+nt+"*(even|odd|(([+-]|)(\\d*)n|)"+nt+"*(?:([+-]|)"+nt+"*(\\d+)|))"+nt+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+nt+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+nt+"*((?:-\\d)?\\d*)"+nt+"*\\)|)(?=[^-]|$)","i")},pt=/^(?:input|select|textarea|button)$/i,gt=/^h\d$/i,vt=/^[^{]+\{\s*\[native \w/,mt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,yt=/[+~]/,bt=/'|\\/g,xt=new RegExp("\\\\([\\da-f]{1,6}"+nt+"?|("+nt+")|.)","ig"),$t=function(t,e,n){var i="0x"+e-65536;return i!==i||n?e:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},_t=function(){j()};try{Z.apply(U=Q.call(B.childNodes),B.childNodes),U[B.childNodes.length].nodeType}catch(wt){Z={apply:U.length?function(t,e){J.apply(t,Q.call(e))}:function(t,e){for(var n=t.length,i=0;t[n++]=e[i++];);t.length=n-1}}}$=e.support={},C=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},j=e.setDocument=function(t){var e,n,i=t?t.ownerDocument||t:B;return i!==M&&9===i.nodeType&&i.documentElement?(M=i,D=M.documentElement,P=!C(M),(n=M.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",_t,!1):n.attachEvent&&n.attachEvent("onunload",_t)),$.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),$.getElementsByTagName=r(function(t){return t.appendChild(M.createComment("")),!t.getElementsByTagName("*").length}),$.getElementsByClassName=vt.test(M.getElementsByClassName),$.getById=r(function(t){return D.appendChild(t).id=N,!M.getElementsByName||!M.getElementsByName(N).length}),$.getById?(_.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&P){var n=e.getElementById(t);return n?[n]:[]}},_.filter.ID=function(t){var e=t.replace(xt,$t);return function(t){return t.getAttribute("id")===e}}):(delete _.find.ID,_.filter.ID=function(t){var e=t.replace(xt,$t);return function(t){var n="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}}),_.find.TAG=$.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):$.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,i=[],r=0,s=e.getElementsByTagName(t);if("*"===t){for(;n=s[r++];)1===n.nodeType&&i.push(n);return i}return s},_.find.CLASS=$.getElementsByClassName&&function(t,e){if("undefined"!=typeof e.getElementsByClassName&&P)return e.getElementsByClassName(t)},L=[],I=[],($.qsa=vt.test(M.querySelectorAll))&&(r(function(t){D.appendChild(t).innerHTML="<a id='"+N+"'></a><select id='"+N+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&I.push("[*^$]="+nt+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||I.push("\\["+nt+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+N+"-]").length||I.push("~="),t.querySelectorAll(":checked").length||I.push(":checked"),t.querySelectorAll("a#"+N+"+*").length||I.push(".#.+[+~]")}),r(function(t){var e=M.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&I.push("name"+nt+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||I.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),I.push(",.*:")})),($.matchesSelector=vt.test(R=D.matches||D.webkitMatchesSelector||D.mozMatchesSelector||D.oMatchesSelector||D.msMatchesSelector))&&r(function(t){$.disconnectedMatch=R.call(t,"div"),R.call(t,"[s!='']:x"),L.push("!=",st)}),I=I.length&&new RegExp(I.join("|")),L=L.length&&new RegExp(L.join("|")),e=vt.test(D.compareDocumentPosition),F=e||vt.test(D.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,i=e&&e.parentNode;return t===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):t.compareDocumentPosition&&16&t.compareDocumentPosition(i)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},G=e?function(t,e){if(t===e)return E=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n?n:(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&n||!$.sortDetached&&e.compareDocumentPosition(t)===n?t===M||t.ownerDocument===B&&F(B,t)?-1:e===M||e.ownerDocument===B&&F(B,e)?1:A?tt(A,t)-tt(A,e):0:4&n?-1:1)}:function(t,e){if(t===e)return E=!0,0;var n,i=0,r=t.parentNode,s=e.parentNode,a=[t],c=[e];if(!r||!s)return t===M?-1:e===M?1:r?-1:s?1:A?tt(A,t)-tt(A,e):0;if(r===s)return o(t,e);for(n=t;n=n.parentNode;)a.unshift(n);for(n=e;n=n.parentNode;)c.unshift(n);for(;a[i]===c[i];)i++;return i?o(a[i],c[i]):a[i]===B?-1:c[i]===B?1:0},M):M},e.matches=function(t,n){return e(t,null,null,n)},e.matchesSelector=function(t,n){if((t.ownerDocument||t)!==M&&j(t),n=n.replace(ut,"='$1']"),$.matchesSelector&&P&&!z[n+" "]&&(!L||!L.test(n))&&(!I||!I.test(n)))try{var i=R.call(t,n);if(i||$.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(r){}return e(n,M,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==M&&j(t),F(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==M&&j(t);var n=_.attrHandle[e.toLowerCase()],i=n&&Y.call(_.attrHandle,e.toLowerCase())?n(t,e,!P):void 0;return void 0!==i?i:$.attributes||!P?t.getAttribute(e):(i=t.getAttributeNode(e))&&i.specified?i.value:null},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,n=[],i=0,r=0;if(E=!$.detectDuplicates,A=!$.sortStable&&t.slice(0),t.sort(G),E){for(;e=t[r++];)e===t[r]&&(i=n.push(r));for(;i--;)t.splice(n[i],1)}return A=null,t},w=e.getText=function(t){var e,n="",i=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=w(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[i++];)n+=w(e);return n},_=e.selectors={cacheLength:50,createPseudo:i,match:dt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(xt,$t),t[3]=(t[3]||t[4]||t[5]||"").replace(xt,$t),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return dt.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&ht.test(n)&&(e=S(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(xt,$t).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=H[t+" "];return e||(e=new RegExp("(^|"+nt+")"+t+"("+nt+"|$)"))&&H(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(r){var s=e.attr(r,t);return null==s?"!="===n:!n||(s+="","="===n?s===i:"!="===n?s!==i:"^="===n?i&&0===s.indexOf(i):"*="===n?i&&s.indexOf(i)>-1:"$="===n?i&&s.slice(-i.length)===i:"~="===n?(" "+s.replace(ot," ")+" ").indexOf(i)>-1:"|="===n&&(s===i||s.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,n,i,r){var s="nth"!==t.slice(0,3),o="last"!==t.slice(-4),a="of-type"===e;return 1===i&&0===r?function(t){return!!t.parentNode}:function(e,n,c){var l,u,h,f,d,p,g=s!==o?"nextSibling":"previousSibling",v=e.parentNode,m=a&&e.nodeName.toLowerCase(),y=!c&&!a,b=!1;if(v){if(s){for(;g;){for(f=e;f=f[g];)if(a?f.nodeName.toLowerCase()===m:1===f.nodeType)return!1;p=g="only"===t&&!p&&"nextSibling"}return!0}if(p=[o?v.firstChild:v.lastChild],o&&y){for(f=v,h=f[N]||(f[N]={}),u=h[f.uniqueID]||(h[f.uniqueID]={}),l=u[t]||[],d=l[0]===V&&l[1],b=d&&l[2],f=d&&v.childNodes[d];f=++d&&f&&f[g]||(b=d=0)||p.pop();)if(1===f.nodeType&&++b&&f===e){u[t]=[V,d,b];break}}else if(y&&(f=e,h=f[N]||(f[N]={}),u=h[f.uniqueID]||(h[f.uniqueID]={}),l=u[t]||[],d=l[0]===V&&l[1],b=d),b===!1)for(;(f=++d&&f&&f[g]||(b=d=0)||p.pop())&&((a?f.nodeName.toLowerCase()!==m:1!==f.nodeType)||!++b||(y&&(h=f[N]||(f[N]={}),u=h[f.uniqueID]||(h[f.uniqueID]={}),u[t]=[V,b]),f!==e)););return b-=r,b===i||b%i===0&&b/i>=0}}},PSEUDO:function(t,n){var r,s=_.pseudos[t]||_.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return s[N]?s(n):s.length>1?(r=[t,t,"",n],_.setFilters.hasOwnProperty(t.toLowerCase())?i(function(t,e){for(var i,r=s(t,n),o=r.length;o--;)i=tt(t,r[o]),t[i]=!(e[i]=r[o])}):function(t){return s(t,0,r)}):s}},pseudos:{not:i(function(t){var e=[],n=[],r=T(t.replace(at,"$1"));return r[N]?i(function(t,e,n,i){for(var s,o=r(t,null,i,[]),a=t.length;a--;)(s=o[a])&&(t[a]=!(e[a]=s))}):function(t,i,s){return e[0]=t,r(e,null,s,n),e[0]=null,!n.pop()}}),has:i(function(t){return function(n){return e(t,n).length>0}}),contains:i(function(t){return t=t.replace(xt,$t),function(e){return(e.textContent||e.innerText||w(e)).indexOf(t)>-1}}),lang:i(function(t){return ft.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(xt,$t).toLowerCase(),function(e){var n;do if(n=P?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return n=n.toLowerCase(),n===t||0===n.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===D},focus:function(t){return t===M.activeElement&&(!M.hasFocus||M.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!_.pseudos.empty(t)},header:function(t){return gt.test(t.nodeName)},input:function(t){return pt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:l(function(){return[0]}),last:l(function(t,e){return[e-1]}),eq:l(function(t,e,n){return[n<0?n+e:n]}),even:l(function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t}),odd:l(function(t,e){for(var n=1;n<e;n+=2)t.push(n);
return t}),lt:l(function(t,e,n){for(var i=n<0?n+e:n;--i>=0;)t.push(i);return t}),gt:l(function(t,e,n){for(var i=n<0?n+e:n;++i<e;)t.push(i);return t})}},_.pseudos.nth=_.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})_.pseudos[x]=a(x);for(x in{submit:!0,reset:!0})_.pseudos[x]=c(x);return h.prototype=_.filters=_.pseudos,_.setFilters=new h,S=e.tokenize=function(t,n){var i,r,s,o,a,c,l,u=X[t+" "];if(u)return n?0:u.slice(0);for(a=t,c=[],l=_.preFilter;a;){i&&!(r=ct.exec(a))||(r&&(a=a.slice(r[0].length)||a),c.push(s=[])),i=!1,(r=lt.exec(a))&&(i=r.shift(),s.push({value:i,type:r[0].replace(at," ")}),a=a.slice(i.length));for(o in _.filter)!(r=dt[o].exec(a))||l[o]&&!(r=l[o](r))||(i=r.shift(),s.push({value:i,type:o,matches:r}),a=a.slice(i.length));if(!i)break}return n?a.length:a?e.error(t):X(t,c).slice(0)},T=e.compile=function(t,e){var n,i=[],r=[],s=z[t+" "];if(!s){for(e||(e=S(t)),n=e.length;n--;)s=y(e[n]),s[N]?i.push(s):r.push(s);s=z(t,b(r,i)),s.selector=t}return s},O=e.select=function(t,e,n,i){var r,s,o,a,c,l="function"==typeof t&&t,h=!i&&S(t=l.selector||t);if(n=n||[],1===h.length){if(s=h[0]=h[0].slice(0),s.length>2&&"ID"===(o=s[0]).type&&$.getById&&9===e.nodeType&&P&&_.relative[s[1].type]){if(e=(_.find.ID(o.matches[0].replace(xt,$t),e)||[])[0],!e)return n;l&&(e=e.parentNode),t=t.slice(s.shift().value.length)}for(r=dt.needsContext.test(t)?0:s.length;r--&&(o=s[r],!_.relative[a=o.type]);)if((c=_.find[a])&&(i=c(o.matches[0].replace(xt,$t),yt.test(s[0].type)&&u(e.parentNode)||e))){if(s.splice(r,1),t=i.length&&f(s),!t)return Z.apply(n,i),n;break}}return(l||T(t,h))(i,e,!P,n,!e||yt.test(t)&&u(e.parentNode)||e),n},$.sortStable=N.split("").sort(G).join("")===N,$.detectDuplicates=!!E,j(),$.sortDetached=r(function(t){return 1&t.compareDocumentPosition(M.createElement("div"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||s("type|href|height|width",function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),$.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||s("value",function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||s(et,function(t,e,n){var i;if(!n)return t[e]===!0?e.toLowerCase():(i=t.getAttributeNode(e))&&i.specified?i.value:null}),e}(t);st.find=ut,st.expr=ut.selectors,st.expr[":"]=st.expr.pseudos,st.uniqueSort=st.unique=ut.uniqueSort,st.text=ut.getText,st.isXMLDoc=ut.isXML,st.contains=ut.contains;var ht=function(t,e,n){for(var i=[],r=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&st(t).is(n))break;i.push(t)}return i},ft=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},dt=st.expr.match.needsContext,pt=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,gt=/^.[^:#\[\.,]*$/;st.filter=function(t,e,n){var i=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===i.nodeType?st.find.matchesSelector(i,t)?[i]:[]:st.find.matches(t,st.grep(e,function(t){return 1===t.nodeType}))},st.fn.extend({find:function(t){var e,n=this.length,i=[],r=this;if("string"!=typeof t)return this.pushStack(st(t).filter(function(){for(e=0;e<n;e++)if(st.contains(r[e],this))return!0}));for(e=0;e<n;e++)st.find(t,r[e],i);return i=this.pushStack(n>1?st.unique(i):i),i.selector=this.selector?this.selector+" "+t:t,i},filter:function(t){return this.pushStack(i(this,t||[],!1))},not:function(t){return this.pushStack(i(this,t||[],!0))},is:function(t){return!!i(this,"string"==typeof t&&dt.test(t)?st(t):t||[],!1).length}});var vt,mt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,yt=st.fn.init=function(t,e,n){var i,r;if(!t)return this;if(n=n||vt,"string"==typeof t){if(i="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:mt.exec(t),!i||!i[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof st?e[0]:e,st.merge(this,st.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:U,!0)),pt.test(i[1])&&st.isPlainObject(e))for(i in e)st.isFunction(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}return r=U.getElementById(i[2]),r&&r.parentNode&&(this.length=1,this[0]=r),this.context=U,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):st.isFunction(t)?void 0!==n.ready?n.ready(t):t(st):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),st.makeArray(t,this))};yt.prototype=st.fn,vt=st(U);var bt=/^(?:parents|prev(?:Until|All))/,xt={children:!0,contents:!0,next:!0,prev:!0};st.fn.extend({has:function(t){var e=st(t,this),n=e.length;return this.filter(function(){for(var t=0;t<n;t++)if(st.contains(this,e[t]))return!0})},closest:function(t,e){for(var n,i=0,r=this.length,s=[],o=dt.test(t)||"string"!=typeof t?st(t,e||this.context):0;i<r;i++)for(n=this[i];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(o?o.index(n)>-1:1===n.nodeType&&st.find.matchesSelector(n,t))){s.push(n);break}return this.pushStack(s.length>1?st.uniqueSort(s):s)},index:function(t){return t?"string"==typeof t?Q.call(st(t),this[0]):Q.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(st.uniqueSort(st.merge(this.get(),st(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),st.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return ht(t,"parentNode")},parentsUntil:function(t,e,n){return ht(t,"parentNode",n)},next:function(t){return r(t,"nextSibling")},prev:function(t){return r(t,"previousSibling")},nextAll:function(t){return ht(t,"nextSibling")},prevAll:function(t){return ht(t,"previousSibling")},nextUntil:function(t,e,n){return ht(t,"nextSibling",n)},prevUntil:function(t,e,n){return ht(t,"previousSibling",n)},siblings:function(t){return ft((t.parentNode||{}).firstChild,t)},children:function(t){return ft(t.firstChild)},contents:function(t){return t.contentDocument||st.merge([],t.childNodes)}},function(t,e){st.fn[t]=function(n,i){var r=st.map(this,e,n);return"Until"!==t.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=st.filter(i,r)),this.length>1&&(xt[t]||st.uniqueSort(r),bt.test(t)&&r.reverse()),this.pushStack(r)}});var $t=/\S+/g;st.Callbacks=function(t){t="string"==typeof t?s(t):st.extend({},t);var e,n,i,r,o=[],a=[],c=-1,l=function(){for(r=t.once,i=e=!0;a.length;c=-1)for(n=a.shift();++c<o.length;)o[c].apply(n[0],n[1])===!1&&t.stopOnFalse&&(c=o.length,n=!1);t.memory||(n=!1),e=!1,r&&(o=n?[]:"")},u={add:function(){return o&&(n&&!e&&(c=o.length-1,a.push(n)),function i(e){st.each(e,function(e,n){st.isFunction(n)?t.unique&&u.has(n)||o.push(n):n&&n.length&&"string"!==st.type(n)&&i(n)})}(arguments),n&&!e&&l()),this},remove:function(){return st.each(arguments,function(t,e){for(var n;(n=st.inArray(e,o,n))>-1;)o.splice(n,1),n<=c&&c--}),this},has:function(t){return t?st.inArray(t,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return r=a=[],o=n="",this},disabled:function(){return!o},lock:function(){return r=a=[],n||(o=n=""),this},locked:function(){return!!r},fireWith:function(t,n){return r||(n=n||[],n=[t,n.slice?n.slice():n],a.push(n),e||l()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!i}};return u},st.extend({Deferred:function(t){var e=[["resolve","done",st.Callbacks("once memory"),"resolved"],["reject","fail",st.Callbacks("once memory"),"rejected"],["notify","progress",st.Callbacks("memory")]],n="pending",i={state:function(){return n},always:function(){return r.done(arguments).fail(arguments),this},then:function(){var t=arguments;return st.Deferred(function(n){st.each(e,function(e,s){var o=st.isFunction(t[e])&&t[e];r[s[1]](function(){var t=o&&o.apply(this,arguments);t&&st.isFunction(t.promise)?t.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[s[0]+"With"](this===i?n.promise():this,o?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?st.extend(t,i):i}},r={};return i.pipe=i.then,st.each(e,function(t,s){var o=s[2],a=s[3];i[s[1]]=o.add,a&&o.add(function(){n=a},e[1^t][2].disable,e[2][2].lock),r[s[0]]=function(){return r[s[0]+"With"](this===r?i:this,arguments),this},r[s[0]+"With"]=o.fireWith}),i.promise(r),t&&t.call(r,r),r},when:function(t){var e,n,i,r=0,s=K.call(arguments),o=s.length,a=1!==o||t&&st.isFunction(t.promise)?o:0,c=1===a?t:st.Deferred(),l=function(t,n,i){return function(r){n[t]=this,i[t]=arguments.length>1?K.call(arguments):r,i===e?c.notifyWith(n,i):--a||c.resolveWith(n,i)}};if(o>1)for(e=new Array(o),n=new Array(o),i=new Array(o);r<o;r++)s[r]&&st.isFunction(s[r].promise)?s[r].promise().progress(l(r,n,e)).done(l(r,i,s)).fail(c.reject):--a;return a||c.resolveWith(i,s),c.promise()}});var _t;st.fn.ready=function(t){return st.ready.promise().done(t),this},st.extend({isReady:!1,readyWait:1,holdReady:function(t){t?st.readyWait++:st.ready(!0)},ready:function(t){(t===!0?--st.readyWait:st.isReady)||(st.isReady=!0,t!==!0&&--st.readyWait>0||(_t.resolveWith(U,[st]),st.fn.triggerHandler&&(st(U).triggerHandler("ready"),st(U).off("ready"))))}}),st.ready.promise=function(e){return _t||(_t=st.Deferred(),"complete"===U.readyState||"loading"!==U.readyState&&!U.documentElement.doScroll?t.setTimeout(st.ready):(U.addEventListener("DOMContentLoaded",o),t.addEventListener("load",o))),_t.promise(e)},st.ready.promise();var wt=function(t,e,n,i,r,s,o){var a=0,c=t.length,l=null==n;if("object"===st.type(n)){r=!0;for(a in n)wt(t,e,a,n[a],!0,s,o)}else if(void 0!==i&&(r=!0,st.isFunction(i)||(o=!0),l&&(o?(e.call(t,i),e=null):(l=e,e=function(t,e,n){return l.call(st(t),n)})),e))for(;a<c;a++)e(t[a],n,o?i:i.call(t[a],a,e(t[a],n)));return r?t:l?e.call(t):c?e(t[0],n):s},Ct=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};a.uid=1,a.prototype={register:function(t,e){var n=e||{};return t.nodeType?t[this.expando]=n:Object.defineProperty(t,this.expando,{value:n,writable:!0,configurable:!0}),t[this.expando]},cache:function(t){if(!Ct(t))return{};var e=t[this.expando];return e||(e={},Ct(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var i,r=this.cache(t);if("string"==typeof e)r[e]=n;else for(i in e)r[i]=e[i];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][e]},access:function(t,e,n){var i;return void 0===e||e&&"string"==typeof e&&void 0===n?(i=this.get(t,e),void 0!==i?i:this.get(t,st.camelCase(e))):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,i,r,s=t[this.expando];if(void 0!==s){if(void 0===e)this.register(t);else{st.isArray(e)?i=e.concat(e.map(st.camelCase)):(r=st.camelCase(e),e in s?i=[e,r]:(i=r,i=i in s?[i]:i.match($t)||[])),n=i.length;for(;n--;)delete s[i[n]]}(void 0===e||st.isEmptyObject(s))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!st.isEmptyObject(e)}};var St=new a,Tt=new a,Ot=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,kt=/[A-Z]/g;st.extend({hasData:function(t){return Tt.hasData(t)||St.hasData(t)},data:function(t,e,n){return Tt.access(t,e,n)},removeData:function(t,e){Tt.remove(t,e)},_data:function(t,e,n){return St.access(t,e,n)},_removeData:function(t,e){St.remove(t,e)}}),st.fn.extend({data:function(t,e){var n,i,r,s=this[0],o=s&&s.attributes;if(void 0===t){if(this.length&&(r=Tt.get(s),1===s.nodeType&&!St.get(s,"hasDataAttrs"))){for(n=o.length;n--;)o[n]&&(i=o[n].name,0===i.indexOf("data-")&&(i=st.camelCase(i.slice(5)),c(s,i,r[i])));St.set(s,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){Tt.set(this,t)}):wt(this,function(e){var n,i;if(s&&void 0===e){if(n=Tt.get(s,t)||Tt.get(s,t.replace(kt,"-$&").toLowerCase()),void 0!==n)return n;if(i=st.camelCase(t),n=Tt.get(s,i),void 0!==n)return n;if(n=c(s,i,void 0),void 0!==n)return n}else i=st.camelCase(t),this.each(function(){var n=Tt.get(this,i);Tt.set(this,i,e),t.indexOf("-")>-1&&void 0!==n&&Tt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Tt.remove(this,t)})}}),st.extend({queue:function(t,e,n){var i;if(t)return e=(e||"fx")+"queue",i=St.get(t,e),n&&(!i||st.isArray(n)?i=St.access(t,e,st.makeArray(n)):i.push(n)),i||[]},dequeue:function(t,e){e=e||"fx";var n=st.queue(t,e),i=n.length,r=n.shift(),s=st._queueHooks(t,e),o=function(){st.dequeue(t,e)};"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===e&&n.unshift("inprogress"),delete s.stop,r.call(t,o,s)),!i&&s&&s.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return St.get(t,n)||St.access(t,n,{empty:st.Callbacks("once memory").add(function(){St.remove(t,[e+"queue",n])})})}}),st.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?st.queue(this[0],t):void 0===e?this:this.each(function(){var n=st.queue(this,t,e);st._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&st.dequeue(this,t)})},dequeue:function(t){return this.each(function(){st.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,i=1,r=st.Deferred(),s=this,o=this.length,a=function(){--i||r.resolveWith(s,[s])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";o--;)n=St.get(s[o],t+"queueHooks"),n&&n.empty&&(i++,n.empty.add(a));return a(),r.promise(e)}});var At=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Et=new RegExp("^(?:([+-])=|)("+At+")([a-z%]*)$","i"),jt=["Top","Right","Bottom","Left"],Mt=function(t,e){return t=e||t,"none"===st.css(t,"display")||!st.contains(t.ownerDocument,t)},Dt=/^(?:checkbox|radio)$/i,Pt=/<([\w:-]+)/,It=/^$|\/(?:java|ecma)script/i,Lt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Lt.optgroup=Lt.option,Lt.tbody=Lt.tfoot=Lt.colgroup=Lt.caption=Lt.thead,Lt.th=Lt.td;var Rt=/<|&#?\w+;/;!function(){var t=U.createDocumentFragment(),e=t.appendChild(U.createElement("div")),n=U.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),e.appendChild(n),it.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",it.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Ft=/^key/,Nt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Bt=/^([^.]*)(?:\.(.+)|)/;st.event={global:{},add:function(t,e,n,i,r){var s,o,a,c,l,u,h,f,d,p,g,v=St.get(t);if(v)for(n.handler&&(s=n,n=s.handler,r=s.selector),n.guid||(n.guid=st.guid++),(c=v.events)||(c=v.events={}),(o=v.handle)||(o=v.handle=function(e){return"undefined"!=typeof st&&st.event.triggered!==e.type?st.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match($t)||[""],l=e.length;l--;)a=Bt.exec(e[l])||[],d=g=a[1],p=(a[2]||"").split(".").sort(),d&&(h=st.event.special[d]||{},d=(r?h.delegateType:h.bindType)||d,h=st.event.special[d]||{},u=st.extend({type:d,origType:g,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&st.expr.match.needsContext.test(r),namespace:p.join(".")},s),(f=c[d])||(f=c[d]=[],f.delegateCount=0,h.setup&&h.setup.call(t,i,p,o)!==!1||t.addEventListener&&t.addEventListener(d,o)),h.add&&(h.add.call(t,u),u.handler.guid||(u.handler.guid=n.guid)),r?f.splice(f.delegateCount++,0,u):f.push(u),st.event.global[d]=!0)},remove:function(t,e,n,i,r){var s,o,a,c,l,u,h,f,d,p,g,v=St.hasData(t)&&St.get(t);if(v&&(c=v.events)){for(e=(e||"").match($t)||[""],l=e.length;l--;)if(a=Bt.exec(e[l])||[],d=g=a[1],p=(a[2]||"").split(".").sort(),d){for(h=st.event.special[d]||{},d=(i?h.delegateType:h.bindType)||d,f=c[d]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=s=f.length;s--;)u=f[s],!r&&g!==u.origType||n&&n.guid!==u.guid||a&&!a.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(f.splice(s,1),u.selector&&f.delegateCount--,h.remove&&h.remove.call(t,u));o&&!f.length&&(h.teardown&&h.teardown.call(t,p,v.handle)!==!1||st.removeEvent(t,d,v.handle),delete c[d])}else for(d in c)st.event.remove(t,d+e[l],n,i,!0);st.isEmptyObject(c)&&St.remove(t,"handle events")}},dispatch:function(t){t=st.event.fix(t);var e,n,i,r,s,o=[],a=K.call(arguments),c=(St.get(this,"events")||{})[t.type]||[],l=st.event.special[t.type]||{};if(a[0]=t,t.delegateTarget=this,!l.preDispatch||l.preDispatch.call(this,t)!==!1){for(o=st.event.handlers.call(this,t,c),e=0;(r=o[e++])&&!t.isPropagationStopped();)for(t.currentTarget=r.elem,n=0;(s=r.handlers[n++])&&!t.isImmediatePropagationStopped();)t.rnamespace&&!t.rnamespace.test(s.namespace)||(t.handleObj=s,t.data=s.data,i=((st.event.special[s.origType]||{}).handle||s.handler).apply(r.elem,a),void 0!==i&&(t.result=i)===!1&&(t.preventDefault(),t.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,t),t.result}},handlers:function(t,e){var n,i,r,s,o=[],a=e.delegateCount,c=t.target;if(a&&c.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&(c.disabled!==!0||"click"!==t.type)){for(i=[],n=0;n<a;n++)s=e[n],r=s.selector+" ",void 0===i[r]&&(i[r]=s.needsContext?st(r,this).index(c)>-1:st.find(r,this,null,[c]).length),i[r]&&i.push(s);i.length&&o.push({elem:c,handlers:i})}return a<e.length&&o.push({elem:this,handlers:e.slice(a)}),o},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,e){var n,i,r,s=e.button;return null==t.pageX&&null!=e.clientX&&(n=t.target.ownerDocument||U,i=n.documentElement,r=n.body,t.pageX=e.clientX+(i&&i.scrollLeft||r&&r.scrollLeft||0)-(i&&i.clientLeft||r&&r.clientLeft||0),t.pageY=e.clientY+(i&&i.scrollTop||r&&r.scrollTop||0)-(i&&i.clientTop||r&&r.clientTop||0)),t.which||void 0===s||(t.which=1&s?1:2&s?3:4&s?2:0),t}},fix:function(t){if(t[st.expando])return t;var e,n,i,r=t.type,s=t,o=this.fixHooks[r];for(o||(this.fixHooks[r]=o=Nt.test(r)?this.mouseHooks:Ft.test(r)?this.keyHooks:{}),i=o.props?this.props.concat(o.props):this.props,t=new st.Event(s),e=i.length;e--;)n=i[e],t[n]=s[n];return t.target||(t.target=U),3===t.target.nodeType&&(t.target=t.target.parentNode),o.filter?o.filter(t,s):t},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==g()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===g()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&st.nodeName(this,"input"))return this.click(),!1},_default:function(t){return st.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},st.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},st.Event=function(t,e){return this instanceof st.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?d:p):this.type=t,e&&st.extend(this,e),this.timeStamp=t&&t.timeStamp||st.now(),void(this[st.expando]=!0)):new st.Event(t,e)},st.Event.prototype={constructor:st.Event,isDefaultPrevented:p,isPropagationStopped:p,isImmediatePropagationStopped:p,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=d,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=d,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=d,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},st.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){st.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,i=this,r=t.relatedTarget,s=t.handleObj;return r&&(r===i||st.contains(i,r))||(t.type=s.origType,n=s.handler.apply(this,arguments),t.type=e),n}}}),st.fn.extend({on:function(t,e,n,i){return v(this,t,e,n,i)},one:function(t,e,n,i){return v(this,t,e,n,i,1)},off:function(t,e,n){var i,r;if(t&&t.preventDefault&&t.handleObj)return i=t.handleObj,st(t.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(n=e,e=void 0),n===!1&&(n=p),this.each(function(){st.event.remove(this,t,n,e)})}});var Vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,Wt=/<script|<style|<link/i,Ht=/checked\s*(?:[^=]|=\s*.checked.)/i,Xt=/^true\/(.*)/,zt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;st.extend({htmlPrefilter:function(t){return t.replace(Vt,"<$1></$2>")},clone:function(t,e,n){var i,r,s,o,a=t.cloneNode(!0),c=st.contains(t.ownerDocument,t);if(!(it.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||st.isXMLDoc(t)))for(o=u(a),s=u(t),i=0,r=s.length;i<r;i++)$(s[i],o[i]);if(e)if(n)for(s=s||u(t),o=o||u(a),i=0,r=s.length;i<r;i++)x(s[i],o[i]);else x(t,a);return o=u(a,"script"),o.length>0&&h(o,!c&&u(t,"script")),a},cleanData:function(t){for(var e,n,i,r=st.event.special,s=0;void 0!==(n=t[s]);s++)if(Ct(n)){if(e=n[St.expando]){if(e.events)for(i in e.events)r[i]?st.event.remove(n,i):st.removeEvent(n,i,e.handle);n[St.expando]=void 0}n[Tt.expando]&&(n[Tt.expando]=void 0)}}}),st.fn.extend({domManip:_,detach:function(t){return w(this,t,!0)},remove:function(t){return w(this,t)},text:function(t){return wt(this,function(t){return void 0===t?st.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return _(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=m(this,t);e.appendChild(t)}})},prepend:function(){return _(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=m(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return _(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return _(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(st.cleanData(u(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return st.clone(this,t,e)})},html:function(t){return wt(this,function(t){var e=this[0]||{},n=0,i=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Wt.test(t)&&!Lt[(Pt.exec(t)||["",""])[1].toLowerCase()]){t=st.htmlPrefilter(t);try{for(;n<i;n++)e=this[n]||{},1===e.nodeType&&(st.cleanData(u(e,!1)),e.innerHTML=t);e=0}catch(r){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return _(this,arguments,function(e){var n=this.parentNode;st.inArray(this,t)<0&&(st.cleanData(u(this)),n&&n.replaceChild(e,this))},t)}}),st.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){st.fn[t]=function(t){for(var n,i=[],r=st(t),s=r.length-1,o=0;o<=s;o++)n=o===s?this:this.clone(!0),st(r[o])[e](n),Z.apply(i,n.get());return this.pushStack(i)}});var Gt,qt={HTML:"block",BODY:"block"},Yt=/^margin/,Ut=new RegExp("^("+At+")(?!px)[a-z%]+$","i"),Kt=function(e){var n=e.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(e)},Jt=function(t,e,n,i){var r,s,o={};for(s in e)o[s]=t.style[s],t.style[s]=e[s];r=n.apply(t,i||[]);for(s in e)t.style[s]=o[s];return r},Zt=U.documentElement;!function(){function e(){a.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",Zt.appendChild(o);var e=t.getComputedStyle(a);n="1%"!==e.top,s="2px"===e.marginLeft,i="4px"===e.width,a.style.marginRight="50%",r="4px"===e.marginRight,Zt.removeChild(o)}var n,i,r,s,o=U.createElement("div"),a=U.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",it.clearCloneStyle="content-box"===a.style.backgroundClip,o.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",o.appendChild(a),st.extend(it,{pixelPosition:function(){return e(),n},boxSizingReliable:function(){return null==i&&e(),i},pixelMarginRight:function(){return null==i&&e(),r},reliableMarginLeft:function(){return null==i&&e(),s},reliableMarginRight:function(){var e,n=a.appendChild(U.createElement("div"));return n.style.cssText=a.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",n.style.marginRight=n.style.width="0",a.style.width="1px",Zt.appendChild(o),e=!parseFloat(t.getComputedStyle(n).marginRight),Zt.removeChild(o),a.removeChild(n),e}}))}();var Qt=/^(none|table(?!-c[ea]).+)/,te={position:"absolute",visibility:"hidden",display:"block"},ee={letterSpacing:"0",fontWeight:"400"},ne=["Webkit","O","Moz","ms"],ie=U.createElement("div").style;st.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=T(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(t,e,n,i){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,s,o,a=st.camelCase(e),c=t.style;return e=st.cssProps[a]||(st.cssProps[a]=k(a)||a),o=st.cssHooks[e]||st.cssHooks[a],void 0===n?o&&"get"in o&&void 0!==(r=o.get(t,!1,i))?r:c[e]:(s=typeof n,"string"===s&&(r=Et.exec(n))&&r[1]&&(n=l(t,e,r),s="number"),null!=n&&n===n&&("number"===s&&(n+=r&&r[3]||(st.cssNumber[a]?"":"px")),it.clearCloneStyle||""!==n||0!==e.indexOf("background")||(c[e]="inherit"),o&&"set"in o&&void 0===(n=o.set(t,n,i))||(c[e]=n)),void 0)}},css:function(t,e,n,i){var r,s,o,a=st.camelCase(e);return e=st.cssProps[a]||(st.cssProps[a]=k(a)||a),o=st.cssHooks[e]||st.cssHooks[a],o&&"get"in o&&(r=o.get(t,!0,n)),void 0===r&&(r=T(t,e,i)),"normal"===r&&e in ee&&(r=ee[e]),""===n||n?(s=parseFloat(r),n===!0||isFinite(s)?s||0:r):r}}),st.each(["height","width"],function(t,e){st.cssHooks[e]={get:function(t,n,i){if(n)return Qt.test(st.css(t,"display"))&&0===t.offsetWidth?Jt(t,te,function(){return j(t,e,i)}):j(t,e,i)},set:function(t,n,i){var r,s=i&&Kt(t),o=i&&E(t,e,i,"border-box"===st.css(t,"boxSizing",!1,s),s);return o&&(r=Et.exec(n))&&"px"!==(r[3]||"px")&&(t.style[e]=n,n=st.css(t,e)),A(t,n,o)}}}),st.cssHooks.marginLeft=O(it.reliableMarginLeft,function(t,e){if(e)return(parseFloat(T(t,"marginLeft"))||t.getBoundingClientRect().left-Jt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),st.cssHooks.marginRight=O(it.reliableMarginRight,function(t,e){if(e)return Jt(t,{display:"inline-block"},T,[t,"marginRight"])}),st.each({margin:"",padding:"",border:"Width"},function(t,e){st.cssHooks[t+e]={expand:function(n){for(var i=0,r={},s="string"==typeof n?n.split(" "):[n];i<4;i++)r[t+jt[i]+e]=s[i]||s[i-2]||s[0];return r}},Yt.test(t)||(st.cssHooks[t+e].set=A)}),st.fn.extend({css:function(t,e){return wt(this,function(t,e,n){var i,r,s={},o=0;if(st.isArray(e)){for(i=Kt(t),r=e.length;o<r;o++)s[e[o]]=st.css(t,e[o],!1,i);return s}return void 0!==n?st.style(t,e,n):st.css(t,e)},t,e,arguments.length>1)},show:function(){return M(this,!0)},hide:function(){return M(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Mt(this)?st(this).show():st(this).hide()})}}),st.Tween=D,D.prototype={constructor:D,init:function(t,e,n,i,r,s){this.elem=t,this.prop=n,this.easing=r||st.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=i,this.unit=s||(st.cssNumber[n]?"":"px")},cur:function(){var t=D.propHooks[this.prop];return t&&t.get?t.get(this):D.propHooks._default.get(this)},run:function(t){var e,n=D.propHooks[this.prop];return this.options.duration?this.pos=e=st.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):D.propHooks._default.set(this),this}},D.prototype.init.prototype=D.prototype,D.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=st.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){st.fx.step[t.prop]?st.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[st.cssProps[t.prop]]&&!st.cssHooks[t.prop]?t.elem[t.prop]=t.now:st.style(t.elem,t.prop,t.now+t.unit)}}},D.propHooks.scrollTop=D.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},st.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},st.fx=D.prototype.init,st.fx.step={};var re,se,oe=/^(?:toggle|show|hide)$/,ae=/queueHooks$/;st.Animation=st.extend(N,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return l(n.elem,t,Et.exec(e),n),n}]},tweener:function(t,e){st.isFunction(t)?(e=t,t=["*"]):t=t.match($t);for(var n,i=0,r=t.length;i<r;i++)n=t[i],N.tweeners[n]=N.tweeners[n]||[],N.tweeners[n].unshift(e)},prefilters:[R],prefilter:function(t,e){e?N.prefilters.unshift(t):N.prefilters.push(t)}}),st.speed=function(t,e,n){var i=t&&"object"==typeof t?st.extend({},t):{complete:n||!n&&e||st.isFunction(t)&&t,duration:t,easing:n&&e||e&&!st.isFunction(e)&&e};return i.duration=st.fx.off?0:"number"==typeof i.duration?i.duration:i.duration in st.fx.speeds?st.fx.speeds[i.duration]:st.fx.speeds._default,null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){st.isFunction(i.old)&&i.old.call(this),i.queue&&st.dequeue(this,i.queue)},i},st.fn.extend({fadeTo:function(t,e,n,i){return this.filter(Mt).css("opacity",0).show().end().animate({opacity:e},t,n,i)},animate:function(t,e,n,i){var r=st.isEmptyObject(t),s=st.speed(e,n,i),o=function(){var e=N(this,st.extend({},t),s);(r||St.get(this,"finish"))&&e.stop(!0)};return o.finish=o,r||s.queue===!1?this.each(o):this.queue(s.queue,o)},stop:function(t,e,n){var i=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",s=st.timers,o=St.get(this);if(r)o[r]&&o[r].stop&&i(o[r]);else for(r in o)o[r]&&o[r].stop&&ae.test(r)&&i(o[r]);for(r=s.length;r--;)s[r].elem!==this||null!=t&&s[r].queue!==t||(s[r].anim.stop(n),e=!1,s.splice(r,1));!e&&n||st.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,n=St.get(this),i=n[t+"queue"],r=n[t+"queueHooks"],s=st.timers,o=i?i.length:0;for(n.finish=!0,st.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===t&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<o;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete n.finish})}}),st.each(["toggle","show","hide"],function(t,e){var n=st.fn[e];st.fn[e]=function(t,i,r){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(I(e,!0),t,i,r)}}),st.each({slideDown:I("show"),slideUp:I("hide"),slideToggle:I("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){st.fn[t]=function(t,n,i){return this.animate(e,t,n,i)}}),st.timers=[],st.fx.tick=function(){var t,e=0,n=st.timers;for(re=st.now();e<n.length;e++)t=n[e],t()||n[e]!==t||n.splice(e--,1);n.length||st.fx.stop(),re=void 0},st.fx.timer=function(t){
st.timers.push(t),t()?st.fx.start():st.timers.pop()},st.fx.interval=13,st.fx.start=function(){se||(se=t.setInterval(st.fx.tick,st.fx.interval))},st.fx.stop=function(){t.clearInterval(se),se=null},st.fx.speeds={slow:600,fast:200,_default:400},st.fn.delay=function(e,n){return e=st.fx?st.fx.speeds[e]||e:e,n=n||"fx",this.queue(n,function(n,i){var r=t.setTimeout(n,e);i.stop=function(){t.clearTimeout(r)}})},function(){var t=U.createElement("input"),e=U.createElement("select"),n=e.appendChild(U.createElement("option"));t.type="checkbox",it.checkOn=""!==t.value,it.optSelected=n.selected,e.disabled=!0,it.optDisabled=!n.disabled,t=U.createElement("input"),t.value="t",t.type="radio",it.radioValue="t"===t.value}();var ce,le=st.expr.attrHandle;st.fn.extend({attr:function(t,e){return wt(this,st.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){st.removeAttr(this,t)})}}),st.extend({attr:function(t,e,n){var i,r,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return"undefined"==typeof t.getAttribute?st.prop(t,e,n):(1===s&&st.isXMLDoc(t)||(e=e.toLowerCase(),r=st.attrHooks[e]||(st.expr.match.bool.test(e)?ce:void 0)),void 0!==n?null===n?void st.removeAttr(t,e):r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:(t.setAttribute(e,n+""),n):r&&"get"in r&&null!==(i=r.get(t,e))?i:(i=st.find.attr(t,e),null==i?void 0:i))},attrHooks:{type:{set:function(t,e){if(!it.radioValue&&"radio"===e&&st.nodeName(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,i,r=0,s=e&&e.match($t);if(s&&1===t.nodeType)for(;n=s[r++];)i=st.propFix[n]||n,st.expr.match.bool.test(n)&&(t[i]=!1),t.removeAttribute(n)}}),ce={set:function(t,e,n){return e===!1?st.removeAttr(t,n):t.setAttribute(n,n),n}},st.each(st.expr.match.bool.source.match(/\w+/g),function(t,e){var n=le[e]||st.find.attr;le[e]=function(t,e,i){var r,s;return i||(s=le[e],le[e]=r,r=null!=n(t,e,i)?e.toLowerCase():null,le[e]=s),r}});var ue=/^(?:input|select|textarea|button)$/i,he=/^(?:a|area)$/i;st.fn.extend({prop:function(t,e){return wt(this,st.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[st.propFix[t]||t]})}}),st.extend({prop:function(t,e,n){var i,r,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&st.isXMLDoc(t)||(e=st.propFix[e]||e,r=st.propHooks[e]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:t[e]=n:r&&"get"in r&&null!==(i=r.get(t,e))?i:t[e]},propHooks:{tabIndex:{get:function(t){var e=st.find.attr(t,"tabindex");return e?parseInt(e,10):ue.test(t.nodeName)||he.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),it.optSelected||(st.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),st.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){st.propFix[this.toLowerCase()]=this});var fe=/[\t\r\n\f]/g;st.fn.extend({addClass:function(t){var e,n,i,r,s,o,a,c=0;if(st.isFunction(t))return this.each(function(e){st(this).addClass(t.call(this,e,B(this)))});if("string"==typeof t&&t)for(e=t.match($t)||[];n=this[c++];)if(r=B(n),i=1===n.nodeType&&(" "+r+" ").replace(fe," ")){for(o=0;s=e[o++];)i.indexOf(" "+s+" ")<0&&(i+=s+" ");a=st.trim(i),r!==a&&n.setAttribute("class",a)}return this},removeClass:function(t){var e,n,i,r,s,o,a,c=0;if(st.isFunction(t))return this.each(function(e){st(this).removeClass(t.call(this,e,B(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match($t)||[];n=this[c++];)if(r=B(n),i=1===n.nodeType&&(" "+r+" ").replace(fe," ")){for(o=0;s=e[o++];)for(;i.indexOf(" "+s+" ")>-1;)i=i.replace(" "+s+" "," ");a=st.trim(i),r!==a&&n.setAttribute("class",a)}return this},toggleClass:function(t,e){var n=typeof t;return"boolean"==typeof e&&"string"===n?e?this.addClass(t):this.removeClass(t):st.isFunction(t)?this.each(function(n){st(this).toggleClass(t.call(this,n,B(this),e),e)}):this.each(function(){var e,i,r,s;if("string"===n)for(i=0,r=st(this),s=t.match($t)||[];e=s[i++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==n||(e=B(this),e&&St.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":St.get(this,"__className__")||""))})},hasClass:function(t){var e,n,i=0;for(e=" "+t+" ";n=this[i++];)if(1===n.nodeType&&(" "+B(n)+" ").replace(fe," ").indexOf(e)>-1)return!0;return!1}});var de=/\r/g,pe=/[\x20\t\r\n\f]+/g;st.fn.extend({val:function(t){var e,n,i,r=this[0];{if(arguments.length)return i=st.isFunction(t),this.each(function(n){var r;1===this.nodeType&&(r=i?t.call(this,n,st(this).val()):t,null==r?r="":"number"==typeof r?r+="":st.isArray(r)&&(r=st.map(r,function(t){return null==t?"":t+""})),e=st.valHooks[this.type]||st.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))});if(r)return e=st.valHooks[r.type]||st.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(n=e.get(r,"value"))?n:(n=r.value,"string"==typeof n?n.replace(de,""):null==n?"":n)}}}),st.extend({valHooks:{option:{get:function(t){var e=st.find.attr(t,"value");return null!=e?e:st.trim(st.text(t)).replace(pe," ")}},select:{get:function(t){for(var e,n,i=t.options,r=t.selectedIndex,s="select-one"===t.type||r<0,o=s?null:[],a=s?r+1:i.length,c=r<0?a:s?r:0;c<a;c++)if(n=i[c],(n.selected||c===r)&&(it.optDisabled?!n.disabled:null===n.getAttribute("disabled"))&&(!n.parentNode.disabled||!st.nodeName(n.parentNode,"optgroup"))){if(e=st(n).val(),s)return e;o.push(e)}return o},set:function(t,e){for(var n,i,r=t.options,s=st.makeArray(e),o=r.length;o--;)i=r[o],(i.selected=st.inArray(st.valHooks.option.get(i),s)>-1)&&(n=!0);return n||(t.selectedIndex=-1),s}}}}),st.each(["radio","checkbox"],function(){st.valHooks[this]={set:function(t,e){if(st.isArray(e))return t.checked=st.inArray(st(t).val(),e)>-1}},it.checkOn||(st.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var ge=/^(?:focusinfocus|focusoutblur)$/;st.extend(st.event,{trigger:function(e,n,i,r){var s,o,a,c,l,u,h,f=[i||U],d=nt.call(e,"type")?e.type:e,p=nt.call(e,"namespace")?e.namespace.split("."):[];if(o=a=i=i||U,3!==i.nodeType&&8!==i.nodeType&&!ge.test(d+st.event.triggered)&&(d.indexOf(".")>-1&&(p=d.split("."),d=p.shift(),p.sort()),l=d.indexOf(":")<0&&"on"+d,e=e[st.expando]?e:new st.Event(d,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),n=null==n?[e]:st.makeArray(n,[e]),h=st.event.special[d]||{},r||!h.trigger||h.trigger.apply(i,n)!==!1)){if(!r&&!h.noBubble&&!st.isWindow(i)){for(c=h.delegateType||d,ge.test(c+d)||(o=o.parentNode);o;o=o.parentNode)f.push(o),a=o;a===(i.ownerDocument||U)&&f.push(a.defaultView||a.parentWindow||t)}for(s=0;(o=f[s++])&&!e.isPropagationStopped();)e.type=s>1?c:h.bindType||d,u=(St.get(o,"events")||{})[e.type]&&St.get(o,"handle"),u&&u.apply(o,n),u=l&&o[l],u&&u.apply&&Ct(o)&&(e.result=u.apply(o,n),e.result===!1&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||h._default&&h._default.apply(f.pop(),n)!==!1||!Ct(i)||l&&st.isFunction(i[d])&&!st.isWindow(i)&&(a=i[l],a&&(i[l]=null),st.event.triggered=d,i[d](),st.event.triggered=void 0,a&&(i[l]=a)),e.result}},simulate:function(t,e,n){var i=st.extend(new st.Event,n,{type:t,isSimulated:!0});st.event.trigger(i,null,e)}}),st.fn.extend({trigger:function(t,e){return this.each(function(){st.event.trigger(t,e,this)})},triggerHandler:function(t,e){var n=this[0];if(n)return st.event.trigger(t,e,n,!0)}}),st.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,e){st.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}),st.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),it.focusin="onfocusin"in t,it.focusin||st.each({focus:"focusin",blur:"focusout"},function(t,e){var n=function(t){st.event.simulate(e,t.target,st.event.fix(t))};st.event.special[e]={setup:function(){var i=this.ownerDocument||this,r=St.access(i,e);r||i.addEventListener(t,n,!0),St.access(i,e,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=St.access(i,e)-1;r?St.access(i,e,r):(i.removeEventListener(t,n,!0),St.remove(i,e))}}});var ve=t.location,me=st.now(),ye=/\?/;st.parseJSON=function(t){return JSON.parse(t+"")},st.parseXML=function(e){var n;if(!e||"string"!=typeof e)return null;try{n=(new t.DOMParser).parseFromString(e,"text/xml")}catch(i){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||st.error("Invalid XML: "+e),n};var be=/#.*$/,xe=/([?&])_=[^&]*/,$e=/^(.*?):[ \t]*([^\r\n]*)$/gm,_e=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,we=/^(?:GET|HEAD)$/,Ce=/^\/\//,Se={},Te={},Oe="*/".concat("*"),ke=U.createElement("a");ke.href=ve.href,st.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ve.href,type:"GET",isLocal:_e.test(ve.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Oe,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":st.parseJSON,"text xml":st.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?H(H(t,st.ajaxSettings),e):H(st.ajaxSettings,t)},ajaxPrefilter:V(Se),ajaxTransport:V(Te),ajax:function(e,n){function i(e,n,i,a){var l,h,y,b,$,w=n;2!==x&&(x=2,c&&t.clearTimeout(c),r=void 0,o=a||"",_.readyState=e>0?4:0,l=e>=200&&e<300||304===e,i&&(b=X(f,_,i)),b=z(f,b,_,l),l?(f.ifModified&&($=_.getResponseHeader("Last-Modified"),$&&(st.lastModified[s]=$),$=_.getResponseHeader("etag"),$&&(st.etag[s]=$)),204===e||"HEAD"===f.type?w="nocontent":304===e?w="notmodified":(w=b.state,h=b.data,y=b.error,l=!y)):(y=w,!e&&w||(w="error",e<0&&(e=0))),_.status=e,_.statusText=(n||w)+"",l?g.resolveWith(d,[h,w,_]):g.rejectWith(d,[_,w,y]),_.statusCode(m),m=void 0,u&&p.trigger(l?"ajaxSuccess":"ajaxError",[_,f,l?h:y]),v.fireWith(d,[_,w]),u&&(p.trigger("ajaxComplete",[_,f]),--st.active||st.event.trigger("ajaxStop")))}"object"==typeof e&&(n=e,e=void 0),n=n||{};var r,s,o,a,c,l,u,h,f=st.ajaxSetup({},n),d=f.context||f,p=f.context&&(d.nodeType||d.jquery)?st(d):st.event,g=st.Deferred(),v=st.Callbacks("once memory"),m=f.statusCode||{},y={},b={},x=0,$="canceled",_={readyState:0,getResponseHeader:function(t){var e;if(2===x){if(!a)for(a={};e=$e.exec(o);)a[e[1].toLowerCase()]=e[2];e=a[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===x?o:null},setRequestHeader:function(t,e){var n=t.toLowerCase();return x||(t=b[n]=b[n]||t,y[t]=e),this},overrideMimeType:function(t){return x||(f.mimeType=t),this},statusCode:function(t){var e;if(t)if(x<2)for(e in t)m[e]=[m[e],t[e]];else _.always(t[_.status]);return this},abort:function(t){var e=t||$;return r&&r.abort(e),i(0,e),this}};if(g.promise(_).complete=v.add,_.success=_.done,_.error=_.fail,f.url=((e||f.url||ve.href)+"").replace(be,"").replace(Ce,ve.protocol+"//"),f.type=n.method||n.type||f.method||f.type,f.dataTypes=st.trim(f.dataType||"*").toLowerCase().match($t)||[""],null==f.crossDomain){l=U.createElement("a");try{l.href=f.url,l.href=l.href,f.crossDomain=ke.protocol+"//"+ke.host!=l.protocol+"//"+l.host}catch(w){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=st.param(f.data,f.traditional)),W(Se,f,n,_),2===x)return _;u=st.event&&f.global,u&&0===st.active++&&st.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!we.test(f.type),s=f.url,f.hasContent||(f.data&&(s=f.url+=(ye.test(s)?"&":"?")+f.data,delete f.data),f.cache===!1&&(f.url=xe.test(s)?s.replace(xe,"$1_="+me++):s+(ye.test(s)?"&":"?")+"_="+me++)),f.ifModified&&(st.lastModified[s]&&_.setRequestHeader("If-Modified-Since",st.lastModified[s]),st.etag[s]&&_.setRequestHeader("If-None-Match",st.etag[s])),(f.data&&f.hasContent&&f.contentType!==!1||n.contentType)&&_.setRequestHeader("Content-Type",f.contentType),_.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Oe+"; q=0.01":""):f.accepts["*"]);for(h in f.headers)_.setRequestHeader(h,f.headers[h]);if(f.beforeSend&&(f.beforeSend.call(d,_,f)===!1||2===x))return _.abort();$="abort";for(h in{success:1,error:1,complete:1})_[h](f[h]);if(r=W(Te,f,n,_)){if(_.readyState=1,u&&p.trigger("ajaxSend",[_,f]),2===x)return _;f.async&&f.timeout>0&&(c=t.setTimeout(function(){_.abort("timeout")},f.timeout));try{x=1,r.send(y,i)}catch(w){if(!(x<2))throw w;i(-1,w)}}else i(-1,"No Transport");return _},getJSON:function(t,e,n){return st.get(t,e,n,"json")},getScript:function(t,e){return st.get(t,void 0,e,"script")}}),st.each(["get","post"],function(t,e){st[e]=function(t,n,i,r){return st.isFunction(n)&&(r=r||i,i=n,n=void 0),st.ajax(st.extend({url:t,type:e,dataType:r,data:n,success:i},st.isPlainObject(t)&&t))}}),st._evalUrl=function(t){return st.ajax({url:t,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},st.fn.extend({wrapAll:function(t){var e;return st.isFunction(t)?this.each(function(e){st(this).wrapAll(t.call(this,e))}):(this[0]&&(e=st(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this)},wrapInner:function(t){return st.isFunction(t)?this.each(function(e){st(this).wrapInner(t.call(this,e))}):this.each(function(){var e=st(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)})},wrap:function(t){var e=st.isFunction(t);return this.each(function(n){st(this).wrapAll(e?t.call(this,n):t)})},unwrap:function(){return this.parent().each(function(){st.nodeName(this,"body")||st(this).replaceWith(this.childNodes)}).end()}}),st.expr.filters.hidden=function(t){return!st.expr.filters.visible(t)},st.expr.filters.visible=function(t){return t.offsetWidth>0||t.offsetHeight>0||t.getClientRects().length>0};var Ae=/%20/g,Ee=/\[\]$/,je=/\r?\n/g,Me=/^(?:submit|button|image|reset|file)$/i,De=/^(?:input|select|textarea|keygen)/i;st.param=function(t,e){var n,i=[],r=function(t,e){e=st.isFunction(e)?e():null==e?"":e,i[i.length]=encodeURIComponent(t)+"="+encodeURIComponent(e)};if(void 0===e&&(e=st.ajaxSettings&&st.ajaxSettings.traditional),st.isArray(t)||t.jquery&&!st.isPlainObject(t))st.each(t,function(){r(this.name,this.value)});else for(n in t)G(n,t[n],e,r);return i.join("&").replace(Ae,"+")},st.fn.extend({serialize:function(){return st.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=st.prop(this,"elements");return t?st.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!st(this).is(":disabled")&&De.test(this.nodeName)&&!Me.test(t)&&(this.checked||!Dt.test(t))}).map(function(t,e){var n=st(this).val();return null==n?null:st.isArray(n)?st.map(n,function(t){return{name:e.name,value:t.replace(je,"\r\n")}}):{name:e.name,value:n.replace(je,"\r\n")}}).get()}}),st.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(e){}};var Pe={0:200,1223:204},Ie=st.ajaxSettings.xhr();it.cors=!!Ie&&"withCredentials"in Ie,it.ajax=Ie=!!Ie,st.ajaxTransport(function(e){var n,i;if(it.cors||Ie&&!e.crossDomain)return{send:function(r,s){var o,a=e.xhr();if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(o in e.xhrFields)a[o]=e.xhrFields[o];e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(o in r)a.setRequestHeader(o,r[o]);n=function(t){return function(){n&&(n=i=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?s(0,"error"):s(a.status,a.statusText):s(Pe[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=n(),i=a.onerror=n("error"),void 0!==a.onabort?a.onabort=i:a.onreadystatechange=function(){4===a.readyState&&t.setTimeout(function(){n&&i()})},n=n("abort");try{a.send(e.hasContent&&e.data||null)}catch(c){if(n)throw c}},abort:function(){n&&n()}}}),st.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return st.globalEval(t),t}}}),st.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),st.ajaxTransport("script",function(t){if(t.crossDomain){var e,n;return{send:function(i,r){e=st("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&r("error"===t.type?404:200,t.type)}),U.head.appendChild(e[0])},abort:function(){n&&n()}}}});var Le=[],Re=/(=)\?(?=&|$)|\?\?/;st.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Le.pop()||st.expando+"_"+me++;return this[t]=!0,t}}),st.ajaxPrefilter("json jsonp",function(e,n,i){var r,s,o,a=e.jsonp!==!1&&(Re.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Re.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=st.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Re,"$1"+r):e.jsonp!==!1&&(e.url+=(ye.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||st.error(r+" was not called"),o[0]},e.dataTypes[0]="json",s=t[r],t[r]=function(){o=arguments},i.always(function(){void 0===s?st(t).removeProp(r):t[r]=s,e[r]&&(e.jsonpCallback=n.jsonpCallback,Le.push(r)),o&&st.isFunction(s)&&s(o[0]),o=s=void 0}),"script"}),st.parseHTML=function(t,e,n){if(!t||"string"!=typeof t)return null;"boolean"==typeof e&&(n=e,e=!1),e=e||U;var i=pt.exec(t),r=!n&&[];return i?[e.createElement(i[1])]:(i=f([t],e,r),r&&r.length&&st(r).remove(),st.merge([],i.childNodes))};var Fe=st.fn.load;st.fn.load=function(t,e,n){if("string"!=typeof t&&Fe)return Fe.apply(this,arguments);var i,r,s,o=this,a=t.indexOf(" ");return a>-1&&(i=st.trim(t.slice(a)),t=t.slice(0,a)),st.isFunction(e)?(n=e,e=void 0):e&&"object"==typeof e&&(r="POST"),o.length>0&&st.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){s=arguments,o.html(i?st("<div>").append(st.parseHTML(t)).find(i):t)}).always(n&&function(t,e){o.each(function(){n.apply(this,s||[t.responseText,e,t])})}),this},st.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){st.fn[e]=function(t){return this.on(e,t)}}),st.expr.filters.animated=function(t){return st.grep(st.timers,function(e){return t===e.elem}).length},st.offset={setOffset:function(t,e,n){var i,r,s,o,a,c,l,u=st.css(t,"position"),h=st(t),f={};"static"===u&&(t.style.position="relative"),a=h.offset(),s=st.css(t,"top"),c=st.css(t,"left"),l=("absolute"===u||"fixed"===u)&&(s+c).indexOf("auto")>-1,l?(i=h.position(),o=i.top,r=i.left):(o=parseFloat(s)||0,r=parseFloat(c)||0),st.isFunction(e)&&(e=e.call(t,n,st.extend({},a))),null!=e.top&&(f.top=e.top-a.top+o),null!=e.left&&(f.left=e.left-a.left+r),"using"in e?e.using.call(t,f):h.css(f)}},st.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){st.offset.setOffset(this,t,e)});var e,n,i=this[0],r={top:0,left:0},s=i&&i.ownerDocument;if(s)return e=s.documentElement,st.contains(e,i)?(r=i.getBoundingClientRect(),n=q(s),{top:r.top+n.pageYOffset-e.clientTop,left:r.left+n.pageXOffset-e.clientLeft}):r},position:function(){if(this[0]){var t,e,n=this[0],i={top:0,left:0};return"fixed"===st.css(n,"position")?e=n.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),st.nodeName(t[0],"html")||(i=t.offset()),i.top+=st.css(t[0],"borderTopWidth",!0),i.left+=st.css(t[0],"borderLeftWidth",!0)),{top:e.top-i.top-st.css(n,"marginTop",!0),left:e.left-i.left-st.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===st.css(t,"position");)t=t.offsetParent;return t||Zt})}}),st.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var n="pageYOffset"===e;st.fn[t]=function(i){return wt(this,function(t,i,r){var s=q(t);return void 0===r?s?s[e]:t[i]:void(s?s.scrollTo(n?s.pageXOffset:r,n?r:s.pageYOffset):t[i]=r)},t,i,arguments.length)}}),st.each(["top","left"],function(t,e){st.cssHooks[e]=O(it.pixelPosition,function(t,n){if(n)return n=T(t,e),Ut.test(n)?st(t).position()[e]+"px":n})}),st.each({Height:"height",Width:"width"},function(t,e){st.each({padding:"inner"+t,content:e,"":"outer"+t},function(n,i){st.fn[i]=function(i,r){var s=arguments.length&&(n||"boolean"!=typeof i),o=n||(i===!0||r===!0?"margin":"border");return wt(this,function(e,n,i){var r;return st.isWindow(e)?e.document.documentElement["client"+t]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+t],r["scroll"+t],e.body["offset"+t],r["offset"+t],r["client"+t])):void 0===i?st.css(e,n,o):st.style(e,n,i,o)},e,s?i:void 0,s,null)}})}),st.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,i){return this.on(e,t,n,i)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)},size:function(){return this.length}}),st.fn.andSelf=st.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return st});var Ne=t.jQuery,Be=t.$;return st.noConflict=function(e){return t.$===st&&(t.$=Be),e&&t.jQuery===st&&(t.jQuery=Ne),st},e||(t.jQuery=t.$=st),st}),function(t){"use strict";function e(t){return function(){var e,n=arguments[0];for(e="["+(t?t+":":"")+n+"] http://errors.angularjs.org/1.5.8/"+(t?t+"/":"")+n,n=1;n<arguments.length;n++){e=e+(1==n?"?":"&")+"p"+(n-1)+"=";var i,r=encodeURIComponent;i=arguments[n],i="function"==typeof i?i.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof i?"undefined":"string"!=typeof i?JSON.stringify(i):i,e+=r(i)}return Error(e)}}function n(t){if(null==t||S(t))return!1;if(oi(t)||x(t)||zn&&t instanceof zn)return!0;var e="length"in Object(t)&&t.length;return $(e)&&(0<=e&&(e-1 in t||t instanceof Array)||"function"==typeof t.item)}function i(t,e,r){var s,o;if(t)if(w(t))for(s in t)"prototype"==s||"length"==s||"name"==s||t.hasOwnProperty&&!t.hasOwnProperty(s)||e.call(r,t[s],s,t);else if(oi(t)||n(t)){var a="object"!=typeof t;for(s=0,o=t.length;s<o;s++)(a||s in t)&&e.call(r,t[s],s,t)}else if(t.forEach&&t.forEach!==i)t.forEach(e,r,t);else if(b(t))for(s in t)e.call(r,t[s],s,t);else if("function"==typeof t.hasOwnProperty)for(s in t)t.hasOwnProperty(s)&&e.call(r,t[s],s,t);else for(s in t)Un.call(t,s)&&e.call(r,t[s],s,t);return t}function r(t,e,n){for(var i=Object.keys(t).sort(),r=0;r<i.length;r++)e.call(n,t[i[r]],i[r]);return i}function s(t){return function(e,n){t(n,e)}}function o(){return++si}function a(t,e,n){for(var i=t.$$hashKey,r=0,s=e.length;r<s;++r){var o=e[r];if(y(o)||w(o))for(var c=Object.keys(o),l=0,u=c.length;l<u;l++){var h=c[l],f=o[h];n&&y(f)?_(f)?t[h]=new Date(f.valueOf()):C(f)?t[h]=new RegExp(f):f.nodeName?t[h]=f.cloneNode(!0):A(f)?t[h]=f.clone():(y(t[h])||(t[h]=oi(f)?[]:{}),a(t[h],[f],!0)):t[h]=f}}return i?t.$$hashKey=i:delete t.$$hashKey,t}function c(t){return a(t,Zn.call(arguments,1),!1)}function l(t){return a(t,Zn.call(arguments,1),!0)}function u(t){return parseInt(t,10)}function h(t,e){return c(Object.create(t),e)}function f(){}function d(t){return t}function p(t){return function(){return t}}function g(t){return w(t.toString)&&t.toString!==ei}function v(t){return"undefined"==typeof t}function m(t){return"undefined"!=typeof t}function y(t){return null!==t&&"object"==typeof t}function b(t){return null!==t&&"object"==typeof t&&!ni(t)}function x(t){return"string"==typeof t}function $(t){return"number"==typeof t}function _(t){return"[object Date]"===ei.call(t)}function w(t){return"function"==typeof t}function C(t){return"[object RegExp]"===ei.call(t)}function S(t){return t&&t.window===t}function T(t){return t&&t.$evalAsync&&t.$watch}function O(t){return"boolean"==typeof t}function k(t){return t&&$(t.length)&&ai.test(ei.call(t))}function A(t){return!(!t||!(t.nodeName||t.prop&&t.attr&&t.find))}function E(t){var e={};t=t.split(",");var n;for(n=0;n<t.length;n++)e[t[n]]=!0;return e}function j(t){return Kn(t.nodeName||t[0]&&t[0].nodeName)}function M(t,e){var n=t.indexOf(e);return 0<=n&&t.splice(n,1),n}function D(t,e){function n(t,e){var n,i=e.$$hashKey;if(oi(t)){n=0;for(var s=t.length;n<s;n++)e.push(r(t[n]))}else if(b(t))for(n in t)e[n]=r(t[n]);else if(t&&"function"==typeof t.hasOwnProperty)for(n in t)t.hasOwnProperty(n)&&(e[n]=r(t[n]));else for(n in t)Un.call(t,n)&&(e[n]=r(t[n]));return i?e.$$hashKey=i:delete e.$$hashKey,e}function r(t){if(!y(t))return t;var e=o.indexOf(t);if(-1!==e)return a[e];if(S(t)||T(t))throw ii("cpws");var e=!1,i=s(t);return void 0===i&&(i=oi(t)?[]:Object.create(ni(t)),e=!0),o.push(t),a.push(i),e?n(t,i):i}function s(t){switch(ei.call(t)){case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Float32Array]":case"[object Float64Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return new t.constructor(r(t.buffer),t.byteOffset,t.length);case"[object ArrayBuffer]":if(!t.slice){var e=new ArrayBuffer(t.byteLength);return new Uint8Array(e).set(new Uint8Array(t)),e}return t.slice(0);case"[object Boolean]":case"[object Number]":case"[object String]":case"[object Date]":return new t.constructor(t.valueOf());case"[object RegExp]":return e=new RegExp(t.source,t.toString().match(/[^\/]*$/)[0]),e.lastIndex=t.lastIndex,e;case"[object Blob]":return new t.constructor([t],{type:t.type})}if(w(t.cloneNode))return t.cloneNode(!0)}var o=[],a=[];if(e){if(k(e)||"[object ArrayBuffer]"===ei.call(e))throw ii("cpta");if(t===e)throw ii("cpi");return oi(e)?e.length=0:i(e,function(t,n){"$$hashKey"!==n&&delete e[n]}),o.push(t),a.push(e),n(t,e)}return r(t)}function P(t,e){if(t===e)return!0;if(null===t||null===e)return!1;if(t!==t&&e!==e)return!0;var n,i=typeof t;if(i==typeof e&&"object"==i){if(!oi(t)){if(_(t))return!!_(e)&&P(t.getTime(),e.getTime());if(C(t))return!!C(e)&&t.toString()==e.toString();if(T(t)||T(e)||S(t)||S(e)||oi(e)||_(e)||C(e))return!1;i=ot();for(n in t)if("$"!==n.charAt(0)&&!w(t[n])){if(!P(t[n],e[n]))return!1;i[n]=!0}for(n in e)if(!(n in i)&&"$"!==n.charAt(0)&&m(e[n])&&!w(e[n]))return!1;return!0}if(!oi(e))return!1;if((i=t.length)==e.length){for(n=0;n<i;n++)if(!P(t[n],e[n]))return!1;return!0}}return!1}function I(t,e,n){return t.concat(Zn.call(e,n))}function L(t,e){var n=2<arguments.length?Zn.call(arguments,2):[];return!w(e)||e instanceof RegExp?e:n.length?function(){return arguments.length?e.apply(t,I(n,arguments,0)):e.apply(t,n)}:function(){return arguments.length?e.apply(t,arguments):e.call(t)}}function R(e,n){var i=n;return"string"==typeof e&&"$"===e.charAt(0)&&"$"===e.charAt(1)?i=void 0:S(n)?i="$WINDOW":n&&t.document===n?i="$DOCUMENT":T(n)&&(i="$SCOPE"),i}function F(t,e){if(!v(t))return $(e)||(e=e?2:null),JSON.stringify(t,R,e)}function N(t){return x(t)?JSON.parse(t):t}function B(t,e){t=t.replace(fi,"");var n=Date.parse("Jan 01, 1970 00:00:00 "+t)/6e4;return isNaN(n)?e:n}function V(t,e,n){n=n?-1:1;var i=t.getTimezoneOffset();return e=B(e,i),n*=e-i,t=new Date(t.getTime()),t.setMinutes(t.getMinutes()+n),t}function W(t){t=zn(t).clone();try{t.empty()}catch(e){}var n=zn("<div>").append(t).html();try{return t[0].nodeType===vi?Kn(n):n.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(t,e){return"<"+Kn(e)})}catch(i){return Kn(n)}}function H(t){try{return decodeURIComponent(t)}catch(e){}}function X(t){var e={};return i((t||"").split("&"),function(t){var n,i,r;t&&(i=t=t.replace(/\+/g,"%20"),n=t.indexOf("="),-1!==n&&(i=t.substring(0,n),r=t.substring(n+1)),i=H(i),m(i)&&(r=!m(r)||H(r),Un.call(e,i)?oi(e[i])?e[i].push(r):e[i]=[e[i],r]:e[i]=r))}),e}function z(t){var e=[];return i(t,function(t,n){oi(t)?i(t,function(t){e.push(q(n,!0)+(!0===t?"":"="+q(t,!0)))}):e.push(q(n,!0)+(!0===t?"":"="+q(t,!0)))}),e.length?e.join("&"):""}function G(t){return q(t,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function q(t,e){return encodeURIComponent(t).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,e?"%20":"+")}function Y(t,e){var n,i,r=di.length;for(i=0;i<r;++i)if(n=di[i]+e,x(n=t.getAttribute(n)))return n;return null}function U(t,e){var n,r,s={};i(di,function(e){e+="app",!n&&t.hasAttribute&&t.hasAttribute(e)&&(n=t,r=t.getAttribute(e))}),i(di,function(e){e+="app";var i;!n&&(i=t.querySelector("["+e.replace(":","\\:")+"]"))&&(n=i,r=i.getAttribute(e))}),n&&(s.strictDi=null!==Y(n,"strict-di"),e(n,r?[r]:[],s))}function K(e,n,r){y(r)||(r={}),r=c({strictDi:!1},r);var s=function(){if(e=zn(e),e.injector()){var i=e[0]===t.document?"document":W(e);throw ii("btstrpd",i.replace(/</,"&lt;").replace(/>/,"&gt;"))}return n=n||[],n.unshift(["$provide",function(t){t.value("$rootElement",e)}]),r.debugInfoEnabled&&n.push(["$compileProvider",function(t){t.debugInfoEnabled(!0)}]),n.unshift("ng"),i=Nt(n,r.strictDi),i.invoke(["$rootScope","$rootElement","$compile","$injector",function(t,e,n,i){t.$apply(function(){e.data("$injector",i),n(e)(t)})}]),i},o=/^NG_ENABLE_DEBUG_INFO!/,a=/^NG_DEFER_BOOTSTRAP!/;return t&&o.test(t.name)&&(r.debugInfoEnabled=!0,t.name=t.name.replace(o,"")),t&&!a.test(t.name)?s():(t.name=t.name.replace(a,""),ri.resumeBootstrap=function(t){return i(t,function(t){n.push(t)}),s()},void(w(ri.resumeDeferredBootstrap)&&ri.resumeDeferredBootstrap()))}function J(){t.name="NG_ENABLE_DEBUG_INFO!"+t.name,t.location.reload()}function Z(t){if(t=ri.element(t).injector(),!t)throw ii("test");return t.get("$$testability")}function Q(t,e){return e=e||"_",t.replace(pi,function(t,n){return(n?e:"")+t.toLowerCase()})}function tt(){var e;if(!gi){var n=hi();(Gn=v(n)?t.jQuery:n?t[n]:void 0)&&Gn.fn.on?(zn=Gn,c(Gn.fn,{scope:Ei.scope,isolateScope:Ei.isolateScope,controller:Ei.controller,injector:Ei.injector,inheritedData:Ei.inheritedData}),e=Gn.cleanData,Gn.cleanData=function(t){for(var n,i,r=0;null!=(i=t[r]);r++)(n=Gn._data(i,"events"))&&n.$destroy&&Gn(i).triggerHandler("$destroy");e(t)}):zn=pt,ri.element=zn,gi=!0}}function et(t,e,n){if(!t)throw ii("areq",e||"?",n||"required");return t}function nt(t,e,n){return n&&oi(t)&&(t=t[t.length-1]),et(w(t),e,"not a function, got "+(t&&"object"==typeof t?t.constructor.name||"Object":typeof t)),t}function it(t,e){if("hasOwnProperty"===t)throw ii("badname",e)}function rt(t,e,n){if(!e)return t;e=e.split(".");for(var i,r=t,s=e.length,o=0;o<s;o++)i=e[o],t&&(t=(r=t)[i]);return!n&&w(t)?L(r,t):t}function st(t){for(var e,n=t[0],i=t[t.length-1],r=1;n!==i&&(n=n.nextSibling);r++)(e||t[r]!==n)&&(e||(e=zn(Zn.call(t,0,r))),e.push(n));return e||t}function ot(){return Object.create(null)}function at(t){function n(t,e,n){return t[e]||(t[e]=n())}var i=e("$injector"),r=e("ng");return t=n(t,"angular",Object),t.$$minErr=t.$$minErr||e,n(t,"module",function(){var t={};return function(e,s,o){if("hasOwnProperty"===e)throw r("badname","module");return s&&t.hasOwnProperty(e)&&(t[e]=null),n(t,e,function(){function t(t,e,n,i){return i||(i=r),function(){return i[n||"push"]([t,e,arguments]),u}}function n(t,n){return function(i,s){return s&&w(s)&&(s.$$moduleName=e),r.push([t,n,arguments]),u}}if(!s)throw i("nomod",e);var r=[],a=[],c=[],l=t("$injector","invoke","push",a),u={_invokeQueue:r,_configBlocks:a,_runBlocks:c,requires:s,name:e,provider:n("$provide","provider"),factory:n("$provide","factory"),service:n("$provide","service"),
value:t("$provide","value"),constant:t("$provide","constant","unshift"),decorator:n("$provide","decorator"),animation:n("$animateProvider","register"),filter:n("$filterProvider","register"),controller:n("$controllerProvider","register"),directive:n("$compileProvider","directive"),component:n("$compileProvider","component"),config:l,run:function(t){return c.push(t),this}};return o&&l(o),u})}})}function ct(t,e){if(oi(t)){e=e||[];for(var n=0,i=t.length;n<i;n++)e[n]=t[n]}else if(y(t))for(n in e=e||{},t)"$"===n.charAt(0)&&"$"===n.charAt(1)||(e[n]=t[n]);return e||t}function lt(n){c(n,{bootstrap:K,copy:D,extend:c,merge:l,equals:P,element:zn,forEach:i,injector:Nt,noop:f,bind:L,toJson:F,fromJson:N,identity:d,isUndefined:v,isDefined:m,isString:x,isFunction:w,isObject:y,isNumber:$,isElement:A,isArray:oi,version:mi,isDate:_,lowercase:Kn,uppercase:Jn,callbacks:{$$counter:0},getTestability:Z,$$minErr:e,$$csp:ui,reloadWithDebugInfo:J}),(qn=at(t))("ng",["ngLocale"],["$provide",function(t){t.provider({$$sanitizeUri:Je}),t.provider("$compile",Yt).directive({a:Lr,input:Qr,textarea:Qr,form:Br,script:Ws,select:zs,style:qs,option:Gs,ngBind:ns,ngBindHtml:rs,ngBindTemplate:is,ngClass:os,ngClassEven:cs,ngClassOdd:as,ngCloak:ls,ngController:us,ngForm:Vr,ngHide:Is,ngIf:ds,ngInclude:ps,ngInit:vs,ngNonBindable:ks,ngPluralize:Ms,ngRepeat:Ds,ngShow:Ps,ngStyle:Ls,ngSwitch:Rs,ngSwitchWhen:Fs,ngSwitchDefault:Ns,ngOptions:js,ngTransclude:Vs,ngModel:Ss,ngList:ms,ngChange:ss,pattern:Us,ngPattern:Us,required:Ys,ngRequired:Ys,minlength:Js,ngMinlength:Js,maxlength:Ks,ngMaxlength:Ks,ngValue:es,ngModelOptions:Os}).directive({ngInclude:gs}).directive(Rr).directive(hs),t.provider({$anchorScroll:Bt,$animate:Xi,$animateCss:qi,$$animateJs:Wi,$$animateQueue:Hi,$$AnimateRunner:Gi,$$animateAsyncRun:zi,$browser:zt,$cacheFactory:Gt,$controller:te,$document:ee,$exceptionHandler:ne,$filter:fn,$$forceReflow:Qi,$interpolate:pe,$interval:ge,$http:ue,$httpParamSerializer:re,$httpParamSerializerJQLike:se,$httpBackend:fe,$xhrFactory:he,$jsonpCallbacks:cr,$location:Oe,$log:ke,$parse:ze,$rootScope:Ke,$q:Ge,$$q:qe,$sce:en,$sceDelegate:tn,$sniffer:nn,$templateCache:qt,$templateRequest:rn,$$testability:sn,$timeout:on,$window:ln,$$rAF:Ue,$$jqLite:Pt,$$HashMap:Pi,$$cookieReader:hn})}])}function ut(t){return t.replace(xi,function(t,e,n,i){return i?n.toUpperCase():n}).replace($i,"Moz$1")}function ht(t){return t=t.nodeType,1===t||!t||9===t}function ft(t,e){var n,r,s=e.createDocumentFragment(),o=[];if(Si.test(t)){for(n=s.appendChild(e.createElement("div")),r=(Ti.exec(t)||["",""])[1].toLowerCase(),r=ki[r]||ki._default,n.innerHTML=r[1]+t.replace(Oi,"<$1></$2>")+r[2],r=r[0];r--;)n=n.lastChild;o=I(o,n.childNodes),n=s.firstChild,n.textContent=""}else o.push(e.createTextNode(t));return s.textContent="",s.innerHTML="",i(o,function(t){s.appendChild(t)}),s}function dt(t,e){var n=t.parentNode;n&&n.replaceChild(e,t),e.appendChild(t)}function pt(e){if(e instanceof pt)return e;var n;if(x(e)&&(e=ci(e),n=!0),!(this instanceof pt)){if(n&&"<"!=e.charAt(0))throw wi("nosel");return new pt(e)}if(n){n=t.document;var i;e=(i=Ci.exec(e))?[n.createElement(i[1])]:(i=ft(e,n))?i.childNodes:[]}Ct(this,e)}function gt(t){return t.cloneNode(!0)}function vt(t,e){if(e||yt(t),t.querySelectorAll)for(var n=t.querySelectorAll("*"),i=0,r=n.length;i<r;i++)yt(n[i])}function mt(t,e,n,r){if(m(r))throw wi("offargs");var s=(r=bt(t))&&r.events,o=r&&r.handle;if(o)if(e){var a=function(e){var i=s[e];m(n)&&M(i||[],n),m(n)&&i&&0<i.length||(t.removeEventListener(e,o,!1),delete s[e])};i(e.split(" "),function(t){a(t),_i[t]&&a(_i[t])})}else for(e in s)"$destroy"!==e&&t.removeEventListener(e,o,!1),delete s[e]}function yt(t,e){var n=t.ng339,i=n&&yi[n];i&&(e?delete i.data[e]:(i.handle&&(i.events.$destroy&&i.handle({},"$destroy"),mt(t)),delete yi[n],t.ng339=void 0))}function bt(t,e){var n=t.ng339,n=n&&yi[n];return e&&!n&&(t.ng339=n=++bi,n=yi[n]={events:{},data:{},handle:void 0}),n}function xt(t,e,n){if(ht(t)){var i=m(n),r=!i&&e&&!y(e),s=!e;if(t=(t=bt(t,!r))&&t.data,i)t[e]=n;else{if(s)return t;if(r)return t&&t[e];c(t,e)}}}function $t(t,e){return!!t.getAttribute&&-1<(" "+(t.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+e+" ")}function _t(t,e){e&&t.setAttribute&&i(e.split(" "),function(e){t.setAttribute("class",ci((" "+(t.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+ci(e)+" "," ")))})}function wt(t,e){if(e&&t.setAttribute){var n=(" "+(t.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");i(e.split(" "),function(t){t=ci(t),-1===n.indexOf(" "+t+" ")&&(n+=t+" ")}),t.setAttribute("class",ci(n))}}function Ct(t,e){if(e)if(e.nodeType)t[t.length++]=e;else{var n=e.length;if("number"==typeof n&&e.window!==e){if(n)for(var i=0;i<n;i++)t[t.length++]=e[i]}else t[t.length++]=e}}function St(t,e){return Tt(t,"$"+(e||"ngController")+"Controller")}function Tt(t,e,n){for(9==t.nodeType&&(t=t.documentElement),e=oi(e)?e:[e];t;){for(var i=0,r=e.length;i<r;i++)if(m(n=zn.data(t,e[i])))return n;t=t.parentNode||11===t.nodeType&&t.host}}function Ot(t){for(vt(t,!0);t.firstChild;)t.removeChild(t.firstChild)}function kt(t,e){e||vt(t);var n=t.parentNode;n&&n.removeChild(t)}function At(e,n){n=n||t,"complete"===n.document.readyState?n.setTimeout(e):zn(n).on("load",e)}function Et(t,e){var n=ji[e.toLowerCase()];return n&&Mi[j(t)]&&n}function jt(t,e){var n=function(n,i){n.isDefaultPrevented=function(){return n.defaultPrevented};var r=e[i||n.type],s=r?r.length:0;if(s){if(v(n.immediatePropagationStopped)){var o=n.stopImmediatePropagation;n.stopImmediatePropagation=function(){n.immediatePropagationStopped=!0,n.stopPropagation&&n.stopPropagation(),o&&o.call(n)}}n.isImmediatePropagationStopped=function(){return!0===n.immediatePropagationStopped};var a=r.specialHandlerWrapper||Mt;1<s&&(r=ct(r));for(var c=0;c<s;c++)n.isImmediatePropagationStopped()||a(t,n,r[c])}};return n.elem=t,n}function Mt(t,e,n){n.call(t,e)}function Dt(t,e,n){var i=e.relatedTarget;i&&(i===t||Ai.call(t,i))||n.call(t,e)}function Pt(){this.$get=function(){return c(pt,{hasClass:function(t,e){return t.attr&&(t=t[0]),$t(t,e)},addClass:function(t,e){return t.attr&&(t=t[0]),wt(t,e)},removeClass:function(t,e){return t.attr&&(t=t[0]),_t(t,e)}})}}function It(t,e){var n=t&&t.$$hashKey;return n?("function"==typeof n&&(n=t.$$hashKey()),n):(n=typeof t,n="function"==n||"object"==n&&null!==t?t.$$hashKey=n+":"+(e||o)():n+":"+t)}function Lt(t,e){if(e){var n=0;this.nextUid=function(){return++n}}i(t,this.put,this)}function Rt(t){return t=(Function.prototype.toString.call(t)+" ").replace(Ni,""),t.match(Ii)||t.match(Li)}function Ft(t){return(t=Rt(t))?"function("+(t[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function Nt(t,e){function n(t){return function(e,n){return y(e)?void i(e,s(t)):t(e,n)}}function r(t,e){if(it(t,"service"),(w(e)||oi(e))&&(e=g.instantiate(e)),!e.$get)throw Bi("pget",t);return d[t+"Provider"]=e}function o(t,e){return function(){var n=$.invoke(e,this);if(v(n))throw Bi("undef",t);return n}}function a(t,e,n){return r(t,{$get:!1!==n?o(t,e):e})}function c(t){et(v(t)||oi(t),"modulesToLoad","not an array");var e,n=[];return i(t,function(t){function i(t){var e,n;for(e=0,n=t.length;e<n;e++){var i=t[e],r=g.get(i[0]);r[i[1]].apply(r,i[2])}}if(!f.get(t)){f.put(t,!0);try{x(t)?(e=qn(t),n=n.concat(c(e.requires)).concat(e._runBlocks),i(e._invokeQueue),i(e._configBlocks)):w(t)?n.push(g.invoke(t)):oi(t)?n.push(g.invoke(t)):nt(t,"module")}catch(r){throw oi(t)&&(t=t[t.length-1]),r.message&&r.stack&&-1==r.stack.indexOf(r.message)&&(r=r.message+"\n"+r.stack),Bi("modulerr",t,r.stack||r.message||r)}}}),n}function l(t,n){function i(e,i){if(t.hasOwnProperty(e)){if(t[e]===u)throw Bi("cdep",e+" <- "+h.join(" <- "));return t[e]}try{return h.unshift(e),t[e]=u,t[e]=n(e,i)}catch(r){throw t[e]===u&&delete t[e],r}finally{h.shift()}}function r(t,n,r){var s=[];t=Nt.$$annotate(t,e,r);for(var o=0,a=t.length;o<a;o++){var c=t[o];if("string"!=typeof c)throw Bi("itkn",c);s.push(n&&n.hasOwnProperty(c)?n[c]:i(c,r))}return s}return{invoke:function(t,e,n,i){return"string"==typeof n&&(i=n,n=null),n=r(t,n,i),oi(t)&&(t=t[t.length-1]),i=!(11>=Xn)&&("function"==typeof t&&/^(?:class\b|constructor\()/.test(Function.prototype.toString.call(t)+" ")),i?(n.unshift(null),new(Function.prototype.bind.apply(t,n))):t.apply(e,n)},instantiate:function(t,e,n){var i=oi(t)?t[t.length-1]:t;return t=r(t,e,n),t.unshift(null),new(Function.prototype.bind.apply(i,t))},get:i,annotate:Nt.$$annotate,has:function(e){return d.hasOwnProperty(e+"Provider")||t.hasOwnProperty(e)}}}e=!0===e;var u={},h=[],f=new Lt([],(!0)),d={$provide:{provider:n(r),factory:n(a),service:n(function(t,e){return a(t,["$injector",function(t){return t.instantiate(e)}])}),value:n(function(t,e){return a(t,p(e),!1)}),constant:n(function(t,e){it(t,"constant"),d[t]=e,m[t]=e}),decorator:function(t,e){var n=g.get(t+"Provider"),i=n.$get;n.$get=function(){var t=$.invoke(i,n);return $.invoke(e,null,{$delegate:t})}}}},g=d.$injector=l(d,function(t,e){throw ri.isString(e)&&h.push(e),Bi("unpr",h.join(" <- "))}),m={},b=l(m,function(t,e){var n=g.get(t+"Provider",e);return $.invoke(n.$get,n,void 0,t)}),$=b;d.$injectorProvider={$get:p(b)};var _=c(t),$=b.get("$injector");return $.strictDi=e,i(_,function(t){t&&$.invoke(t)}),$}function Bt(){var t=!0;this.disableAutoScrolling=function(){t=!1},this.$get=["$window","$location","$rootScope",function(e,n,i){function r(t){var e=null;return Array.prototype.some.call(t,function(t){if("a"===j(t))return e=t,!0}),e}function s(t){if(t){t.scrollIntoView();var n;n=o.yOffset,w(n)?n=n():A(n)?(n=n[0],n="fixed"!==e.getComputedStyle(n).position?0:n.getBoundingClientRect().bottom):$(n)||(n=0),n&&(t=t.getBoundingClientRect().top,e.scrollBy(0,t-n))}else e.scrollTo(0,0)}function o(t){t=x(t)?t:n.hash();var e;t?(e=a.getElementById(t))?s(e):(e=r(a.getElementsByName(t)))?s(e):"top"===t&&s(null):s(null)}var a=e.document;return t&&i.$watch(function(){return n.hash()},function(t,e){t===e&&""===t||At(function(){i.$evalAsync(o)})}),o}]}function Vt(t,e){return t||e?t?e?(oi(t)&&(t=t.join(" ")),oi(e)&&(e=e.join(" ")),t+" "+e):t:e:""}function Wt(t){x(t)&&(t=t.split(" "));var e=ot();return i(t,function(t){t.length&&(e[t]=!0)}),e}function Ht(t){return y(t)?t:{}}function Xt(t,e,n,r){function s(t){try{t.apply(null,Zn.call(arguments,1))}finally{if(m--,0===m)for(;y.length;)try{y.pop()()}catch(e){n.error(e)}}}function o(){w=null,a(),c()}function a(){b=C(),b=v(b)?null:b,P(b,O)&&(b=O),O=b}function c(){$===l.url()&&x===b||($=l.url(),x=b,i(S,function(t){t(l.url(),b)}))}var l=this,u=t.location,h=t.history,d=t.setTimeout,p=t.clearTimeout,g={};l.isMock=!1;var m=0,y=[];l.$$completeOutstandingRequest=s,l.$$incOutstandingRequestCount=function(){m++},l.notifyWhenNoOutstandingRequests=function(t){0===m?t():y.push(t)};var b,x,$=u.href,_=e.find("base"),w=null,C=r.history?function(){try{return h.state}catch(t){}}:f;a(),x=b,l.url=function(e,n,i){if(v(i)&&(i=null),u!==t.location&&(u=t.location),h!==t.history&&(h=t.history),e){var s=x===i;if($===e&&(!r.history||s))return l;var o=$&&xe($)===xe(e);return $=e,x=i,!r.history||o&&s?(o||(w=e),n?u.replace(e):o?(n=u,i=e.indexOf("#"),i=-1===i?"":e.substr(i),n.hash=i):u.href=e,u.href!==e&&(w=e)):(h[n?"replaceState":"pushState"](i,"",e),a(),x=b),w&&(w=e),l}return w||u.href.replace(/%27/g,"'")},l.state=function(){return b};var S=[],T=!1,O=null;l.onUrlChange=function(e){return T||(r.history&&zn(t).on("popstate",o),zn(t).on("hashchange",o),T=!0),S.push(e),e},l.$$applicationDestroyed=function(){zn(t).off("hashchange popstate",o)},l.$$checkUrlChange=c,l.baseHref=function(){var t=_.attr("href");return t?t.replace(/^(https?\:)?\/\/[^\/]*/,""):""},l.defer=function(t,e){var n;return m++,n=d(function(){delete g[n],s(t)},e||0),g[n]=!0,n},l.defer.cancel=function(t){return!!g[t]&&(delete g[t],p(t),s(f),!0)}}function zt(){this.$get=["$window","$log","$sniffer","$document",function(t,e,n,i){return new Xt(t,i,e,n)}]}function Gt(){this.$get=function(){function t(t,i){function r(t){t!=f&&(d?d==t&&(d=t.n):d=t,s(t.n,t.p),s(t,f),f=t,f.n=null)}function s(t,e){t!=e&&(t&&(t.p=e),e&&(e.n=t))}if(t in n)throw e("$cacheFactory")("iid",t);var o=0,a=c({},i,{id:t}),l=ot(),u=i&&i.capacity||Number.MAX_VALUE,h=ot(),f=null,d=null;return n[t]={put:function(t,e){if(!v(e)){if(u<Number.MAX_VALUE){var n=h[t]||(h[t]={key:t});r(n)}return t in l||o++,l[t]=e,o>u&&this.remove(d.key),e}},get:function(t){if(u<Number.MAX_VALUE){var e=h[t];if(!e)return;r(e)}return l[t]},remove:function(t){if(u<Number.MAX_VALUE){var e=h[t];if(!e)return;e==f&&(f=e.p),e==d&&(d=e.n),s(e.n,e.p),delete h[t]}t in l&&(delete l[t],o--)},removeAll:function(){l=ot(),o=0,h=ot(),f=d=null},destroy:function(){h=a=l=null,delete n[t]},info:function(){return c({},a,{size:o})}}}var n={};return t.info=function(){var t={};return i(n,function(e,n){t[n]=e.info()}),t},t.get=function(t){return n[t]},t}}function qt(){this.$get=["$cacheFactory",function(t){return t("templates")}]}function Yt(e,n){function r(t,e,n){var r=/^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,s=ot();return i(t,function(t,i){if(t in C)s[i]=C[t];else{var o=t.match(r);if(!o)throw Yi("iscp",e,i,t,n?"controller bindings definition":"isolate scope definition");s[i]={mode:o[1][0],collection:"*"===o[2],optional:"?"===o[3],attrName:o[4]||i},o[4]&&(C[t]=s[i])}}),s}function o(t){var e=t.charAt(0);if(!e||e!==Kn(e))throw Yi("baddir",t);if(t!==t.trim())throw Yi("baddir",t)}function a(t){var e=t.require||t.controller&&t.name;return!oi(e)&&y(e)&&i(e,function(t,n){var i=t.match($);t.substring(i[0].length)||(e[n]=i[0]+n)}),e}var l={},u=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,g=/(([\w\-]+)(?:\:([^;]+))?;?)/,b=E("ngSrc,ngSrcset,src,srcset"),$=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,_=/^(on[a-z]+|formaction)$/,C=ot();this.directive=function A(t,n){return it(t,"directive"),x(t)?(o(t),et(n,"directiveFactory"),l.hasOwnProperty(t)||(l[t]=[],e.factory(t+"Directive",["$injector","$exceptionHandler",function(e,n){var r=[];return i(l[t],function(i,s){try{var o=e.invoke(i);w(o)?o={compile:p(o)}:!o.compile&&o.link&&(o.compile=p(o.link)),o.priority=o.priority||0,o.index=s,o.name=o.name||t,o.require=a(o),o.restrict=o.restrict||"EA",o.$$moduleName=i.$$moduleName,r.push(o)}catch(c){n(c)}}),r}])),l[t].push(n)):i(t,s(A)),this},this.component=function(t,e){function n(t){function n(e){return w(e)||oi(e)?function(n,i){return t.invoke(e,this,{$element:n,$attrs:i})}:e}var s=e.template||e.templateUrl?e.template:"",o={controller:r,controllerAs:Qt(e.controller)||e.controllerAs||"$ctrl",template:n(s),templateUrl:n(e.templateUrl),transclude:e.transclude,scope:{},bindToController:e.bindings||{},restrict:"E",require:e.require};return i(e,function(t,e){"$"===e.charAt(0)&&(o[e]=t)}),o}var r=e.controller||function(){};return i(e,function(t,e){"$"===e.charAt(0)&&(n[e]=t,w(r)&&(r[e]=t))}),n.$inject=["$injector"],this.directive(t,n)},this.aHrefSanitizationWhitelist=function(t){return m(t)?(n.aHrefSanitizationWhitelist(t),this):n.aHrefSanitizationWhitelist()},this.imgSrcSanitizationWhitelist=function(t){return m(t)?(n.imgSrcSanitizationWhitelist(t),this):n.imgSrcSanitizationWhitelist()};var S=!0;this.debugInfoEnabled=function(t){return m(t)?(S=t,this):S};var k=10;this.onChangesTtl=function(t){return arguments.length?(k=t,this):k},this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate","$$sanitizeUri",function(e,n,s,o,a,p,C,A,E,D){function I(){try{if(!--$t)throw yt=void 0,Yi("infchng",k);C.$apply(function(){for(var t=[],e=0,n=yt.length;e<n;++e)try{yt[e]()}catch(i){t.push(i)}if(yt=void 0,t.length)throw t})}finally{$t++}}function R(t,e){if(e){var n,i,r,s=Object.keys(e);for(n=0,i=s.length;n<i;n++)r=s[n],this[r]=e[r]}else this.$attr={};this.$$element=t}function F(t,e,n){xt.innerHTML="<span "+e+">",e=xt.firstChild.attributes;var i=e[0];e.removeNamedItem(i.name),i.value=n,t.attributes.setNamedItem(i)}function N(t,e){try{t.addClass(e)}catch(n){}}function B(e,n,i,r,s){e instanceof zn||(e=zn(e));for(var o=/\S+/,a=0,c=e.length;a<c;a++){var l=e[a];l.nodeType===vi&&l.nodeValue.match(o)&&dt(l,e[a]=t.document.createElement("span"))}var u=V(e,n,e,i,r,s);B.$$addScopeClass(e);var h=null;return function(t,n,i){et(t,"scope"),s&&s.needsNewScope&&(t=t.$parent.$new()),i=i||{};var r=i.parentBoundTranscludeFn,o=i.transcludeControllers;if(i=i.futureParentElement,r&&r.$$boundTransclude&&(r=r.$$boundTransclude),h||(h=(i=i&&i[0])&&"foreignobject"!==j(i)&&ei.call(i).match(/SVG/)?"svg":"html"),i="html"!==h?zn(lt(h,zn("<div>").append(e).html())):n?Ei.clone.call(e):e,o)for(var a in o)i.data("$"+a+"Controller",o[a].instance);return B.$$addScopeInfo(i,t),n&&n(i,t),u&&u(t,i,i,r),i}}function V(t,e,n,i,r,s){function o(t,n,i,r){var s,o,a,c,l,u,d;if(h)for(d=Array(n.length),c=0;c<f.length;c+=3)s=f[c],d[s]=n[s];else d=n;for(c=0,l=f.length;c<l;)o=d[f[c++]],n=f[c++],s=f[c++],n?(n.scope?(a=t.$new(),B.$$addScopeInfo(zn(o),a)):a=t,u=n.transcludeOnThisElement?H(t,n.transclude,r):!n.templateOnThisElement&&r?r:!r&&e?H(t,e):null,n(s,a,o,i,u)):s&&s(t,o.childNodes,void 0,r)}for(var a,c,l,u,h,f=[],d=0;d<t.length;d++)a=new R,c=X(t[d],[],a,0===d?i:void 0,r),(s=c.length?U(c,t[d],a,e,n,null,[],[],s):null)&&s.scope&&B.$$addScopeClass(a.$$element),a=s&&s.terminal||!(l=t[d].childNodes)||!l.length?null:V(l,s?(s.transcludeOnThisElement||!s.templateOnThisElement)&&s.transclude:e),(s||a)&&(f.push(d,s,a),u=!0,h=h||s),s=null;return u?o:null}function H(t,e,n){function i(i,r,s,o,a){return i||(i=t.$new(!1,a),i.$$transcluded=!0),e(i,r,{parentBoundTranscludeFn:n,transcludeControllers:s,futureParentElement:o})}var r,s=i.$$slots=ot();for(r in e.$$slots)s[r]=e.$$slots[r]?H(t,e.$$slots[r],n):null;return i}function X(t,e,n,i,r){var s=n.$attr;switch(t.nodeType){case 1:tt(e,Kt(j(t)),"E",i,r);for(var o,a,c,l,u=t.attributes,h=0,f=u&&u.length;h<f;h++){var d=!1,p=!1;o=u[h],a=o.name,c=ci(o.value),o=Kt(a),(l=St.test(o))&&(a=a.replace(Ki,"").substr(8).replace(/_(.)/g,function(t,e){return e.toUpperCase()})),(o=o.match(Tt))&&nt(o[1])&&(d=a,p=a.substr(0,a.length-5)+"end",a=a.substr(0,a.length-6)),o=Kt(a.toLowerCase()),s[o]=a,!l&&n.hasOwnProperty(o)||(n[o]=c,Et(t,o)&&(n[o]=!0)),ht(t,e,c,o,l),tt(e,o,"A",i,r,d,p)}if(s=t.className,y(s)&&(s=s.animVal),x(s)&&""!==s)for(;t=g.exec(s);)o=Kt(t[2]),tt(e,o,"C",i,r)&&(n[o]=ci(t[3])),s=s.substr(t.index+t[0].length);break;case vi:if(11===Xn)for(;t.parentNode&&t.nextSibling&&t.nextSibling.nodeType===vi;)t.nodeValue+=t.nextSibling.nodeValue,t.parentNode.removeChild(t.nextSibling);ct(e,t.nodeValue);break;case 8:z(t,e,n,i,r)}return e.sort(st),e}function z(t,e,n,i,r){try{var s=u.exec(t.nodeValue);if(s){var o=Kt(s[1]);tt(e,o,"M",i,r)&&(n[o]=ci(s[2]))}}catch(a){}}function G(t,e,n){var i=[],r=0;if(e&&t.hasAttribute&&t.hasAttribute(e)){do{if(!t)throw Yi("uterdir",e,n);1==t.nodeType&&(t.hasAttribute(e)&&r++,t.hasAttribute(n)&&r--),i.push(t),t=t.nextSibling}while(0<r)}else i.push(t);return zn(i)}function q(t,e,n){return function(i,r,s,o,a){return r=G(r[0],e,n),t(i,r,s,o,a)}}function Y(t,e,n,i,r,s){var o;return t?B(e,n,i,r,s):function(){return o||(o=B(e,n,i,r,s),e=n=s=null),o.apply(this,arguments)}}function U(t,e,n,r,o,a,l,u,h){function f(t,e,n,i){t&&(n&&(t=q(t,n,i)),t.require=p.require,t.directiveName=g,(S===p||p.$$isolateScope)&&(t=pt(t,{isolateScope:!0})),l.push(t)),e&&(n&&(e=q(e,n,i)),e.require=p.require,e.directiveName=g,(S===p||p.$$isolateScope)&&(e=pt(e,{isolateScope:!0})),u.push(e))}function d(t,r,o,a,h){function f(t,e,n,i){var r;if(T(t)||(i=n,n=e,e=t,t=void 0),M&&(r=x),n||(n=M?k.parent():k),!i)return h(t,e,r,n,j);var s=h.$$slots[i];if(s)return s(t,e,r,n,j);if(v(s))throw Yi("noslot",i,W(k))}var d,p,g,m,b,x,$,k;e===o?(a=n,k=n.$$element):(k=zn(o),a=new R(k,n)),b=r,S?m=r.$new(!0):_&&(b=r.$parent),h&&($=f,$.$$boundTransclude=h,$.isSlotFilled=function(t){return!!h.$$slots[t]}),C&&(x=J(k,a,$,C,m,r,S)),S&&(B.$$addScopeInfo(k,m,!0,!(O&&(O===S||O===S.$$originalDirective))),B.$$addScopeClass(k,!0),m.$$isolateBindings=S.$$isolateBindings,p=mt(r,a,m,m.$$isolateBindings,S),p.removeWatches&&m.$on("$destroy",p.removeWatches));for(d in x){p=C[d],g=x[d];var A=p.$$bindings.bindToController;g.bindingInfo=g.identifier&&A?mt(b,a,g.instance,A,p):{};var E=g();E!==g.instance&&(g.instance=E,k.data("$"+p.name+"Controller",E),g.bindingInfo.removeWatches&&g.bindingInfo.removeWatches(),g.bindingInfo=mt(b,a,g.instance,A,p))}for(i(C,function(t,e){var n=t.require;t.bindToController&&!oi(n)&&y(n)&&c(x[e].instance,K(e,n,k,x))}),i(x,function(t){var e=t.instance;if(w(e.$onChanges))try{e.$onChanges(t.bindingInfo.initialChanges)}catch(n){s(n)}if(w(e.$onInit))try{e.$onInit()}catch(i){s(i)}w(e.$doCheck)&&(b.$watch(function(){e.$doCheck()}),e.$doCheck()),w(e.$onDestroy)&&b.$on("$destroy",function(){e.$onDestroy()})}),d=0,p=l.length;d<p;d++)g=l[d],vt(g,g.isolateScope?m:r,k,a,g.require&&K(g.directiveName,g.require,k,x),$);var j=r;for(S&&(S.template||null===S.templateUrl)&&(j=m),t&&t(j,o.childNodes,void 0,h),d=u.length-1;0<=d;d--)g=u[d],vt(g,g.isolateScope?m:r,k,a,g.require&&K(g.directiveName,g.require,k,x),$);i(x,function(t){t=t.instance,w(t.$postLink)&&t.$postLink()})}h=h||{};for(var p,g,m,b,x,$=-Number.MAX_VALUE,_=h.newScopeDirective,C=h.controllerDirectives,S=h.newIsolateScopeDirective,O=h.templateDirective,k=h.nonTlbTranscludeDirective,A=!1,E=!1,M=h.hasElementTranscludeDirective,D=n.$$element=zn(e),P=r,I=!1,F=!1,N=0,V=t.length;N<V;N++){p=t[N];var H=p.$$start,z=p.$$end;if(H&&(D=G(e,H,z)),m=void 0,$>p.priority)break;if((x=p.scope)&&(p.templateUrl||(y(x)?(at("new/isolated scope",S||_,p,D),S=p):at("new/isolated scope",S,p,D)),_=_||p),g=p.name,!I&&(p.replace&&(p.templateUrl||p.template)||p.transclude&&!p.$$tlb)){for(x=N+1;I=t[x++];)if(I.transclude&&!I.$$tlb||I.replace&&(I.templateUrl||I.template)){F=!0;break}I=!0}if(!p.templateUrl&&p.controller&&(x=p.controller,C=C||ot(),at("'"+g+"' controller",C[g],p,D),C[g]=p),x=p.transclude)if(A=!0,p.$$tlb||(at("transclusion",k,p,D),k=p),"element"==x)M=!0,$=p.priority,m=D,D=n.$$element=zn(B.$$createComment(g,n[g])),e=D[0],ft(o,Zn.call(m,0),e),m[0].$$parentNode=m[0].parentNode,P=Y(F,m,r,$,a&&a.name,{nonTlbTranscludeDirective:k});else{var U=ot();if(m=zn(gt(e)).contents(),y(x)){m=[];var Q=ot(),tt=ot();i(x,function(t,e){var n="?"===t.charAt(0);t=n?t.substring(1):t,Q[t]=e,U[e]=null,tt[e]=n}),i(D.contents(),function(t){var e=Q[Kt(j(t))];e?(tt[e]=!0,U[e]=U[e]||[],U[e].push(t)):m.push(t)}),i(tt,function(t,e){if(!t)throw Yi("reqslot",e)});for(var et in U)U[et]&&(U[et]=Y(F,U[et],r))}D.empty(),P=Y(F,m,r,void 0,void 0,{needsNewScope:p.$$isolateScope||p.$$newScope}),P.$$slots=U}if(p.template)if(E=!0,at("template",O,p,D),O=p,x=w(p.template)?p.template(D,n):p.template,x=Ct(x),p.replace){if(a=p,m=Si.test(x)?Zt(lt(p.templateNamespace,ci(x))):[],e=m[0],1!=m.length||1!==e.nodeType)throw Yi("tplrt",g,"");ft(o,D,e),V={$attr:{}},x=X(e,[],V);var nt=t.splice(N+1,t.length-(N+1));(S||_)&&Z(x,S,_),t=t.concat(x).concat(nt),it(n,V),V=t.length}else D.html(x);if(p.templateUrl)E=!0,at("template",O,p,D),O=p,p.replace&&(a=p),d=rt(t.splice(N,t.length-N),D,n,o,A&&P,l,u,{controllerDirectives:C,newScopeDirective:_!==p&&_,newIsolateScopeDirective:S,templateDirective:O,nonTlbTranscludeDirective:k}),V=t.length;else if(p.compile)try{b=p.compile(D,n,P);var st=p.$$originalDirective||p;w(b)?f(null,L(st,b),H,z):b&&f(L(st,b.pre),L(st,b.post),H,z)}catch(ct){s(ct,W(D))}p.terminal&&(d.terminal=!0,$=Math.max($,p.priority))}return d.scope=_&&!0===_.scope,d.transcludeOnThisElement=A,d.templateOnThisElement=E,d.transclude=P,h.hasElementTranscludeDirective=M,d}function K(t,e,n,r){var s;if(x(e)){var o=e.match($);e=e.substring(o[0].length);var a=o[1]||o[3],o="?"===o[2];if("^^"===a?n=n.parent():s=(s=r&&r[e])&&s.instance,!s){var c="$"+e+"Controller";s=a?n.inheritedData(c):n.data(c)}if(!s&&!o)throw Yi("ctreq",e,t)}else if(oi(e))for(s=[],a=0,o=e.length;a<o;a++)s[a]=K(t,e[a],n,r);else y(e)&&(s={},i(e,function(e,i){s[i]=K(t,e,n,r)}));return s||null}function J(t,e,n,i,r,s,o){var a,c=ot();for(a in i){var l=i[a],u={$scope:l===o||l.$$isolateScope?r:s,$element:t,$attrs:e,$transclude:n},h=l.controller;"@"==h&&(h=e[l.name]),u=p(h,u,!0,l.controllerAs),c[l.name]=u,t.data("$"+l.name+"Controller",u.instance)}return c}function Z(t,e,n){for(var i=0,r=t.length;i<r;i++)t[i]=h(t[i],{$$isolateScope:e,$$newScope:n})}function tt(t,n,i,o,a,c,u){if(n===a)return null;if(a=null,l.hasOwnProperty(n)){var f;n=e.get(n+"Directive");for(var d=0,p=n.length;d<p;d++)try{if(f=n[d],(v(o)||o>f.priority)&&-1!=f.restrict.indexOf(i)){if(c&&(f=h(f,{$$start:c,$$end:u})),!f.$$bindings){var g=f,m=f,b=f.name,x={isolateScope:null,bindToController:null};if(y(m.scope)&&(!0===m.bindToController?(x.bindToController=r(m.scope,b,!0),x.isolateScope={}):x.isolateScope=r(m.scope,b,!1)),y(m.bindToController)&&(x.bindToController=r(m.bindToController,b,!0)),y(x.bindToController)){var $=m.controller,_=m.controllerAs;if(!$)throw Yi("noctrl",b);if(!Qt($,_))throw Yi("noident",b)}var w=g.$$bindings=x;y(w.isolateScope)&&(f.$$isolateBindings=w.isolateScope)}t.push(f),a=f}}catch(C){s(C)}}return a}function nt(t){if(l.hasOwnProperty(t))for(var n=e.get(t+"Directive"),i=0,r=n.length;i<r;i++)if(t=n[i],t.multiElement)return!0;return!1}function it(t,e){var n=e.$attr,r=t.$attr;i(t,function(i,r){"$"!=r.charAt(0)&&(e[r]&&e[r]!==i&&(i+=("style"===r?";":" ")+e[r]),t.$set(r,i,!0,n[r]))}),i(e,function(e,i){t.hasOwnProperty(i)||"$"===i.charAt(0)||(t[i]=e,"class"!==i&&"style"!==i&&(r[i]=n[i]))})}function rt(t,e,n,r,s,a,c,l){var u,f,d=[],p=e[0],g=t.shift(),v=h(g,{templateUrl:null,transclude:null,replace:null,$$originalDirective:g}),m=w(g.templateUrl)?g.templateUrl(e,n):g.templateUrl,b=g.templateNamespace;return e.empty(),o(m).then(function(o){var h,x;if(o=Ct(o),g.replace){if(o=Si.test(o)?Zt(lt(b,ci(o))):[],h=o[0],1!=o.length||1!==h.nodeType)throw Yi("tplrt",g.name,m);o={$attr:{}},ft(r,e,h);var $=X(h,[],o);y(g.scope)&&Z($,!0),t=$.concat(t),it(n,o)}else h=p,e.html(o);for(t.unshift(v),u=U(t,h,n,s,e,g,a,c,l),i(r,function(t,n){t==h&&(r[n]=e[0])}),f=V(e[0].childNodes,s);d.length;){o=d.shift(),x=d.shift();var _=d.shift(),w=d.shift(),$=e[0];if(!o.$$destroyed){if(x!==p){var C=x.className;l.hasElementTranscludeDirective&&g.replace||($=gt(h)),ft(_,zn(x),$),N(zn($),C)}x=u.transcludeOnThisElement?H(o,u.transclude,w):w,u(f,o,$,r,x)}}d=null}),function(t,e,n,i,r){t=r,e.$$destroyed||(d?d.push(e,n,i,t):(u.transcludeOnThisElement&&(t=H(e,u.transclude,r)),u(f,e,n,i,t)))}}function st(t,e){var n=e.priority-t.priority;return 0!==n?n:t.name!==e.name?t.name<e.name?-1:1:t.index-e.index}function at(t,e,n,i){function r(t){return t?" (module: "+t+")":""}if(e)throw Yi("multidir",e.name,r(e.$$moduleName),n.name,r(n.$$moduleName),t,W(i))}function ct(t,e){var i=n(e,!0);i&&t.push({priority:0,compile:function(t){t=t.parent();var e=!!t.length;return e&&B.$$addBindingClass(t),function(t,n){var r=n.parent();e||B.$$addBindingClass(r),B.$$addBindingInfo(r,i.expressions),t.$watch(i,function(t){n[0].nodeValue=t})}}})}function lt(e,n){switch(e=Kn(e||"html")){case"svg":case"math":var i=t.document.createElement("div");return i.innerHTML="<"+e+">"+n+"</"+e+">",i.childNodes[0].childNodes;default:return n}}function ut(t,e){if("srcdoc"==e)return A.HTML;var n=j(t);return"xlinkHref"==e||"form"==n&&"action"==e||"img"!=n&&("src"==e||"ngSrc"==e)?A.RESOURCE_URL:void 0}function ht(t,e,i,r,s){var o=ut(t,r);s=b[r]||s;var a=n(i,!0,o,s);if(a){if("multiple"===r&&"select"===j(t))throw Yi("selmulti",W(t));e.push({priority:100,compile:function(){return{pre:function(t,e,c){if(e=c.$$observers||(c.$$observers=ot()),_.test(r))throw Yi("nodomevents");var l=c[r];l!==i&&(a=l&&n(l,!0,o,s),i=l),a&&(c[r]=a(t),(e[r]||(e[r]=[])).$$inter=!0,(c.$$observers&&c.$$observers[r].$$scope||t).$watch(a,function(t,e){"class"===r&&t!=e?c.$updateClass(t,e):c.$set(r,t)}))}}}})}}function ft(e,n,i){var r,s,o=n[0],a=n.length,c=o.parentNode;if(e)for(r=0,s=e.length;r<s;r++)if(e[r]==o){e[r++]=i,s=r+a-1;for(var l=e.length;r<l;r++,s++)s<l?e[r]=e[s]:delete e[r];e.length-=a-1,e.context===o&&(e.context=i);break}for(c&&c.replaceChild(i,o),e=t.document.createDocumentFragment(),r=0;r<a;r++)e.appendChild(n[r]);for(zn.hasData(o)&&(zn.data(i,zn.data(o)),zn(o).off("$destroy")),zn.cleanData(e.querySelectorAll("*")),r=1;r<a;r++)delete n[r];n[0]=i,n.length=1}function pt(t,e){return c(function(){return t.apply(null,arguments)},t,e)}function vt(t,e,n,i,r,o){try{t(e,n,i,r,o)}catch(a){s(a,W(n))}}function mt(t,e,r,s,o){function c(e,n,i){w(r.$onChanges)&&n!==i&&(yt||(t.$$postDigest(I),yt=[]),u||(u={},yt.push(l)),u[e]&&(i=u[e].previousValue),u[e]=new Ut(i,n))}function l(){r.$onChanges(u),u=void 0}var u,h=[],d={};return i(s,function(i,s){var l,u,p,g,v=i.attrName,m=i.optional;switch(i.mode){case"@":m||Un.call(e,v)||(r[s]=e[v]=void 0),e.$observe(v,function(t){(x(t)||O(t))&&(c(s,t,r[s]),r[s]=t)}),e.$$observers[v].$$scope=t,l=e[v],x(l)?r[s]=n(l)(t):O(l)&&(r[s]=l),d[s]=new Ut(Ui,r[s]);break;case"=":if(!Un.call(e,v)){if(m)break;e[v]=void 0}if(m&&!e[v])break;u=a(e[v]),g=u.literal?P:function(t,e){return t===e||t!==t&&e!==e},p=u.assign||function(){throw l=r[s]=u(t),Yi("nonassign",e[v],v,o.name)},l=r[s]=u(t),m=function(e){return g(e,r[s])||(g(e,l)?p(t,e=r[s]):r[s]=e),l=e},m.$stateful=!0,m=i.collection?t.$watchCollection(e[v],m):t.$watch(a(e[v],m),null,u.literal),h.push(m);break;case"<":if(!Un.call(e,v)){if(m)break;e[v]=void 0}if(m&&!e[v])break;u=a(e[v]);var y=r[s]=u(t);d[s]=new Ut(Ui,r[s]),m=t.$watch(u,function(t,e){if(e===t){if(e===y)return;e=y}c(s,t,e),r[s]=t},u.literal),h.push(m);break;case"&":if(u=e.hasOwnProperty(v)?a(e[v]):f,u===f&&m)break;r[s]=function(e){return u(t,e)}}}),{initialChanges:d,removeWatches:h.length&&function(){for(var t=0,e=h.length;t<e;++t)h[t]()}}}var yt,bt=/^\w/,xt=t.document.createElement("div"),$t=k;R.prototype={$normalize:Kt,$addClass:function(t){t&&0<t.length&&E.addClass(this.$$element,t)},$removeClass:function(t){t&&0<t.length&&E.removeClass(this.$$element,t)},$updateClass:function(t,e){var n=Jt(t,e);n&&n.length&&E.addClass(this.$$element,n),(n=Jt(e,t))&&n.length&&E.removeClass(this.$$element,n)},$set:function(t,e,n,r){var o=Et(this.$$element[0],t),a=Di[t],c=t;if(o?(this.$$element.prop(t,e),r=o):a&&(this[a]=e,c=a),this[t]=e,r?this.$attr[t]=r:(r=this.$attr[t])||(this.$attr[t]=r=Q(t,"-")),o=j(this.$$element),"a"===o&&("href"===t||"xlinkHref"===t)||"img"===o&&"src"===t)this[t]=e=D(e,"src"===t);else if("img"===o&&"srcset"===t&&m(e)){for(var o="",a=ci(e),l=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,l=/\s/.test(a)?l:/(,)/,a=a.split(l),l=Math.floor(a.length/2),u=0;u<l;u++)var h=2*u,o=o+D(ci(a[h]),!0),o=o+(" "+ci(a[h+1]));a=ci(a[2*u]).split(/\s/),o+=D(ci(a[0]),!0),2===a.length&&(o+=" "+ci(a[1])),this[t]=e=o}!1!==n&&(null===e||v(e)?this.$$element.removeAttr(r):bt.test(r)?this.$$element.attr(r,e):F(this.$$element[0],r,e)),(t=this.$$observers)&&i(t[c],function(t){try{t(e)}catch(n){s(n)}})},$observe:function(t,e){var n=this,i=n.$$observers||(n.$$observers=ot()),r=i[t]||(i[t]=[]);return r.push(e),C.$evalAsync(function(){r.$$inter||!n.hasOwnProperty(t)||v(n[t])||e(n[t])}),function(){M(r,e)}}};var _t=n.startSymbol(),wt=n.endSymbol(),Ct="{{"==_t&&"}}"==wt?d:function(t){return t.replace(/\{\{/g,_t).replace(/}}/g,wt)},St=/^ngAttr[A-Z]/,Tt=/^(.+)Start$/;return B.$$addBindingInfo=S?function(t,e){var n=t.data("$binding")||[];oi(e)?n=n.concat(e):n.push(e),t.data("$binding",n)}:f,B.$$addBindingClass=S?function(t){N(t,"ng-binding")}:f,B.$$addScopeInfo=S?function(t,e,n,i){t.data(n?i?"$isolateScopeNoTemplate":"$isolateScope":"$scope",e)}:f,B.$$addScopeClass=S?function(t,e){N(t,e?"ng-isolate-scope":"ng-scope")}:f,B.$$createComment=function(e,n){var i="";return S&&(i=" "+(e||"")+": ",n&&(i+=n+" ")),t.document.createComment(i)},B}]}function Ut(t,e){this.previousValue=t,this.currentValue=e}function Kt(t){return ut(t.replace(Ki,""))}function Jt(t,e){var n="",i=t.split(/\s+/),r=e.split(/\s+/),s=0;t:for(;s<i.length;s++){for(var o=i[s],a=0;a<r.length;a++)if(o==r[a])continue t;n+=(0<n.length?" ":"")+o}return n}function Zt(t){t=zn(t);var e=t.length;if(1>=e)return t;for(;e--;)8===t[e].nodeType&&Qn.call(t,e,1);return t}function Qt(t,e){if(e&&x(e))return e;if(x(t)){var n=Zi.exec(t);if(n)return n[3]}}
function te(){var t={},n=!1;this.has=function(e){return t.hasOwnProperty(e)},this.register=function(e,n){it(e,"controller"),y(e)?c(t,e):t[e]=n},this.allowGlobals=function(){n=!0},this.$get=["$injector","$window",function(i,r){function s(t,n,i,r){if(!t||!y(t.$scope))throw e("$controller")("noscp",r,n);t.$scope[n]=i}return function(e,o,a,l){var u,h,f;if(a=!0===a,l&&x(l)&&(f=l),x(e)){if(l=e.match(Zi),!l)throw Ji("ctrlfmt",e);h=l[1],f=f||l[3],e=t.hasOwnProperty(h)?t[h]:rt(o.$scope,h,!0)||(n?rt(r,h,!0):void 0),nt(e,h,!0)}return a?(a=(oi(e)?e[e.length-1]:e).prototype,u=Object.create(a||null),f&&s(o,f,u,h||e.name),c(function(){var t=i.invoke(e,u,o,h);return t!==u&&(y(t)||w(t))&&(u=t,f&&s(o,f,u,h||e.name)),u},{instance:u,identifier:f})):(u=i.instantiate(e,o,h),f&&s(o,f,u,h||e.name),u)}}]}function ee(){this.$get=["$window",function(t){return zn(t.document)}]}function ne(){this.$get=["$log",function(t){return function(e,n){t.error.apply(t,arguments)}}]}function ie(t){return y(t)?_(t)?t.toISOString():F(t):t}function re(){this.$get=function(){return function(t){if(!t)return"";var e=[];return r(t,function(t,n){null===t||v(t)||(oi(t)?i(t,function(t){e.push(q(n)+"="+q(ie(t)))}):e.push(q(n)+"="+q(ie(t))))}),e.join("&")}}}function se(){this.$get=function(){return function(t){function e(t,s,o){null===t||v(t)||(oi(t)?i(t,function(t,n){e(t,s+"["+(y(t)?n:"")+"]")}):y(t)&&!_(t)?r(t,function(t,n){e(t,s+(o?"":"[")+n+(o?"":"]"))}):n.push(q(s)+"="+q(ie(t))))}if(!t)return"";var n=[];return e(t,"",!0),n.join("&")}}}function oe(t,e){if(x(t)){var n=t.replace(rr,"").trim();if(n){var i=e("Content-Type");(i=i&&0===i.indexOf(tr))||(i=(i=n.match(nr))&&ir[i[0]].test(n)),i&&(t=N(n))}}return t}function ae(t){var e,n=ot();return x(t)?i(t.split("\n"),function(t){e=t.indexOf(":");var i=Kn(ci(t.substr(0,e)));t=ci(t.substr(e+1)),i&&(n[i]=n[i]?n[i]+", "+t:t)}):y(t)&&i(t,function(t,e){var i=Kn(e),r=ci(t);i&&(n[i]=n[i]?n[i]+", "+r:r)}),n}function ce(t){var e;return function(n){return e||(e=ae(t)),n?(n=e[Kn(n)],void 0===n&&(n=null),n):e}}function le(t,e,n,r){return w(r)?r(t,e,n):(i(r,function(i){t=i(t,e,n)}),t)}function ue(){var t=this.defaults={transformResponse:[oe],transformRequest:[function(t){return y(t)&&"[object File]"!==ei.call(t)&&"[object Blob]"!==ei.call(t)&&"[object FormData]"!==ei.call(t)?F(t):t}],headers:{common:{Accept:"application/json, text/plain, */*"},post:ct(er),put:ct(er),patch:ct(er)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},n=!1;this.useApplyAsync=function(t){return m(t)?(n=!!t,this):n};var r=!0;this.useLegacyPromiseExtensions=function(t){return m(t)?(r=!!t,this):r};var s=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory","$rootScope","$q","$injector",function(o,a,l,u,h,f){function d(n){function s(t,e){for(var n=0,i=e.length;n<i;){var r=e[n++],s=e[n++];t=t.then(r,s)}return e.length=0,t}function o(t,e){var n,r={};return i(t,function(t,i){w(t)?(n=t(e),null!=n&&(r[i]=n)):r[i]=t}),r}function a(t){var e=c({},t);return e.data=le(t.data,t.headers,t.status,l.transformResponse),t=t.status,200<=t&&300>t?e:h.reject(e)}if(!y(n))throw e("$http")("badreq",n);if(!x(n.url))throw e("$http")("badreq",n.url);var l=c({method:"get",transformRequest:t.transformRequest,transformResponse:t.transformResponse,paramSerializer:t.paramSerializer},n);l.headers=function(e){var n,i,r,s=t.headers,a=c({},e.headers),s=c({},s.common,s[Kn(e.method)]);t:for(n in s){i=Kn(n);for(r in a)if(Kn(r)===i)continue t;a[n]=s[n]}return o(a,ct(e))}(n),l.method=Jn(l.method),l.paramSerializer=x(l.paramSerializer)?f.get(l.paramSerializer):l.paramSerializer;var u=[],d=[],g=h.when(l);return i($,function(t){(t.request||t.requestError)&&u.unshift(t.request,t.requestError),(t.response||t.responseError)&&d.push(t.response,t.responseError)}),g=s(g,u),g=g.then(function(e){var n=e.headers,r=le(e.data,ce(n),void 0,e.transformRequest);return v(r)&&i(n,function(t,e){"content-type"===Kn(e)&&delete n[e]}),v(e.withCredentials)&&!v(t.withCredentials)&&(e.withCredentials=t.withCredentials),p(e,r).then(a,a)}),g=s(g,d),r?(g.success=function(t){return nt(t,"fn"),g.then(function(e){t(e.data,e.status,e.headers,l)}),g},g.error=function(t){return nt(t,"fn"),g.then(null,function(e){t(e.data,e.status,e.headers,l)}),g}):(g.success=or("success"),g.error=or("error")),g}function p(e,r){function s(t){if(t){var e={};return i(t,function(t,i){e[i]=function(e){function i(){t(e)}n?u.$applyAsync(i):u.$$phase?i():u.$apply(i)}}),e}}function c(t,e,i,r){function s(){l(e,t,i,r)}x&&(200<=t&&300>t?x.put(T,[t,e,ae(i),r]):x.remove(T)),n?u.$applyAsync(s):(s(),u.$$phase||u.$apply())}function l(t,n,i,r){n=-1<=n?n:0,(200<=n&&300>n?_.resolve:_.reject)({data:t,status:n,headers:ce(i),config:e,statusText:r})}function f(t){l(t.data,t.status,ct(t.headers()),t.statusText)}function p(){var t=d.pendingRequests.indexOf(e);-1!==t&&d.pendingRequests.splice(t,1)}var x,$,_=h.defer(),C=_.promise,S=e.headers,T=g(e.url,e.paramSerializer(e.params));return d.pendingRequests.push(e),C.then(p,p),!e.cache&&!t.cache||!1===e.cache||"GET"!==e.method&&"JSONP"!==e.method||(x=y(e.cache)?e.cache:y(t.cache)?t.cache:b),x&&($=x.get(T),m($)?$&&w($.then)?$.then(f,f):oi($)?l($[1],$[0],ct($[2]),$[3]):l($,200,{},"OK"):x.put(T,C)),v($)&&(($=cn(e.url)?a()[e.xsrfCookieName||t.xsrfCookieName]:void 0)&&(S[e.xsrfHeaderName||t.xsrfHeaderName]=$),o(e.method,T,r,c,S,e.timeout,e.withCredentials,e.responseType,s(e.eventHandlers),s(e.uploadEventHandlers))),C}function g(t,e){return 0<e.length&&(t+=(-1==t.indexOf("?")?"?":"&")+e),t}var b=l("$http");t.paramSerializer=x(t.paramSerializer)?f.get(t.paramSerializer):t.paramSerializer;var $=[];return i(s,function(t){$.unshift(x(t)?f.get(t):f.invoke(t))}),d.pendingRequests=[],function(t){i(arguments,function(t){d[t]=function(e,n){return d(c({},n||{},{method:t,url:e}))}})}("get","delete","head","jsonp"),function(t){i(arguments,function(t){d[t]=function(e,n,i){return d(c({},i||{},{method:t,url:e,data:n}))}})}("post","put","patch"),d.defaults=t,d}]}function he(){this.$get=function(){return function(){return new t.XMLHttpRequest}}}function fe(){this.$get=["$browser","$jsonpCallbacks","$document","$xhrFactory",function(t,e,n,i){return de(t,i,t.defer,e,n[0])}]}function de(t,e,n,r,s){function o(t,e,n){t=t.replace("JSON_CALLBACK",e);var i=s.createElement("script"),o=null;return i.type="text/javascript",i.src=t,i.async=!0,o=function(t){i.removeEventListener("load",o,!1),i.removeEventListener("error",o,!1),s.body.removeChild(i),i=null;var a=-1,c="unknown";t&&("load"!==t.type||r.wasCalled(e)||(t={type:"error"}),c=t.type,a="error"===t.type?404:200),n&&n(a,c)},i.addEventListener("load",o,!1),i.addEventListener("error",o,!1),s.body.appendChild(i),o}return function(s,a,c,l,u,h,d,p,g,y){function b(){_&&_(),C&&C.abort()}function x(e,i,r,s,o){m(T)&&n.cancel(T),_=C=null,e(i,r,s,o),t.$$completeOutstandingRequest(f)}if(t.$$incOutstandingRequestCount(),a=a||t.url(),"jsonp"===Kn(s))var $=r.createCallback(a),_=o(a,$,function(t,e){var n=200===t&&r.getResponse($);x(l,t,n,"",e),r.removeCallback($)});else{var C=e(s,a);if(C.open(s,a,!0),i(u,function(t,e){m(t)&&C.setRequestHeader(e,t)}),C.onload=function(){var t=C.statusText||"",e="response"in C?C.response:C.responseText,n=1223===C.status?204:C.status;0===n&&(n=e?200:"file"==an(a).protocol?404:0),x(l,n,e,C.getAllResponseHeaders(),t)},s=function(){x(l,-1,null,null,"")},C.onerror=s,C.onabort=s,i(g,function(t,e){C.addEventListener(e,t)}),i(y,function(t,e){C.upload.addEventListener(e,t)}),d&&(C.withCredentials=!0),p)try{C.responseType=p}catch(S){if("json"!==p)throw S}C.send(v(c)?null:c)}if(0<h)var T=n(b,h);else h&&w(h.then)&&h.then(b)}}function pe(){var t="{{",e="}}";this.startSymbol=function(e){return e?(t=e,this):t},this.endSymbol=function(t){return t?(e=t,this):e},this.$get=["$parse","$exceptionHandler","$sce",function(n,i,r){function s(t){return"\\\\\\"+t}function o(n){return n.replace(f,t).replace(d,e)}function a(t,e,n,i){var r;return r=t.$watch(function(t){return r(),i(t)},e,n)}function l(s,l,f,d){function g(t){try{var e=t;t=f?r.getTrusted(f,e):r.valueOf(e);var n;if(d&&!m(t))n=t;else if(null==t)n="";else{switch(typeof t){case"string":break;case"number":t=""+t;break;default:t=F(t)}n=t}return n}catch(o){i(ar.interr(s,o))}}if(!s.length||-1===s.indexOf(t)){var y;return l||(l=o(s),y=p(l),y.exp=s,y.expressions=[],y.$$watchDelegate=a),y}d=!!d;var b,x,$=0,_=[],C=[];y=s.length;for(var S=[],T=[];$<y;){if(-1==(b=s.indexOf(t,$))||-1==(x=s.indexOf(e,b+u))){$!==y&&S.push(o(s.substring($)));break}$!==b&&S.push(o(s.substring($,b))),$=s.substring(b+u,x),_.push($),C.push(n($,g)),$=x+h,T.push(S.length),S.push("")}if(f&&1<S.length&&ar.throwNoconcat(s),!l||_.length){var O=function(t){for(var e=0,n=_.length;e<n;e++){if(d&&v(t[e]))return;S[T[e]]=t[e]}return S.join("")};return c(function(t){var e=0,n=_.length,r=Array(n);try{for(;e<n;e++)r[e]=C[e](t);return O(r)}catch(o){i(ar.interr(s,o))}},{exp:s,expressions:_,$$watchDelegate:function(t,e){var n;return t.$watchGroup(C,function(i,r){var s=O(i);w(e)&&e.call(this,s,i!==r?n:s,t),n=s})}})}}var u=t.length,h=e.length,f=new RegExp(t.replace(/./g,s),"g"),d=new RegExp(e.replace(/./g,s),"g");return l.startSymbol=function(){return t},l.endSymbol=function(){return e},l}]}function ge(){this.$get=["$rootScope","$window","$q","$$q","$browser",function(t,e,n,i,r){function s(s,a,c,l){function u(){h?s.apply(null,f):s(g)}var h=4<arguments.length,f=h?Zn.call(arguments,4):[],d=e.setInterval,p=e.clearInterval,g=0,v=m(l)&&!l,y=(v?i:n).defer(),b=y.promise;return c=m(c)?c:0,b.$$intervalId=d(function(){v?r.defer(u):t.$evalAsync(u),y.notify(g++),0<c&&g>=c&&(y.resolve(g),p(b.$$intervalId),delete o[b.$$intervalId]),v||t.$apply()},a),o[b.$$intervalId]=y,b}var o={};return s.cancel=function(t){return!!(t&&t.$$intervalId in o)&&(o[t.$$intervalId].reject("canceled"),e.clearInterval(t.$$intervalId),delete o[t.$$intervalId],!0)},s}]}function ve(t){t=t.split("/");for(var e=t.length;e--;)t[e]=G(t[e]);return t.join("/")}function me(t,e){var n=an(t);e.$$protocol=n.protocol,e.$$host=n.hostname,e.$$port=u(n.port)||ur[n.protocol]||null}function ye(t,e){var n="/"!==t.charAt(0);n&&(t="/"+t);var i=an(t);e.$$path=decodeURIComponent(n&&"/"===i.pathname.charAt(0)?i.pathname.substring(1):i.pathname),e.$$search=X(i.search),e.$$hash=decodeURIComponent(i.hash),e.$$path&&"/"!=e.$$path.charAt(0)&&(e.$$path="/"+e.$$path)}function be(t,e){if(0===e.lastIndexOf(t,0))return e.substr(t.length)}function xe(t){var e=t.indexOf("#");return-1==e?t:t.substr(0,e)}function $e(t){return t.replace(/(#.+)|#$/,"$1")}function _e(t,e,n){this.$$html5=!0,n=n||"",me(t,this),this.$$parse=function(t){var n=be(e,t);if(!x(n))throw hr("ipthprfx",t,e);ye(n,this),this.$$path||(this.$$path="/"),this.$$compose()},this.$$compose=function(){var t=z(this.$$search),n=this.$$hash?"#"+G(this.$$hash):"";this.$$url=ve(this.$$path)+(t?"?"+t:"")+n,this.$$absUrl=e+this.$$url.substr(1)},this.$$parseLinkUrl=function(i,r){if(r&&"#"===r[0])return this.hash(r.slice(1)),!0;var s,o;return m(s=be(t,i))?(o=s,o=m(s=be(n,s))?e+(be("/",s)||s):t+o):m(s=be(e,i))?o=e+s:e==i+"/"&&(o=e),o&&this.$$parse(o),!!o}}function we(t,e,n){me(t,this),this.$$parse=function(i){var r,s=be(t,i)||be(e,i);v(s)||"#"!==s.charAt(0)?this.$$html5?r=s:(r="",v(s)&&(t=i,this.replace())):(r=be(n,s),v(r)&&(r=s)),ye(r,this),i=this.$$path;var s=t,o=/^\/[A-Z]:(\/.*)/;0===r.lastIndexOf(s,0)&&(r=r.replace(s,"")),o.exec(r)||(i=(r=o.exec(i))?r[1]:i),this.$$path=i,this.$$compose()},this.$$compose=function(){var e=z(this.$$search),i=this.$$hash?"#"+G(this.$$hash):"";this.$$url=ve(this.$$path)+(e?"?"+e:"")+i,this.$$absUrl=t+(this.$$url?n+this.$$url:"")},this.$$parseLinkUrl=function(e,n){return xe(t)==xe(e)&&(this.$$parse(e),!0)}}function Ce(t,e,n){this.$$html5=!0,we.apply(this,arguments),this.$$parseLinkUrl=function(i,r){if(r&&"#"===r[0])return this.hash(r.slice(1)),!0;var s,o;return t==xe(i)?s=i:(o=be(e,i))?s=t+n+o:e===i+"/"&&(s=e),s&&this.$$parse(s),!!s},this.$$compose=function(){var e=z(this.$$search),i=this.$$hash?"#"+G(this.$$hash):"";this.$$url=ve(this.$$path)+(e?"?"+e:"")+i,this.$$absUrl=t+n+this.$$url}}function Se(t){return function(){return this[t]}}function Te(t,e){return function(n){return v(n)?this[t]:(this[t]=e(n),this.$$compose(),this)}}function Oe(){var t="",e={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(e){return m(e)?(t=e,this):t},this.html5Mode=function(t){return O(t)?(e.enabled=t,this):y(t)?(O(t.enabled)&&(e.enabled=t.enabled),O(t.requireBase)&&(e.requireBase=t.requireBase),O(t.rewriteLinks)&&(e.rewriteLinks=t.rewriteLinks),this):e},this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(n,i,r,s,o){function a(t,e,n){var r=l.url(),s=l.$$state;try{i.url(t,e,n),l.$$state=i.state()}catch(o){throw l.url(r),l.$$state=s,o}}function c(t,e){n.$broadcast("$locationChangeSuccess",l.absUrl(),t,l.$$state,e)}var l,u;u=i.baseHref();var h,f=i.url();if(e.enabled){if(!u&&e.requireBase)throw hr("nobase");h=f.substring(0,f.indexOf("/",f.indexOf("//")+2))+(u||"/"),u=r.history?_e:Ce}else h=xe(f),u=we;var d=h.substr(0,xe(h).lastIndexOf("/")+1);l=new u(h,d,"#"+t),l.$$parseLinkUrl(f,f),l.$$state=i.state();var p=/^\s*(javascript|mailto):/i;s.on("click",function(t){if(e.rewriteLinks&&!t.ctrlKey&&!t.metaKey&&!t.shiftKey&&2!=t.which&&2!=t.button){for(var r=zn(t.target);"a"!==j(r[0]);)if(r[0]===s[0]||!(r=r.parent())[0])return;var a=r.prop("href"),c=r.attr("href")||r.attr("xlink:href");y(a)&&"[object SVGAnimatedString]"===a.toString()&&(a=an(a.animVal).href),p.test(a)||!a||r.attr("target")||t.isDefaultPrevented()||!l.$$parseLinkUrl(a,c)||(t.preventDefault(),l.absUrl()!=i.url()&&(n.$apply(),o.angular["ff-684208-preventDefault"]=!0))}}),$e(l.absUrl())!=$e(f)&&i.url(l.absUrl(),!0);var g=!0;return i.onUrlChange(function(t,e){v(be(d,t))?o.location.href=t:(n.$evalAsync(function(){var i,r=l.absUrl(),s=l.$$state;t=$e(t),l.$$parse(t),l.$$state=e,i=n.$broadcast("$locationChangeStart",t,r,e,s).defaultPrevented,l.absUrl()===t&&(i?(l.$$parse(r),l.$$state=s,a(r,!1,s)):(g=!1,c(r,s)))}),n.$$phase||n.$digest())}),n.$watch(function(){var t=$e(i.url()),e=$e(l.absUrl()),s=i.state(),o=l.$$replace,u=t!==e||l.$$html5&&r.history&&s!==l.$$state;(g||u)&&(g=!1,n.$evalAsync(function(){var e=l.absUrl(),i=n.$broadcast("$locationChangeStart",e,t,l.$$state,s).defaultPrevented;l.absUrl()===e&&(i?(l.$$parse(t),l.$$state=s):(u&&a(e,o,s===l.$$state?null:l.$$state),c(t,s)))})),l.$$replace=!1}),l}]}function ke(){var t=!0,e=this;this.debugEnabled=function(e){return m(e)?(t=e,this):t},this.$get=["$window",function(n){function r(t){return t instanceof Error&&(t.stack?t=t.message&&-1===t.stack.indexOf(t.message)?"Error: "+t.message+"\n"+t.stack:t.stack:t.sourceURL&&(t=t.message+"\n"+t.sourceURL+":"+t.line)),t}function s(t){var e=n.console||{},s=e[t]||e.log||f;t=!1;try{t=!!s.apply}catch(o){}return t?function(){var t=[];return i(arguments,function(e){t.push(r(e))}),s.apply(e,t)}:function(t,e){s(t,null==e?"":e)}}return{log:s("log"),info:s("info"),warn:s("warn"),error:s("error"),debug:function(){var n=s("debug");return function(){t&&n.apply(e,arguments)}}()}}]}function Ae(t,e){if("__defineGetter__"===t||"__defineSetter__"===t||"__lookupGetter__"===t||"__lookupSetter__"===t||"__proto__"===t)throw dr("isecfld",e);return t}function Ee(t){return t+""}function je(t,e){if(t){if(t.constructor===t)throw dr("isecfn",e);if(t.window===t)throw dr("isecwindow",e);if(t.children&&(t.nodeName||t.prop&&t.attr&&t.find))throw dr("isecdom",e);if(t===Object)throw dr("isecobj",e)}return t}function Me(t,e){if(t){if(t.constructor===t)throw dr("isecfn",e);if(t===pr||t===gr||t===vr)throw dr("isecff",e)}}function De(t,e){if(t&&(t===(0).constructor||t===(!1).constructor||t==="".constructor||t==={}.constructor||t===[].constructor||t===Function.constructor))throw dr("isecaf",e)}function Pe(t,e){return"undefined"!=typeof t?t:e}function Ie(t,e){return"undefined"==typeof t?e:"undefined"==typeof e?t:t+e}function Le(t,e){var n,r;switch(t.type){case xr.Program:n=!0,i(t.body,function(t){Le(t.expression,e),n=n&&t.expression.constant}),t.constant=n;break;case xr.Literal:t.constant=!0,t.toWatch=[];break;case xr.UnaryExpression:Le(t.argument,e),t.constant=t.argument.constant,t.toWatch=t.argument.toWatch;break;case xr.BinaryExpression:Le(t.left,e),Le(t.right,e),t.constant=t.left.constant&&t.right.constant,t.toWatch=t.left.toWatch.concat(t.right.toWatch);break;case xr.LogicalExpression:Le(t.left,e),Le(t.right,e),t.constant=t.left.constant&&t.right.constant,t.toWatch=t.constant?[]:[t];break;case xr.ConditionalExpression:Le(t.test,e),Le(t.alternate,e),Le(t.consequent,e),t.constant=t.test.constant&&t.alternate.constant&&t.consequent.constant,t.toWatch=t.constant?[]:[t];break;case xr.Identifier:t.constant=!1,t.toWatch=[t];break;case xr.MemberExpression:Le(t.object,e),t.computed&&Le(t.property,e),t.constant=t.object.constant&&(!t.computed||t.property.constant),t.toWatch=[t];break;case xr.CallExpression:n=!!t.filter&&!e(t.callee.name).$stateful,r=[],i(t.arguments,function(t){Le(t,e),n=n&&t.constant,t.constant||r.push.apply(r,t.toWatch)}),t.constant=n,t.toWatch=t.filter&&!e(t.callee.name).$stateful?r:[t];break;case xr.AssignmentExpression:Le(t.left,e),Le(t.right,e),t.constant=t.left.constant&&t.right.constant,t.toWatch=[t];break;case xr.ArrayExpression:n=!0,r=[],i(t.elements,function(t){Le(t,e),n=n&&t.constant,t.constant||r.push.apply(r,t.toWatch)}),t.constant=n,t.toWatch=r;break;case xr.ObjectExpression:n=!0,r=[],i(t.properties,function(t){Le(t.value,e),n=n&&t.value.constant&&!t.computed,t.value.constant||r.push.apply(r,t.value.toWatch)}),t.constant=n,t.toWatch=r;break;case xr.ThisExpression:t.constant=!1,t.toWatch=[];break;case xr.LocalsExpression:t.constant=!1,t.toWatch=[]}}function Re(t){if(1==t.length){t=t[0].expression;var e=t.toWatch;return 1!==e.length?e:e[0]!==t?e:void 0}}function Fe(t){return t.type===xr.Identifier||t.type===xr.MemberExpression}function Ne(t){if(1===t.body.length&&Fe(t.body[0].expression))return{type:xr.AssignmentExpression,left:t.body[0].expression,right:{type:xr.NGValueParameter},operator:"="}}function Be(t){return 0===t.body.length||1===t.body.length&&(t.body[0].expression.type===xr.Literal||t.body[0].expression.type===xr.ArrayExpression||t.body[0].expression.type===xr.ObjectExpression)}function Ve(t,e){this.astBuilder=t,this.$filter=e}function We(t,e){this.astBuilder=t,this.$filter=e}function He(t){return"constructor"==t}function Xe(t){return w(t.valueOf)?t.valueOf():_r.call(t)}function ze(){var t,e,n=ot(),r=ot(),s={"true":!0,"false":!1,"null":null,undefined:void 0};this.addLiteral=function(t,e){s[t]=e},this.setIdentifierFns=function(n,i){return t=n,e=i,this},this.$get=["$filter",function(o){function a(t,e,i){var s,a,l;switch(i=i||x,typeof t){case"string":l=t=t.trim();var v=i?r:n;if(s=v[l],!s){":"===t.charAt(0)&&":"===t.charAt(1)&&(a=!0,t=t.substring(2)),s=i?b:y;var m=new br(s);s=new $r(m,o,s).parse(t),s.constant?s.$$watchDelegate=p:a?s.$$watchDelegate=s.literal?d:h:s.inputs&&(s.$$watchDelegate=u),i&&(s=c(s)),v[l]=s}return g(s,e);case"function":return g(t,e);default:return g(f,e)}}function c(t){function e(e,n,i,r){var s=x;x=!0;try{return t(e,n,i,r)}finally{x=s}}if(!t)return t;e.$$watchDelegate=t.$$watchDelegate,e.assign=c(t.assign),e.constant=t.constant,e.literal=t.literal;for(var n=0;t.inputs&&n<t.inputs.length;++n)t.inputs[n]=c(t.inputs[n]);return e.inputs=t.inputs,e}function l(t,e){return null==t||null==e?t===e:("object"!=typeof t||(t=Xe(t),"object"!=typeof t))&&(t===e||t!==t&&e!==e)}function u(t,e,n,i,r){var s,o=i.inputs;if(1===o.length){var a=l,o=o[0];return t.$watch(function(t){var e=o(t);return l(e,a)||(s=i(t,void 0,void 0,[e]),a=e&&Xe(e)),s},e,n,r)}for(var c=[],u=[],h=0,f=o.length;h<f;h++)c[h]=l,u[h]=null;return t.$watch(function(t){for(var e=!1,n=0,r=o.length;n<r;n++){var a=o[n](t);(e||(e=!l(a,c[n])))&&(u[n]=a,c[n]=a&&Xe(a))}return e&&(s=i(t,void 0,void 0,u)),s},e,n,r)}function h(t,e,n,i){var r,s;return r=t.$watch(function(t){return i(t)},function(t,n,i){s=t,w(e)&&e.apply(this,arguments),m(t)&&i.$$postDigest(function(){m(s)&&r()})},n)}function d(t,e,n,r){function s(t){var e=!0;return i(t,function(t){m(t)||(e=!1)}),e}var o,a;return o=t.$watch(function(t){return r(t)},function(t,n,i){a=t,w(e)&&e.call(this,t,n,i),s(t)&&i.$$postDigest(function(){s(a)&&o()})},n)}function p(t,e,n,i){var r;return r=t.$watch(function(t){return r(),i(t)},e,n)}function g(t,e){if(!e)return t;var n=t.$$watchDelegate,i=!1,n=n!==d&&n!==h?function(n,r,s,o){return s=i&&o?o[0]:t(n,r,s,o),e(s,n,r)}:function(n,i,r,s){return r=t(n,i,r,s),n=e(r,n,i),m(r)?n:r};return t.$$watchDelegate&&t.$$watchDelegate!==u?n.$$watchDelegate=t.$$watchDelegate:e.$stateful||(n.$$watchDelegate=u,i=!t.inputs,n.inputs=t.inputs?t.inputs:[t]),n}var v=ui().noUnsafeEval,y={csp:v,expensiveChecks:!1,literals:D(s),isIdentifierStart:w(t)&&t,isIdentifierContinue:w(e)&&e},b={csp:v,expensiveChecks:!0,literals:D(s),isIdentifierStart:w(t)&&t,isIdentifierContinue:w(e)&&e},x=!1;return a.$$runningExpensiveChecks=function(){return x},a}]}function Ge(){this.$get=["$rootScope","$exceptionHandler",function(t,e){return Ye(function(e){t.$evalAsync(e)},e)}]}function qe(){this.$get=["$browser","$exceptionHandler",function(t,e){return Ye(function(e){t.defer(e)},e)}]}function Ye(t,n){function r(){this.$$state={status:0}}function s(t,e){return function(n){e.call(t,n)}}function o(e){!e.processScheduled&&e.pending&&(e.processScheduled=!0,t(function(){var t,i,r;r=e.pending,e.processScheduled=!1,e.pending=void 0;for(var s=0,o=r.length;s<o;++s){i=r[s][0],t=r[s][e.status];try{w(t)?i.resolve(t(e.value)):1===e.status?i.resolve(e.value):i.reject(e.value)}catch(a){i.reject(a),n(a)}}}))}function a(){this.promise=new r}var l=e("$q",TypeError),u=function(){var t=new a;return t.resolve=s(t,t.resolve),t.reject=s(t,t.reject),t.notify=s(t,t.notify),t};c(r.prototype,{then:function(t,e,n){if(v(t)&&v(e)&&v(n))return this;var i=new a;return this.$$state.pending=this.$$state.pending||[],this.$$state.pending.push([i,t,e,n]),0<this.$$state.status&&o(this.$$state),i.promise},"catch":function(t){return this.then(null,t)},"finally":function(t,e){return this.then(function(e){return f(e,!0,t)},function(e){return f(e,!1,t)},e)}}),c(a.prototype,{resolve:function(t){this.promise.$$state.status||(t===this.promise?this.$$reject(l("qcycle",t)):this.$$resolve(t))},$$resolve:function(t){function e(t){c||(c=!0,a.$$resolve(t))}function i(t){c||(c=!0,a.$$reject(t))}var r,a=this,c=!1;try{(y(t)||w(t))&&(r=t&&t.then),w(r)?(this.promise.$$state.status=-1,r.call(t,e,i,s(this,this.notify))):(this.promise.$$state.value=t,this.promise.$$state.status=1,o(this.promise.$$state))}catch(l){i(l),n(l)}},reject:function(t){this.promise.$$state.status||this.$$reject(t)},$$reject:function(t){this.promise.$$state.value=t,this.promise.$$state.status=2,o(this.promise.$$state)},notify:function(e){var i=this.promise.$$state.pending;0>=this.promise.$$state.status&&i&&i.length&&t(function(){for(var t,r,s=0,o=i.length;s<o;s++){r=i[s][0],t=i[s][3];try{r.notify(w(t)?t(e):e)}catch(a){n(a)}}})}});var h=function(t,e){var n=new a;return e?n.resolve(t):n.reject(t),n.promise},f=function(t,e,n){var i=null;try{w(n)&&(i=n())}catch(r){return h(r,!1)}return i&&w(i.then)?i.then(function(){return h(t,e)},function(t){return h(t,!1)}):h(t,e)},d=function(t,e,n,i){var r=new a;return r.resolve(t),r.promise.then(e,n,i)},p=function(t){if(!w(t))throw l("norslvr",t);var e=new a;return t(function(t){e.resolve(t)},function(t){e.reject(t)}),e.promise};return p.prototype=r.prototype,p.defer=u,p.reject=function(t){var e=new a;return e.reject(t),e.promise},p.when=d,p.resolve=d,p.all=function(t){var e=new a,n=0,r=oi(t)?[]:{};return i(t,function(t,i){n++,d(t).then(function(t){r.hasOwnProperty(i)||(r[i]=t,--n||e.resolve(r))},function(t){r.hasOwnProperty(i)||e.reject(t)})}),0===n&&e.resolve(r),e.promise},p.race=function(t){var e=u();return i(t,function(t){d(t).then(e.resolve,e.reject)}),e.promise},p}function Ue(){this.$get=["$window","$timeout",function(t,e){var n=t.requestAnimationFrame||t.webkitRequestAnimationFrame,i=t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.webkitCancelRequestAnimationFrame,r=!!n,s=r?function(t){var e=n(t);return function(){i(e)}}:function(t){var n=e(t,16.66,!1);return function(){e.cancel(n)}};return s.supported=r,s}]}function Ke(){function t(t){function e(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$id=++si,this.$$ChildScope=null}return e.prototype=t,e}var r=10,s=e("$rootScope"),o=null,a=null;this.digestTtl=function(t){return arguments.length&&(r=t),r},this.$get=["$exceptionHandler","$parse","$browser",function(e,c,l){function u(t){t.currentScope.$$destroyed=!0}function h(t){9===Xn&&(t.$$childHead&&h(t.$$childHead),t.$$nextSibling&&h(t.$$nextSibling)),t.$parent=t.$$nextSibling=t.$$prevSibling=t.$$childHead=t.$$childTail=t.$root=t.$$watchers=null}function d(){this.$id=++si,this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null,this.$root=this,this.$$destroyed=!1,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$$isolateBindings=null}function p(t){if(_.$$phase)throw s("inprog",_.$$phase);_.$$phase=t}function g(t,e){do t.$$watchersCount+=e;while(t=t.$parent)}function m(t,e,n){do t.$$listenerCount[n]-=e,0===t.$$listenerCount[n]&&delete t.$$listenerCount[n];while(t=t.$parent)}function b(){}function x(){for(;T.length;)try{T.shift()()}catch(t){e(t)}a=null}function $(){null===a&&(a=l.defer(function(){_.$apply(x)}))}d.prototype={constructor:d,$new:function(e,n){var i;return n=n||this,e?(i=new d,i.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=t(this)),i=new this.$$ChildScope),i.$parent=n,i.$$prevSibling=n.$$childTail,n.$$childHead?(n.$$childTail.$$nextSibling=i,n.$$childTail=i):n.$$childHead=n.$$childTail=i,(e||n!=this)&&i.$on("$destroy",u),i},$watch:function(t,e,n,i){var r=c(t);if(r.$$watchDelegate)return r.$$watchDelegate(this,e,n,r,t);var s=this,a=s.$$watchers,l={fn:e,last:b,get:r,exp:i||t,eq:!!n};return o=null,w(e)||(l.fn=f),a||(a=s.$$watchers=[]),a.unshift(l),g(this,1),function(){0<=M(a,l)&&g(s,-1),o=null}},$watchGroup:function(t,e){function n(){c=!1,l?(l=!1,e(s,s,a)):e(s,r,a)}var r=Array(t.length),s=Array(t.length),o=[],a=this,c=!1,l=!0;if(!t.length){var u=!0;return a.$evalAsync(function(){u&&e(s,s,a)}),function(){u=!1}}return 1===t.length?this.$watch(t[0],function(t,n,i){s[0]=t,r[0]=n,e(s,t===n?s:r,i)}):(i(t,function(t,e){var i=a.$watch(t,function(t,i){s[e]=t,r[e]=i,c||(c=!0,a.$evalAsync(n))});o.push(i)}),function(){for(;o.length;)o.shift()()})},$watchCollection:function(t,e){function i(t){r=t;var e,i,o,a;if(!v(r)){if(y(r))if(n(r))for(s!==f&&(s=f,g=s.length=0,u++),t=r.length,g!==t&&(u++,s.length=g=t),e=0;e<t;e++)a=s[e],o=r[e],i=a!==a&&o!==o,i||a===o||(u++,s[e]=o);else{s!==d&&(s=d={},g=0,u++),t=0;for(e in r)Un.call(r,e)&&(t++,o=r[e],a=s[e],e in s?(i=a!==a&&o!==o,i||a===o||(u++,s[e]=o)):(g++,s[e]=o,u++));if(g>t)for(e in u++,s)Un.call(r,e)||(g--,delete s[e])}else s!==r&&(s=r,u++);return u}}i.$stateful=!0;var r,s,o,a=this,l=1<e.length,u=0,h=c(t,i),f=[],d={},p=!0,g=0;return this.$watch(h,function(){if(p?(p=!1,e(r,r,a)):e(r,o,a),l)if(y(r))if(n(r)){o=Array(r.length);for(var t=0;t<r.length;t++)o[t]=r[t]}else for(t in o={},r)Un.call(r,t)&&(o[t]=r[t]);else o=r})},$digest:function(){var t,n,i,c,u,h,f,d,g,v,m,y=r,$=[];p("$digest"),l.$$checkUrlChange(),this===_&&null!==a&&(l.defer.cancel(a),x()),o=null;do{for(d=!1,g=this,h=0;h<C.length;h++){try{m=C[h],m.scope.$eval(m.expression,m.locals)}catch(T){e(T)}o=null}C.length=0;t:do{if(h=g.$$watchers)for(f=h.length;f--;)try{if(t=h[f])if(u=t.get,(n=u(g))===(i=t.last)||(t.eq?P(n,i):"number"==typeof n&&"number"==typeof i&&isNaN(n)&&isNaN(i))){if(t===o){d=!1;break t}}else d=!0,o=t,t.last=t.eq?D(n,null):n,c=t.fn,c(n,i===b?n:i,g),5>y&&(v=4-y,$[v]||($[v]=[]),$[v].push({msg:w(t.exp)?"fn: "+(t.exp.name||t.exp.toString()):t.exp,newVal:n,oldVal:i}))}catch(k){e(k)}if(!(h=g.$$watchersCount&&g.$$childHead||g!==this&&g.$$nextSibling))for(;g!==this&&!(h=g.$$nextSibling);)g=g.$parent}while(g=h);if((d||C.length)&&!y--)throw _.$$phase=null,s("infdig",r,$)}while(d||C.length);for(_.$$phase=null;O<S.length;)try{S[O++]()}catch(A){e(A)}S.length=O=0},$destroy:function(){if(!this.$$destroyed){var t=this.$parent;this.$broadcast("$destroy"),this.$$destroyed=!0,this===_&&l.$$applicationDestroyed(),g(this,-this.$$watchersCount);for(var e in this.$$listenerCount)m(this,this.$$listenerCount[e],e);t&&t.$$childHead==this&&(t.$$childHead=this.$$nextSibling),t&&t.$$childTail==this&&(t.$$childTail=this.$$prevSibling),this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling),this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling),this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=f,this.$on=this.$watch=this.$watchGroup=function(){return f},this.$$listeners={},this.$$nextSibling=null,h(this)}},$eval:function(t,e){return c(t)(this,e)},$evalAsync:function(t,e){_.$$phase||C.length||l.defer(function(){C.length&&_.$digest()}),C.push({scope:this,expression:c(t),locals:e})},$$postDigest:function(t){S.push(t)},$apply:function(t){try{p("$apply");try{return this.$eval(t)}finally{_.$$phase=null}}catch(n){e(n)}finally{try{_.$digest()}catch(i){throw e(i),i}}},$applyAsync:function(t){function e(){n.$eval(t)}var n=this;t&&T.push(e),t=c(t),$()},$on:function(t,e){var n=this.$$listeners[t];n||(this.$$listeners[t]=n=[]),n.push(e);var i=this;do i.$$listenerCount[t]||(i.$$listenerCount[t]=0),i.$$listenerCount[t]++;while(i=i.$parent);var r=this;return function(){var i=n.indexOf(e);-1!==i&&(n[i]=null,m(r,1,t))}},$emit:function(t,n){var i,r,s,o=[],a=this,c=!1,l={name:t,targetScope:a,stopPropagation:function(){c=!0},preventDefault:function(){l.defaultPrevented=!0},defaultPrevented:!1},u=I([l],arguments,1);do{for(i=a.$$listeners[t]||o,l.currentScope=a,r=0,s=i.length;r<s;r++)if(i[r])try{i[r].apply(null,u)}catch(h){e(h)}else i.splice(r,1),r--,s--;if(c)return l.currentScope=null,l;a=a.$parent}while(a);return l.currentScope=null,l},$broadcast:function(t,n){var i=this,r=this,s={name:t,targetScope:this,preventDefault:function(){s.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[t])return s;for(var o,a,c=I([s],arguments,1);i=r;){for(s.currentScope=i,r=i.$$listeners[t]||[],o=0,a=r.length;o<a;o++)if(r[o])try{r[o].apply(null,c)}catch(l){e(l)}else r.splice(o,1),o--,a--;if(!(r=i.$$listenerCount[t]&&i.$$childHead||i!==this&&i.$$nextSibling))for(;i!==this&&!(r=i.$$nextSibling);)i=i.$parent}return s.currentScope=null,s}};var _=new d,C=_.$$asyncQueue=[],S=_.$$postDigestQueue=[],T=_.$$applyAsyncQueue=[],O=0;return _}]}function Je(){var t=/^\s*(https?|ftp|mailto|tel|file):/,e=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(e){return m(e)?(t=e,this):t},this.imgSrcSanitizationWhitelist=function(t){return m(t)?(e=t,this):e},this.$get=function(){return function(n,i){var r,s=i?e:t;return r=an(n).href,""===r||r.match(s)?n:"unsafe:"+r}}}function Ze(t){if("self"===t)return t;if(x(t)){if(-1<t.indexOf("***"))throw wr("iwcard",t);return t=li(t).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*"),new RegExp("^"+t+"$")}if(C(t))return new RegExp("^"+t.source+"$");throw wr("imatcher")}function Qe(t){var e=[];return m(t)&&i(t,function(t){e.push(Ze(t))}),e}function tn(){this.SCE_CONTEXTS=Cr;var t=["self"],e=[];this.resourceUrlWhitelist=function(e){return arguments.length&&(t=Qe(e)),t},this.resourceUrlBlacklist=function(t){return arguments.length&&(e=Qe(t)),e},this.$get=["$injector",function(n){function i(t,e){return"self"===t?cn(e):!!t.exec(e.href)}function r(t){var e=function(t){this.$$unwrapTrustedValue=function(){return t}};return t&&(e.prototype=new t),e.prototype.valueOf=function(){return this.$$unwrapTrustedValue()},e.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()},e}var s=function(t){throw wr("unsafe")};n.has("$sanitize")&&(s=n.get("$sanitize"));
var o=r(),a={};return a[Cr.HTML]=r(o),a[Cr.CSS]=r(o),a[Cr.URL]=r(o),a[Cr.JS]=r(o),a[Cr.RESOURCE_URL]=r(a[Cr.URL]),{trustAs:function(t,e){var n=a.hasOwnProperty(t)?a[t]:null;if(!n)throw wr("icontext",t,e);if(null===e||v(e)||""===e)return e;if("string"!=typeof e)throw wr("itype",t);return new n(e)},getTrusted:function(n,r){if(null===r||v(r)||""===r)return r;var o=a.hasOwnProperty(n)?a[n]:null;if(o&&r instanceof o)return r.$$unwrapTrustedValue();if(n===Cr.RESOURCE_URL){var c,l,o=an(r.toString()),u=!1;for(c=0,l=t.length;c<l;c++)if(i(t[c],o)){u=!0;break}if(u)for(c=0,l=e.length;c<l;c++)if(i(e[c],o)){u=!1;break}if(u)return r;throw wr("insecurl",r.toString())}if(n===Cr.HTML)return s(r);throw wr("unsafe")},valueOf:function(t){return t instanceof o?t.$$unwrapTrustedValue():t}}}]}function en(){var t=!0;this.enabled=function(e){return arguments.length&&(t=!!e),t},this.$get=["$parse","$sceDelegate",function(e,n){if(t&&8>Xn)throw wr("iequirks");var r=ct(Cr);r.isEnabled=function(){return t},r.trustAs=n.trustAs,r.getTrusted=n.getTrusted,r.valueOf=n.valueOf,t||(r.trustAs=r.getTrusted=function(t,e){return e},r.valueOf=d),r.parseAs=function(t,n){var i=e(n);return i.literal&&i.constant?i:e(n,function(e){return r.getTrusted(t,e)})};var s=r.parseAs,o=r.getTrusted,a=r.trustAs;return i(Cr,function(t,e){var n=Kn(e);r[ut("parse_as_"+n)]=function(e){return s(t,e)},r[ut("get_trusted_"+n)]=function(e){return o(t,e)},r[ut("trust_as_"+n)]=function(e){return a(t,e)}}),r}]}function nn(){this.$get=["$window","$document",function(t,e){var n,i={},r=!(t.chrome&&t.chrome.app&&t.chrome.app.runtime)&&t.history&&t.history.pushState,s=u((/android (\d+)/.exec(Kn((t.navigator||{}).userAgent))||[])[1]),o=/Boxee/i.test((t.navigator||{}).userAgent),a=e[0]||{},c=/^(Moz|webkit|ms)(?=[A-Z])/,l=a.body&&a.body.style,h=!1,f=!1;if(l){for(var d in l)if(h=c.exec(d)){n=h[0],n=n[0].toUpperCase()+n.substr(1);break}n||(n="WebkitOpacity"in l&&"webkit"),h=!!("transition"in l||n+"Transition"in l),f=!!("animation"in l||n+"Animation"in l),!s||h&&f||(h=x(l.webkitTransition),f=x(l.webkitAnimation))}return{history:!(!r||4>s||o),hasEvent:function(t){if("input"===t&&11>=Xn)return!1;if(v(i[t])){var e=a.createElement("div");i[t]="on"+t in e}return i[t]},csp:ui(),vendorPrefix:n,transitions:h,animations:f,android:s}}]}function rn(){var t;this.httpOptions=function(e){return e?(t=e,this):t},this.$get=["$templateCache","$http","$q","$sce",function(e,n,i,r){function s(o,a){s.totalPendingRequests++,x(o)&&!v(e.get(o))||(o=r.getTrustedResourceUrl(o));var l=n.defaults&&n.defaults.transformResponse;return oi(l)?l=l.filter(function(t){return t!==oe}):l===oe&&(l=null),n.get(o,c({cache:e,transformResponse:l},t))["finally"](function(){s.totalPendingRequests--}).then(function(t){return e.put(o,t.data),t.data},function(t){if(!a)throw Sr("tpload",o,t.status,t.statusText);return i.reject(t)})}return s.totalPendingRequests=0,s}]}function sn(){this.$get=["$rootScope","$browser","$location",function(t,e,n){return{findBindings:function(t,e,n){t=t.getElementsByClassName("ng-binding");var r=[];return i(t,function(t){var s=ri.element(t).data("$binding");s&&i(s,function(i){n?new RegExp("(^|\\s)"+li(e)+"(\\s|\\||$)").test(i)&&r.push(t):-1!=i.indexOf(e)&&r.push(t)})}),r},findModels:function(t,e,n){for(var i=["ng-","data-ng-","ng\\:"],r=0;r<i.length;++r){var s=t.querySelectorAll("["+i[r]+"model"+(n?"=":"*=")+'"'+e+'"]');if(s.length)return s}},getLocation:function(){return n.url()},setLocation:function(e){e!==n.url()&&(n.url(e),t.$digest())},whenStable:function(t){e.notifyWhenNoOutstandingRequests(t)}}}]}function on(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(t,e,n,i,r){function s(s,a,c){w(s)||(c=a,a=s,s=f);var l,u=Zn.call(arguments,3),h=m(c)&&!c,d=(h?i:n).defer(),p=d.promise;return l=e.defer(function(){try{d.resolve(s.apply(null,u))}catch(e){d.reject(e),r(e)}finally{delete o[p.$$timeoutId]}h||t.$apply()},a),p.$$timeoutId=l,o[l]=d,p}var o={};return s.cancel=function(t){return!!(t&&t.$$timeoutId in o)&&(o[t.$$timeoutId].reject("canceled"),delete o[t.$$timeoutId],e.defer.cancel(t.$$timeoutId))},s}]}function an(t){return Xn&&(Tr.setAttribute("href",t),t=Tr.href),Tr.setAttribute("href",t),{href:Tr.href,protocol:Tr.protocol?Tr.protocol.replace(/:$/,""):"",host:Tr.host,search:Tr.search?Tr.search.replace(/^\?/,""):"",hash:Tr.hash?Tr.hash.replace(/^#/,""):"",hostname:Tr.hostname,port:Tr.port,pathname:"/"===Tr.pathname.charAt(0)?Tr.pathname:"/"+Tr.pathname}}function cn(t){return t=x(t)?an(t):t,t.protocol===Or.protocol&&t.host===Or.host}function ln(){this.$get=p(t)}function un(t){function e(t){try{return decodeURIComponent(t)}catch(e){return t}}var n=t[0]||{},i={},r="";return function(){var t,s,o,a,c;if(t=n.cookie||"",t!==r)for(r=t,t=r.split("; "),i={},o=0;o<t.length;o++)s=t[o],a=s.indexOf("="),0<a&&(c=e(s.substring(0,a)),v(i[c])&&(i[c]=e(s.substring(a+1))));return i}}function hn(){this.$get=un}function fn(t){function e(n,r){if(y(n)){var s={};return i(n,function(t,n){s[n]=e(n,t)}),s}return t.factory(n+"Filter",r)}this.register=e,this.$get=["$injector",function(t){return function(e){return t.get(e+"Filter")}}],e("currency",mn),e("date",kn),e("filter",dn),e("json",An),e("limitTo",En),e("lowercase",Pr),e("number",yn),e("orderBy",Mn),e("uppercase",Ir)}function dn(){return function(t,i,r,s){if(!n(t)){if(null==t)return t;throw e("filter")("notarray",t)}s=s||"$";var o;switch(vn(i)){case"function":break;case"boolean":case"null":case"number":case"string":o=!0;case"object":i=pn(i,r,s,o);break;default:return t}return Array.prototype.filter.call(t,i)}}function pn(t,e,n,i){var r=y(t)&&n in t;return!0===e?e=P:w(e)||(e=function(t,e){return!v(t)&&(null===t||null===e?t===e:!(y(e)||y(t)&&!g(t))&&(t=Kn(""+t),e=Kn(""+e),-1!==t.indexOf(e)))}),function(s){return r&&!y(s)?gn(s,t[n],e,n,!1):gn(s,t,e,n,i)}}function gn(t,e,n,i,r,s){var o=vn(t),a=vn(e);if("string"===a&&"!"===e.charAt(0))return!gn(t,e.substring(1),n,i,r);if(oi(t))return t.some(function(t){return gn(t,e,n,i,r)});switch(o){case"object":var c;if(r){for(c in t)if("$"!==c.charAt(0)&&gn(t[c],e,n,i,!0))return!0;return!s&&gn(t,e,n,i,!1)}if("object"===a){for(c in e)if(s=e[c],!w(s)&&!v(s)&&(o=c===i,!gn(o?t:t[c],s,n,i,o,o)))return!1;return!0}return n(t,e);case"function":return!1;default:return n(t,e)}}function vn(t){return null===t?"null":typeof t}function mn(t){var e=t.NUMBER_FORMATS;return function(t,n,i){return v(n)&&(n=e.CURRENCY_SYM),v(i)&&(i=e.PATTERNS[1].maxFrac),null==t?t:$n(t,e.PATTERNS[1],e.GROUP_SEP,e.DECIMAL_SEP,i).replace(/\u00A4/g,n)}}function yn(t){var e=t.NUMBER_FORMATS;return function(t,n){return null==t?t:$n(t,e.PATTERNS[0],e.GROUP_SEP,e.DECIMAL_SEP,n)}}function bn(t){var e,n,i,r,s,o=0;for(-1<(n=t.indexOf(Ar))&&(t=t.replace(Ar,"")),0<(i=t.search(/e/i))?(0>n&&(n=i),n+=+t.slice(i+1),t=t.substring(0,i)):0>n&&(n=t.length),i=0;t.charAt(i)==Er;i++);if(i==(s=t.length))e=[0],n=1;else{for(s--;t.charAt(s)==Er;)s--;for(n-=i,e=[],r=0;i<=s;i++,r++)e[r]=+t.charAt(i)}return n>kr&&(e=e.splice(0,kr-1),o=n-1,n=1),{d:e,e:o,i:n}}function xn(t,e,n,i){var r=t.d,s=r.length-t.i;if(e=v(e)?Math.min(Math.max(n,s),i):+e,n=e+t.i,i=r[n],0<n){r.splice(Math.max(t.i,n));for(var o=n;o<r.length;o++)r[o]=0}else for(s=Math.max(0,s),t.i=1,r.length=Math.max(1,n=e+1),r[0]=0,o=1;o<n;o++)r[o]=0;if(5<=i)if(0>n-1){for(i=0;i>n;i--)r.unshift(0),t.i++;r.unshift(1),t.i++}else r[n-1]++;for(;s<Math.max(0,e);s++)r.push(0);(e=r.reduceRight(function(t,e,n,i){return e+=t,i[n]=e%10,Math.floor(e/10)},0))&&(r.unshift(e),t.i++)}function $n(t,e,n,i,r){if(!x(t)&&!$(t)||isNaN(t))return"";var s=!isFinite(t),o=!1,a=Math.abs(t)+"",c="";if(s)c="∞";else{for(o=bn(a),xn(o,r,e.minFrac,e.maxFrac),c=o.d,a=o.i,r=o.e,s=[],o=c.reduce(function(t,e){return t&&!e},!0);0>a;)c.unshift(0),a++;for(0<a?s=c.splice(a,c.length):(s=c,c=[0]),a=[],c.length>=e.lgSize&&a.unshift(c.splice(-e.lgSize,c.length).join(""));c.length>e.gSize;)a.unshift(c.splice(-e.gSize,c.length).join(""));c.length&&a.unshift(c.join("")),c=a.join(n),s.length&&(c+=i+s.join("")),r&&(c+="e+"+r)}return 0>t&&!o?e.negPre+c+e.negSuf:e.posPre+c+e.posSuf}function _n(t,e,n,i){var r="";for((0>t||i&&0>=t)&&(i?t=-t+1:(t=-t,r="-")),t=""+t;t.length<e;)t=Er+t;return n&&(t=t.substr(t.length-e)),r+t}function wn(t,e,n,i,r){return n=n||0,function(s){return s=s["get"+t](),(0<n||s>-n)&&(s+=n),0===s&&-12==n&&(s=12),_n(s,e,i,r)}}function Cn(t,e,n){return function(i,r){var s=i["get"+t](),o=Jn((n?"STANDALONE":"")+(e?"SHORT":"")+t);return r[o][s]}}function Sn(t){var e=new Date(t,0,1).getDay();return new Date(t,0,(4>=e?5:12)-e)}function Tn(t){return function(e){var n=Sn(e.getFullYear());return e=+new Date(e.getFullYear(),e.getMonth(),e.getDate()+(4-e.getDay()))-+n,e=1+Math.round(e/6048e5),_n(e,t)}}function On(t,e){return 0>=t.getFullYear()?e.ERAS[0]:e.ERAS[1]}function kn(t){function e(t){var e;if(e=t.match(n)){t=new Date(0);var i=0,r=0,s=e[8]?t.setUTCFullYear:t.setFullYear,o=e[8]?t.setUTCHours:t.setHours;e[9]&&(i=u(e[9]+e[10]),r=u(e[9]+e[11])),s.call(t,u(e[1]),u(e[2])-1,u(e[3])),i=u(e[4]||0)-i,r=u(e[5]||0)-r,s=u(e[6]||0),e=Math.round(1e3*parseFloat("0."+(e[7]||0))),o.call(t,i,r,s,e)}return t}var n=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(n,r,s){var o,a,c="",l=[];if(r=r||"mediumDate",r=t.DATETIME_FORMATS[r]||r,x(n)&&(n=Dr.test(n)?u(n):e(n)),$(n)&&(n=new Date(n)),!_(n)||!isFinite(n.getTime()))return n;for(;r;)(a=Mr.exec(r))?(l=I(l,a,1),r=l.pop()):(l.push(r),r=null);var h=n.getTimezoneOffset();return s&&(h=B(s,h),n=V(n,s,!0)),i(l,function(e){o=jr[e],c+=o?o(n,t.DATETIME_FORMATS,h):"''"===e?"'":e.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),c}}function An(){return function(t,e){return v(e)&&(e=2),F(t,e)}}function En(){return function(t,e,i){return e=1/0===Math.abs(Number(e))?Number(e):u(e),isNaN(e)?t:($(t)&&(t=t.toString()),n(t)?(i=!i||isNaN(i)?0:u(i),i=0>i?Math.max(0,t.length+i):i,0<=e?jn(t,i,i+e):0===i?jn(t,e,t.length):jn(t,Math.max(0,i+e),i)):t)}}function jn(t,e,n){return x(t)?t.slice(e,n):Zn.call(t,e,n)}function Mn(t){function i(e){return e.map(function(e){var n=1,i=d;if(w(e))i=e;else if(x(e)&&("+"!=e.charAt(0)&&"-"!=e.charAt(0)||(n="-"==e.charAt(0)?-1:1,e=e.substring(1)),""!==e&&(i=t(e),i.constant)))var r=i(),i=function(t){return t[r]};return{get:i,descending:n}})}function r(t){switch(typeof t){case"number":case"boolean":case"string":return!0;default:return!1}}function s(t,e){var n=0,i=t.type,r=e.type;if(i===r){var r=t.value,s=e.value;"string"===i?(r=r.toLowerCase(),s=s.toLowerCase()):"object"===i&&(y(r)&&(r=t.index),y(s)&&(s=e.index)),r!==s&&(n=r<s?-1:1)}else n=i<r?-1:1;return n}return function(t,o,a,c){if(null==t)return t;if(!n(t))throw e("orderBy")("notarray",t);oi(o)||(o=[o]),0===o.length&&(o=["+"]);var l=i(o),u=a?-1:1,h=w(c)?c:s;return t=Array.prototype.map.call(t,function(t,e){return{value:t,tieBreaker:{value:e,type:"number",index:e},predicateValues:l.map(function(n){var i=n.get(t);return n=typeof i,null===i?(n="string",i="null"):"object"===n&&(w(i.valueOf)&&(i=i.valueOf(),r(i))||g(i)&&(i=i.toString(),r(i))),{value:i,type:n,index:e}})}}),t.sort(function(t,e){for(var n=0,i=l.length;n<i;n++){var r=h(t.predicateValues[n],e.predicateValues[n]);if(r)return r*l[n].descending*u}return h(t.tieBreaker,e.tieBreaker)*u}),t=t.map(function(t){return t.value})}}function Dn(t){return w(t)&&(t={link:t}),t.restrict=t.restrict||"AC",p(t)}function Pn(t,e,n,r,s){var o=this,a=[];o.$error={},o.$$success={},o.$pending=void 0,o.$name=s(e.name||e.ngForm||"")(n),o.$dirty=!1,o.$pristine=!0,o.$valid=!0,o.$invalid=!1,o.$submitted=!1,o.$$parentForm=Fr,o.$rollbackViewValue=function(){i(a,function(t){t.$rollbackViewValue()})},o.$commitViewValue=function(){i(a,function(t){t.$commitViewValue()})},o.$addControl=function(t){it(t.$name,"input"),a.push(t),t.$name&&(o[t.$name]=t),t.$$parentForm=o},o.$$renameControl=function(t,e){var n=t.$name;o[n]===t&&delete o[n],o[e]=t,t.$name=e},o.$removeControl=function(t){t.$name&&o[t.$name]===t&&delete o[t.$name],i(o.$pending,function(e,n){o.$setValidity(n,null,t)}),i(o.$error,function(e,n){o.$setValidity(n,null,t)}),i(o.$$success,function(e,n){o.$setValidity(n,null,t)}),M(a,t),t.$$parentForm=Fr},Wn({ctrl:this,$element:t,set:function(t,e,n){var i=t[e];i?-1===i.indexOf(n)&&i.push(n):t[e]=[n]},unset:function(t,e,n){var i=t[e];i&&(M(i,n),0===i.length&&delete t[e])},$animate:r}),o.$setDirty=function(){r.removeClass(t,xs),r.addClass(t,$s),o.$dirty=!0,o.$pristine=!1,o.$$parentForm.$setDirty()},o.$setPristine=function(){r.setClass(t,xs,$s+" ng-submitted"),o.$dirty=!1,o.$pristine=!0,o.$submitted=!1,i(a,function(t){t.$setPristine()})},o.$setUntouched=function(){i(a,function(t){t.$setUntouched()})},o.$setSubmitted=function(){r.addClass(t,"ng-submitted"),o.$submitted=!0,o.$$parentForm.$setSubmitted()}}function In(t){t.$formatters.push(function(e){return t.$isEmpty(e)?e:e.toString()})}function Ln(t,e,n,i,r,s){var o=Kn(e[0].type);if(!r.android){var a=!1;e.on("compositionstart",function(){a=!0}),e.on("compositionend",function(){a=!1,l()})}var c,l=function(t){if(c&&(s.defer.cancel(c),c=null),!a){var r=e.val();t=t&&t.type,"password"===o||n.ngTrim&&"false"===n.ngTrim||(r=ci(r)),(i.$viewValue!==r||""===r&&i.$$hasNativeValidators)&&i.$setViewValue(r,t)}};if(r.hasEvent("input"))e.on("input",l);else{var u=function(t,e,n){c||(c=s.defer(function(){c=null,e&&e.value===n||l(t)}))};e.on("keydown",function(t){var e=t.keyCode;91===e||15<e&&19>e||37<=e&&40>=e||u(t,this,this.value)}),r.hasEvent("paste")&&e.on("paste cut",u)}e.on("change",l),Jr[o]&&i.$$hasNativeValidators&&o===n.type&&e.on("keydown wheel mousedown",function(t){if(!c){var e=this.validity,n=e.badInput,i=e.typeMismatch;c=s.defer(function(){c=null,e.badInput===n&&e.typeMismatch===i||l(t)})}}),i.$render=function(){var t=i.$isEmpty(i.$viewValue)?"":i.$viewValue;e.val()!==t&&e.val(t)}}function Rn(t,e){return function(n,r){var s,o;if(_(n))return n;if(x(n)){if('"'==n.charAt(0)&&'"'==n.charAt(n.length-1)&&(n=n.substring(1,n.length-1)),Wr.test(n))return new Date(n);if(t.lastIndex=0,s=t.exec(n))return s.shift(),o=r?{yyyy:r.getFullYear(),MM:r.getMonth()+1,dd:r.getDate(),HH:r.getHours(),mm:r.getMinutes(),ss:r.getSeconds(),sss:r.getMilliseconds()/1e3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},i(s,function(t,n){n<e.length&&(o[e[n]]=+t)}),new Date(o.yyyy,o.MM-1,o.dd,o.HH,o.mm,o.ss||0,1e3*o.sss||0)}return NaN}}function Fn(t,e,n,i){return function(r,s,o,a,c,l,u){function h(t){return t&&!(t.getTime&&t.getTime()!==t.getTime())}function f(t){return m(t)&&!_(t)?n(t)||void 0:t}Nn(r,s,o,a),Ln(r,s,o,a,c,l);var d,p=a&&a.$options&&a.$options.timezone;if(a.$$parserName=t,a.$parsers.push(function(t){return a.$isEmpty(t)?null:e.test(t)?(t=n(t,d),p&&(t=V(t,p)),t):void 0}),a.$formatters.push(function(t){if(t&&!_(t))throw ws("datefmt",t);return h(t)?((d=t)&&p&&(d=V(d,p,!0)),u("date")(t,i,p)):(d=null,"")}),m(o.min)||o.ngMin){var g;a.$validators.min=function(t){return!h(t)||v(g)||n(t)>=g},o.$observe("min",function(t){g=f(t),a.$validate()})}if(m(o.max)||o.ngMax){var y;a.$validators.max=function(t){return!h(t)||v(y)||n(t)<=y},o.$observe("max",function(t){y=f(t),a.$validate()})}}}function Nn(t,e,n,i){(i.$$hasNativeValidators=y(e[0].validity))&&i.$parsers.push(function(t){var n=e.prop("validity")||{};return n.badInput||n.typeMismatch?void 0:t})}function Bn(t,e,n,i,r){if(m(i)){if(t=t(i),!t.constant)throw ws("constexpr",n,i);return t(e)}return r}function Vn(t,e){return t="ngClass"+t,["$animate",function(n){function r(t,e){var n=[],i=0;t:for(;i<t.length;i++){for(var r=t[i],s=0;s<e.length;s++)if(r==e[s])continue t;n.push(r)}return n}function s(t){var e=[];return oi(t)?(i(t,function(t){e=e.concat(s(t))}),e):x(t)?t.split(" "):y(t)?(i(t,function(t,n){t&&(e=e.concat(n.split(" ")))}),e):t}return{restrict:"AC",link:function(o,a,c){function l(t){t=u(t,1),c.$addClass(t)}function u(t,e){var n=a.data("$classCounts")||ot(),r=[];return i(t,function(t){(0<e||n[t])&&(n[t]=(n[t]||0)+e,n[t]===+(0<e)&&r.push(t))}),a.data("$classCounts",n),r.join(" ")}function h(t,e){var i=r(e,t),s=r(t,e),i=u(i,1),s=u(s,-1);i&&i.length&&n.addClass(a,i),s&&s.length&&n.removeClass(a,s)}function f(t){if(!0===e||(1&o.$index)===e){var n=s(t||[]);if(d){if(!P(t,d)){var i=s(d);h(i,n)}}else l(n)}d=oi(t)?t.map(function(t){return ct(t)}):ct(t)}var d;o.$watch(c[t],f,!0),c.$observe("class",function(e){f(o.$eval(c[t]))}),"ngClass"!==t&&o.$watch("$index",function(n,i){var r=1&n;if(r!==(1&i)){var a=s(o.$eval(c[t]));r===e?l(a):(r=u(a,-1),c.$removeClass(r))}})}}}]}function Wn(t){function e(t,e){e&&!s[t]?(c.addClass(r,t),s[t]=!0):!e&&s[t]&&(c.removeClass(r,t),s[t]=!1)}function n(t,n){t=t?"-"+Q(t,"-"):"",e(ys+t,!0===n),e(bs+t,!1===n)}var i=t.ctrl,r=t.$element,s={},o=t.set,a=t.unset,c=t.$animate;s[bs]=!(s[ys]=r.hasClass(ys)),i.$setValidity=function(t,r,s){v(r)?(i.$pending||(i.$pending={}),o(i.$pending,t,s)):(i.$pending&&a(i.$pending,t,s),Hn(i.$pending)&&(i.$pending=void 0)),O(r)?r?(a(i.$error,t,s),o(i.$$success,t,s)):(o(i.$error,t,s),a(i.$$success,t,s)):(a(i.$error,t,s),a(i.$$success,t,s)),i.$pending?(e(_s,!0),i.$valid=i.$invalid=void 0,n("",null)):(e(_s,!1),i.$valid=Hn(i.$error),i.$invalid=!i.$valid,n("",i.$valid)),r=i.$pending&&i.$pending[t]?void 0:!i.$error[t]&&(!!i.$$success[t]||null),n(t,r),i.$$parentForm.$setValidity(t,r,i)}}function Hn(t){if(t)for(var e in t)if(t.hasOwnProperty(e))return!1;return!0}var Xn,zn,Gn,qn,Yn=/^\/(.+)\/([a-z]*)$/,Un=Object.prototype.hasOwnProperty,Kn=function(t){return x(t)?t.toLowerCase():t},Jn=function(t){return x(t)?t.toUpperCase():t},Zn=[].slice,Qn=[].splice,ti=[].push,ei=Object.prototype.toString,ni=Object.getPrototypeOf,ii=e("ng"),ri=t.angular||(t.angular={}),si=0;Xn=t.document.documentMode,f.$inject=[],d.$inject=[];var oi=Array.isArray,ai=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,ci=function(t){return x(t)?t.trim():t},li=function(t){return t.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},ui=function(){if(!m(ui.rules)){var e=t.document.querySelector("[ng-csp]")||t.document.querySelector("[data-ng-csp]");if(e){var n=e.getAttribute("ng-csp")||e.getAttribute("data-ng-csp");ui.rules={noUnsafeEval:!n||-1!==n.indexOf("no-unsafe-eval"),noInlineStyle:!n||-1!==n.indexOf("no-inline-style")}}else{e=ui;try{new Function(""),n=!1}catch(i){n=!0}e.rules={noUnsafeEval:n,noInlineStyle:!1}}}return ui.rules},hi=function(){if(m(hi.name_))return hi.name_;var e,n,i,r,s=di.length;for(n=0;n<s;++n)if(i=di[n],e=t.document.querySelector("["+i.replace(":","\\:")+"jq]")){r=e.getAttribute(i+"jq");break}return hi.name_=r},fi=/:/g,di=["ng-","data-ng-","ng:","x-ng-"],pi=/[A-Z]/g,gi=!1,vi=3,mi={full:"1.5.8",major:1,minor:5,dot:8,codeName:"arbitrary-fallbacks"};pt.expando="ng339";var yi=pt.cache={},bi=1;pt._data=function(t){return this.cache[t[this.expando]]||{}};var xi=/([\:\-\_]+(.))/g,$i=/^moz([A-Z])/,_i={mouseleave:"mouseout",mouseenter:"mouseover"},wi=e("jqLite"),Ci=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Si=/<|&#?\w+;/,Ti=/<([\w:-]+)/,Oi=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,ki={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ki.optgroup=ki.option,ki.tbody=ki.tfoot=ki.colgroup=ki.caption=ki.thead,ki.th=ki.td;var Ai=t.Node.prototype.contains||function(t){return!!(16&this.compareDocumentPosition(t))},Ei=pt.prototype={ready:function(e){function n(){i||(i=!0,e())}var i=!1;"complete"===t.document.readyState?t.setTimeout(n):(this.on("DOMContentLoaded",n),pt(t).on("load",n))},toString:function(){var t=[];return i(this,function(e){t.push(""+e)}),"["+t.join(", ")+"]"},eq:function(t){return zn(0<=t?this[t]:this[this.length+t])},length:0,push:ti,sort:[].sort,splice:[].splice},ji={};i("multiple selected checked disabled readOnly required open".split(" "),function(t){ji[Kn(t)]=t});var Mi={};i("input select option textarea button form details".split(" "),function(t){Mi[t]=!0});var Di={ngMinlength:"minlength",ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};i({data:xt,removeData:yt,hasData:function(t){for(var e in yi[t.ng339])return!0;return!1},cleanData:function(t){for(var e=0,n=t.length;e<n;e++)yt(t[e])}},function(t,e){pt[e]=t}),i({data:xt,inheritedData:Tt,scope:function(t){return zn.data(t,"$scope")||Tt(t.parentNode||t,["$isolateScope","$scope"])},isolateScope:function(t){return zn.data(t,"$isolateScope")||zn.data(t,"$isolateScopeNoTemplate")},controller:St,injector:function(t){return Tt(t,"$injector")},removeAttr:function(t,e){t.removeAttribute(e)},hasClass:$t,css:function(t,e,n){return e=ut(e),m(n)?void(t.style[e]=n):t.style[e]},attr:function(t,e,n){var i=t.nodeType;if(i!==vi&&2!==i&&8!==i)if(i=Kn(e),ji[i]){if(!m(n))return t[e]||(t.attributes.getNamedItem(e)||f).specified?i:void 0;n?(t[e]=!0,t.setAttribute(e,i)):(t[e]=!1,t.removeAttribute(i))}else if(m(n))t.setAttribute(e,n);else if(t.getAttribute)return t=t.getAttribute(e,2),null===t?void 0:t},prop:function(t,e,n){return m(n)?void(t[e]=n):t[e]},text:function(){function t(t,e){if(v(e)){var n=t.nodeType;return 1===n||n===vi?t.textContent:""}t.textContent=e}return t.$dv="",t}(),val:function(t,e){if(v(e)){if(t.multiple&&"select"===j(t)){var n=[];return i(t.options,function(t){t.selected&&n.push(t.value||t.text)}),0===n.length?null:n}return t.value}t.value=e},html:function(t,e){return v(e)?t.innerHTML:(vt(t,!0),void(t.innerHTML=e))},empty:Ot},function(t,e){pt.prototype[e]=function(e,n){var i,r,s=this.length;if(t!==Ot&&v(2==t.length&&t!==$t&&t!==St?e:n)){if(y(e)){for(i=0;i<s;i++)if(t===xt)t(this[i],e);else for(r in e)t(this[i],r,e[r]);return this}for(i=t.$dv,s=v(i)?Math.min(s,1):s,r=0;r<s;r++){var o=t(this[r],e,n);i=i?i+o:o}return i}for(i=0;i<s;i++)t(this[i],e,n);return this}}),i({removeData:yt,on:function(t,e,n,i){if(m(i))throw wi("onargs");if(ht(t)){i=bt(t,!0);var r=i.events,s=i.handle;s||(s=i.handle=jt(t,r)),i=0<=e.indexOf(" ")?e.split(" "):[e];for(var o=i.length,a=function(e,i,o){var a=r[e];a||(a=r[e]=[],a.specialHandlerWrapper=i,"$destroy"===e||o||t.addEventListener(e,s,!1)),a.push(n)};o--;)e=i[o],_i[e]?(a(_i[e],Dt),a(e,void 0,!0)):a(e)}},off:mt,one:function(t,e,n){t=zn(t),t.on(e,function i(){t.off(e,n),t.off(e,i)}),t.on(e,n)},replaceWith:function(t,e){var n,r=t.parentNode;vt(t),i(new pt(e),function(e){n?r.insertBefore(e,n.nextSibling):r.replaceChild(e,t),n=e})},children:function(t){var e=[];return i(t.childNodes,function(t){1===t.nodeType&&e.push(t)}),e},contents:function(t){return t.contentDocument||t.childNodes||[]},append:function(t,e){var n=t.nodeType;if(1===n||11===n){e=new pt(e);for(var n=0,i=e.length;n<i;n++)t.appendChild(e[n])}},prepend:function(t,e){if(1===t.nodeType){var n=t.firstChild;i(new pt(e),function(e){t.insertBefore(e,n)})}},wrap:function(t,e){dt(t,zn(e).eq(0).clone()[0])},remove:kt,detach:function(t){kt(t,!0)},after:function(t,e){var n=t,i=t.parentNode;e=new pt(e);for(var r=0,s=e.length;r<s;r++){var o=e[r];i.insertBefore(o,n.nextSibling),n=o}},addClass:wt,removeClass:_t,toggleClass:function(t,e,n){e&&i(e.split(" "),function(e){var i=n;v(i)&&(i=!$t(t,e)),(i?wt:_t)(t,e)})},parent:function(t){return(t=t.parentNode)&&11!==t.nodeType?t:null},next:function(t){return t.nextElementSibling},find:function(t,e){return t.getElementsByTagName?t.getElementsByTagName(e):[]},clone:gt,triggerHandler:function(t,e,n){var r,s,o=e.type||e,a=bt(t);(a=(a=a&&a.events)&&a[o])&&(r={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:f,type:o,target:t},e.type&&(r=c(r,e)),e=ct(a),s=n?[r].concat(n):[r],i(e,function(e){r.isImmediatePropagationStopped()||e.apply(t,s)}))}},function(t,e){pt.prototype[e]=function(e,n,i){for(var r,s=0,o=this.length;s<o;s++)v(r)?(r=t(this[s],e,n,i),m(r)&&(r=zn(r))):Ct(r,t(this[s],e,n,i));return m(r)?r:this},pt.prototype.bind=pt.prototype.on,pt.prototype.unbind=pt.prototype.off}),Lt.prototype={put:function(t,e){this[It(t,this.nextUid)]=e},get:function(t){return this[It(t,this.nextUid)]},remove:function(t){var e=this[t=It(t,this.nextUid)];return delete this[t],e}};var Pi=[function(){this.$get=[function(){return Lt}]}],Ii=/^([^\(]+?)=>/,Li=/^[^\(]*\(\s*([^\)]*)\)/m,Ri=/,/,Fi=/^\s*(_?)(\S+?)\1\s*$/,Ni=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,Bi=e("$injector");Nt.$$annotate=function(t,e,n){var r;if("function"==typeof t){if(!(r=t.$inject)){if(r=[],t.length){if(e)throw x(n)&&n||(n=t.name||Ft(t)),Bi("strictdi",n);e=Rt(t),i(e[1].split(Ri),function(t){t.replace(Fi,function(t,e,n){r.push(n)})})}t.$inject=r}}else oi(t)?(e=t.length-1,nt(t[e],"fn"),r=t.slice(0,e)):nt(t,"fn",!0);return r};var Vi=e("$animate"),Wi=function(){this.$get=f},Hi=function(){var t=new Lt,e=[];this.$get=["$$AnimateRunner","$rootScope",function(n,r){function s(t,e,n){var r=!1;return e&&(e=x(e)?e.split(" "):oi(e)?e:[],i(e,function(e){e&&(r=!0,t[e]=n)})),r}function o(){i(e,function(e){var n=t.get(e);if(n){var r=Wt(e.attr("class")),s="",o="";i(n,function(t,e){t!==!!r[e]&&(t?s+=(s.length?" ":"")+e:o+=(o.length?" ":"")+e)}),i(e,function(t){s&&wt(t,s),o&&_t(t,o)}),t.remove(e)}}),e.length=0}return{enabled:f,on:f,off:f,pin:f,push:function(i,a,c,l){return l&&l(),c=c||{},c.from&&i.css(c.from),c.to&&i.css(c.to),(c.addClass||c.removeClass)&&(a=c.addClass,l=c.removeClass,c=t.get(i)||{},a=s(c,a,!0),l=s(c,l,!1),(a||l)&&(t.put(i,c),e.push(i),1===e.length&&r.$$postDigest(o))),i=new n,i.complete(),i}}}]},Xi=["$provide",function(t){var e=this;this.$$registeredAnimations=Object.create(null),this.register=function(n,i){if(n&&"."!==n.charAt(0))throw Vi("notcsel",n);var r=n+"-animation";e.$$registeredAnimations[n.substr(1)]=r,t.factory(r,i)},this.classNameFilter=function(t){if(1===arguments.length&&(this.$$classNameFilter=t instanceof RegExp?t:null)&&/(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))throw Vi("nongcls","ng-animate");return this.$$classNameFilter},this.$get=["$$animateQueue",function(t){function e(t,e,n){if(n){var i;t:{for(i=0;i<n.length;i++){var r=n[i];if(1===r.nodeType){i=r;break t}}i=void 0}!i||i.parentNode||i.previousElementSibling||(n=null)}n?n.after(t):e.prepend(t)}return{on:t.on,off:t.off,pin:t.pin,enabled:t.enabled,cancel:function(t){t.end&&t.end()},enter:function(n,i,r,s){return i=i&&zn(i),r=r&&zn(r),i=i||r.parent(),e(n,i,r),t.push(n,"enter",Ht(s))},move:function(n,i,r,s){return i=i&&zn(i),r=r&&zn(r),i=i||r.parent(),e(n,i,r),t.push(n,"move",Ht(s))},leave:function(e,n){return t.push(e,"leave",Ht(n),function(){e.remove()})},addClass:function(e,n,i){return i=Ht(i),i.addClass=Vt(i.addclass,n),t.push(e,"addClass",i)},removeClass:function(e,n,i){return i=Ht(i),i.removeClass=Vt(i.removeClass,n),t.push(e,"removeClass",i)},setClass:function(e,n,i,r){return r=Ht(r),r.addClass=Vt(r.addClass,n),r.removeClass=Vt(r.removeClass,i),t.push(e,"setClass",r)},animate:function(e,n,i,r,s){return s=Ht(s),s.from=s.from?c(s.from,n):n,s.to=s.to?c(s.to,i):i,s.tempClasses=Vt(s.tempClasses,r||"ng-inline-animate"),t.push(e,"animate",s)}}}]}],zi=function(){this.$get=["$$rAF",function(t){function e(e){n.push(e),1<n.length||t(function(){for(var t=0;t<n.length;t++)n[t]();n=[]})}var n=[];return function(){var t=!1;return e(function(){t=!0}),function(n){t?n():e(n)}}}]},Gi=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$document","$timeout",function(t,e,n,r,s){function o(t){this.setHost(t);var e=n();this._doneCallbacks=[],this._tick=function(t){var n=r[0];n&&n.hidden?s(t,0,!1):e(t)},this._state=0}return o.chain=function(t,e){function n(){i===t.length?e(!0):t[i](function(t){!1===t?e(!1):(i++,n())})}var i=0;n()},o.all=function(t,e){function n(n){s=s&&n,++r===t.length&&e(s)}var r=0,s=!0;i(t,function(t){t.done(n)})},o.prototype={setHost:function(t){this.host=t||{}},done:function(t){2===this._state?t():this._doneCallbacks.push(t)},progress:f,getPromise:function(){if(!this.promise){var e=this;this.promise=t(function(t,n){e.done(function(e){!1===e?n():t()})})}return this.promise},then:function(t,e){return this.getPromise().then(t,e)},"catch":function(t){return this.getPromise()["catch"](t)},"finally":function(t){return this.getPromise()["finally"](t)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end(),this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel(),this._resolve(!1)},complete:function(t){var e=this;0===e._state&&(e._state=1,e._tick(function(){e._resolve(t)}))},_resolve:function(t){2!==this._state&&(i(this._doneCallbacks,function(e){e(t)}),this._doneCallbacks.length=0,this._state=2)}},o}]},qi=function(){this.$get=["$$rAF","$q","$$AnimateRunner",function(t,e,n){return function(e,i){function r(){return t(function(){s.addClass&&(e.addClass(s.addClass),s.addClass=null),s.removeClass&&(e.removeClass(s.removeClass),s.removeClass=null),s.to&&(e.css(s.to),s.to=null),o||a.complete(),o=!0}),a}var s=i||{};s.$$prepared||(s=D(s)),s.cleanupStyles&&(s.from=s.to=null),s.from&&(e.css(s.from),s.from=null);var o,a=new n;return{start:r,end:r}}}]},Yi=e("$compile"),Ui=new function(){};Yt.$inject=["$provide","$$sanitizeUriProvider"],Ut.prototype.isFirstChange=function(){return this.previousValue===Ui};var Ki=/^((?:x|data)[\:\-_])/i,Ji=e("$controller"),Zi=/^(\S+)(\s+as\s+([\w$]+))?$/,Qi=function(){this.$get=["$document",function(t){return function(e){return e?!e.nodeType&&e instanceof zn&&(e=e[0]):e=t[0].body,e.offsetWidth+1}}]},tr="application/json",er={"Content-Type":tr+";charset=utf-8"},nr=/^\[|^\{(?!\{)/,ir={"[":/]$/,"{":/}$/},rr=/^\)\]\}',?\n/,sr=e("$http"),or=function(t){return function(){throw sr("legacy",t)}},ar=ri.$interpolateMinErr=e("$interpolate");ar.throwNoconcat=function(t){throw ar("noconcat",t)},ar.interr=function(t,e){return ar("interr",t,e.toString())};var cr=function(){this.$get=["$window",function(t){function e(t){var e=function(t){e.data=t,e.called=!0};return e.id=t,e}var n=t.angular.callbacks,i={};return{createCallback:function(t){t="_"+(n.$$counter++).toString(36);var r="angular.callbacks."+t,s=e(t);return i[r]=n[t]=s,r},wasCalled:function(t){return i[t].called},getResponse:function(t){return i[t].data},removeCallback:function(t){delete n[i[t].id],delete i[t]}}}]},lr=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,ur={http:80,https:443,ftp:21},hr=e("$location"),fr={$$absUrl:"",$$html5:!1,$$replace:!1,absUrl:Se("$$absUrl"),url:function(t){if(v(t))return this.$$url;var e=lr.exec(t);return(e[1]||""===t)&&this.path(decodeURIComponent(e[1])),(e[2]||e[1]||""===t)&&this.search(e[3]||""),this.hash(e[5]||""),this},protocol:Se("$$protocol"),host:Se("$$host"),port:Se("$$port"),path:Te("$$path",function(t){return t=null!==t?t.toString():"","/"==t.charAt(0)?t:"/"+t}),search:function(t,e){switch(arguments.length){case 0:return this.$$search;case 1:if(x(t)||$(t))t=t.toString(),this.$$search=X(t);else{if(!y(t))throw hr("isrcharg");t=D(t,{}),i(t,function(e,n){null==e&&delete t[n]}),this.$$search=t}break;default:v(e)||null===e?delete this.$$search[t]:this.$$search[t]=e}return this.$$compose(),this},hash:Te("$$hash",function(t){return null!==t?t.toString():""}),replace:function(){return this.$$replace=!0,this}};i([Ce,we,_e],function(t){t.prototype=Object.create(fr),t.prototype.state=function(e){if(!arguments.length)return this.$$state;if(t!==_e||!this.$$html5)throw hr("nostate");return this.$$state=v(e)?null:e,this}});var dr=e("$parse"),pr=Function.prototype.call,gr=Function.prototype.apply,vr=Function.prototype.bind,mr=ot();i("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(t){mr[t]=!0});var yr={n:"\n",f:"\f",r:"\r",t:"\t",v:"\x0B","'":"'",'"':'"'},br=function(t){this.options=t};br.prototype={constructor:br,lex:function(t){for(this.text=t,this.index=0,this.tokens=[];this.index<this.text.length;)if(t=this.text.charAt(this.index),'"'===t||"'"===t)this.readString(t);else if(this.isNumber(t)||"."===t&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(t,"(){}[].,;:?"))this.tokens.push({
index:this.index,text:t}),this.index++;else if(this.isWhitespace(t))this.index++;else{var e=t+this.peek(),n=e+this.peek(2),i=mr[e],r=mr[n];mr[t]||i||r?(t=r?n:i?e:t,this.tokens.push({index:this.index,text:t,operator:!0}),this.index+=t.length):this.throwError("Unexpected next character ",this.index,this.index+1)}return this.tokens},is:function(t,e){return-1!==e.indexOf(t)},peek:function(t){return t=t||1,this.index+t<this.text.length&&this.text.charAt(this.index+t)},isNumber:function(t){return"0"<=t&&"9">=t&&"string"==typeof t},isWhitespace:function(t){return" "===t||"\r"===t||"\t"===t||"\n"===t||"\x0B"===t||" "===t},isIdentifierStart:function(t){return this.options.isIdentifierStart?this.options.isIdentifierStart(t,this.codePointAt(t)):this.isValidIdentifierStart(t)},isValidIdentifierStart:function(t){return"a"<=t&&"z">=t||"A"<=t&&"Z">=t||"_"===t||"$"===t},isIdentifierContinue:function(t){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(t,this.codePointAt(t)):this.isValidIdentifierContinue(t)},isValidIdentifierContinue:function(t,e){return this.isValidIdentifierStart(t,e)||this.isNumber(t)},codePointAt:function(t){return 1===t.length?t.charCodeAt(0):(t.charCodeAt(0)<<10)+t.charCodeAt(1)-56613888},peekMultichar:function(){var t=this.text.charAt(this.index),e=this.peek();if(!e)return t;var n=t.charCodeAt(0),i=e.charCodeAt(0);return 55296<=n&&56319>=n&&56320<=i&&57343>=i?t+e:t},isExpOperator:function(t){return"-"===t||"+"===t||this.isNumber(t)},throwError:function(t,e,n){throw n=n||this.index,e=m(e)?"s "+e+"-"+this.index+" ["+this.text.substring(e,n)+"]":" "+n,dr("lexerr",t,e,this.text)},readNumber:function(){for(var t="",e=this.index;this.index<this.text.length;){var n=Kn(this.text.charAt(this.index));if("."==n||this.isNumber(n))t+=n;else{var i=this.peek();if("e"==n&&this.isExpOperator(i))t+=n;else if(this.isExpOperator(n)&&i&&this.isNumber(i)&&"e"==t.charAt(t.length-1))t+=n;else{if(!this.isExpOperator(n)||i&&this.isNumber(i)||"e"!=t.charAt(t.length-1))break;this.throwError("Invalid exponent")}}this.index++}this.tokens.push({index:e,text:t,constant:!0,value:Number(t)})},readIdent:function(){var t=this.index;for(this.index+=this.peekMultichar().length;this.index<this.text.length;){var e=this.peekMultichar();if(!this.isIdentifierContinue(e))break;this.index+=e.length}this.tokens.push({index:t,text:this.text.slice(t,this.index),identifier:!0})},readString:function(t){var e=this.index;this.index++;for(var n="",i=t,r=!1;this.index<this.text.length;){var s=this.text.charAt(this.index),i=i+s;if(r)"u"===s?(r=this.text.substring(this.index+1,this.index+5),r.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+r+"]"),this.index+=4,n+=String.fromCharCode(parseInt(r,16))):n+=yr[s]||s,r=!1;else if("\\"===s)r=!0;else{if(s===t)return this.index++,void this.tokens.push({index:e,text:i,constant:!0,value:n});n+=s}this.index++}this.throwError("Unterminated quote",e)}};var xr=function(t,e){this.lexer=t,this.options=e};xr.Program="Program",xr.ExpressionStatement="ExpressionStatement",xr.AssignmentExpression="AssignmentExpression",xr.ConditionalExpression="ConditionalExpression",xr.LogicalExpression="LogicalExpression",xr.BinaryExpression="BinaryExpression",xr.UnaryExpression="UnaryExpression",xr.CallExpression="CallExpression",xr.MemberExpression="MemberExpression",xr.Identifier="Identifier",xr.Literal="Literal",xr.ArrayExpression="ArrayExpression",xr.Property="Property",xr.ObjectExpression="ObjectExpression",xr.ThisExpression="ThisExpression",xr.LocalsExpression="LocalsExpression",xr.NGValueParameter="NGValueParameter",xr.prototype={ast:function(t){return this.text=t,this.tokens=this.lexer.lex(t),t=this.program(),0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]),t},program:function(){for(var t=[];;)if(0<this.tokens.length&&!this.peek("}",")",";","]")&&t.push(this.expressionStatement()),!this.expect(";"))return{type:xr.Program,body:t}},expressionStatement:function(){return{type:xr.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var t=this.expression();this.expect("|");)t=this.filter(t);return t},expression:function(){return this.assignment()},assignment:function(){var t=this.ternary();return this.expect("=")&&(t={type:xr.AssignmentExpression,left:t,right:this.assignment(),operator:"="}),t},ternary:function(){var t,e,n=this.logicalOR();return this.expect("?")&&(t=this.expression(),this.consume(":"))?(e=this.expression(),{type:xr.ConditionalExpression,test:n,alternate:t,consequent:e}):n},logicalOR:function(){for(var t=this.logicalAND();this.expect("||");)t={type:xr.LogicalExpression,operator:"||",left:t,right:this.logicalAND()};return t},logicalAND:function(){for(var t=this.equality();this.expect("&&");)t={type:xr.LogicalExpression,operator:"&&",left:t,right:this.equality()};return t},equality:function(){for(var t,e=this.relational();t=this.expect("==","!=","===","!==");)e={type:xr.BinaryExpression,operator:t.text,left:e,right:this.relational()};return e},relational:function(){for(var t,e=this.additive();t=this.expect("<",">","<=",">=");)e={type:xr.BinaryExpression,operator:t.text,left:e,right:this.additive()};return e},additive:function(){for(var t,e=this.multiplicative();t=this.expect("+","-");)e={type:xr.BinaryExpression,operator:t.text,left:e,right:this.multiplicative()};return e},multiplicative:function(){for(var t,e=this.unary();t=this.expect("*","/","%");)e={type:xr.BinaryExpression,operator:t.text,left:e,right:this.unary()};return e},unary:function(){var t;return(t=this.expect("+","-","!"))?{type:xr.UnaryExpression,operator:t.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var t;this.expect("(")?(t=this.filterChain(),this.consume(")")):this.expect("[")?t=this.arrayDeclaration():this.expect("{")?t=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?t=D(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?t={type:xr.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?t=this.identifier():this.peek().constant?t=this.constant():this.throwError("not a primary expression",this.peek());for(var e;e=this.expect("(","[",".");)"("===e.text?(t={type:xr.CallExpression,callee:t,arguments:this.parseArguments()},this.consume(")")):"["===e.text?(t={type:xr.MemberExpression,object:t,property:this.expression(),computed:!0},this.consume("]")):"."===e.text?t={type:xr.MemberExpression,object:t,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return t},filter:function(t){t=[t];for(var e={type:xr.CallExpression,callee:this.identifier(),arguments:t,filter:!0};this.expect(":");)t.push(this.expression());return e},parseArguments:function(){var t=[];if(")"!==this.peekToken().text)do t.push(this.filterChain());while(this.expect(","));return t},identifier:function(){var t=this.consume();return t.identifier||this.throwError("is not a valid identifier",t),{type:xr.Identifier,name:t.text}},constant:function(){return{type:xr.Literal,value:this.consume().value}},arrayDeclaration:function(){var t=[];if("]"!==this.peekToken().text)do{if(this.peek("]"))break;t.push(this.expression())}while(this.expect(","));return this.consume("]"),{type:xr.ArrayExpression,elements:t}},object:function(){var t,e=[];if("}"!==this.peekToken().text)do{if(this.peek("}"))break;t={type:xr.Property,kind:"init"},this.peek().constant?(t.key=this.constant(),t.computed=!1,this.consume(":"),t.value=this.expression()):this.peek().identifier?(t.key=this.identifier(),t.computed=!1,this.peek(":")?(this.consume(":"),t.value=this.expression()):t.value=t.key):this.peek("[")?(this.consume("["),t.key=this.expression(),this.consume("]"),t.computed=!0,this.consume(":"),t.value=this.expression()):this.throwError("invalid key",this.peek()),e.push(t)}while(this.expect(","));return this.consume("}"),{type:xr.ObjectExpression,properties:e}},throwError:function(t,e){throw dr("syntax",e.text,t,e.index+1,this.text,this.text.substring(e.index))},consume:function(t){if(0===this.tokens.length)throw dr("ueoe",this.text);var e=this.expect(t);return e||this.throwError("is unexpected, expecting ["+t+"]",this.peek()),e},peekToken:function(){if(0===this.tokens.length)throw dr("ueoe",this.text);return this.tokens[0]},peek:function(t,e,n,i){return this.peekAhead(0,t,e,n,i)},peekAhead:function(t,e,n,i,r){if(this.tokens.length>t){t=this.tokens[t];var s=t.text;if(s===e||s===n||s===i||s===r||!(e||n||i||r))return t}return!1},expect:function(t,e,n,i){return!!(t=this.peek(t,e,n,i))&&(this.tokens.shift(),t)},selfReferential:{"this":{type:xr.ThisExpression},$locals:{type:xr.LocalsExpression}}},Ve.prototype={compile:function(t,e){var n=this,r=this.astBuilder.ast(t);this.state={nextId:0,filters:{},expensiveChecks:e,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]},Le(r,n.$filter);var s,o="";return this.stage="assign",(s=Ne(r))&&(this.state.computing="assign",o=this.nextId(),this.recurse(s,o),this.return_(o),o="fn.assign="+this.generateFunction("assign","s,v,l")),s=Re(r.body),n.stage="inputs",i(s,function(t,e){var i="fn"+e;n.state[i]={vars:[],body:[],own:{}},n.state.computing=i;var r=n.nextId();n.recurse(t,r),n.return_(r),n.state.inputs.push(i),t.watchId=e}),this.state.computing="fn",this.stage="main",this.recurse(r),o='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+o+this.watchFns()+"return fn;",o=new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","getStringValue","ensureSafeAssignContext","ifDefined","plus","text",o)(this.$filter,Ae,je,Me,Ee,De,Pe,Ie,t),this.state=this.stage=void 0,o.literal=Be(r),o.constant=r.constant,o},USE:"use",STRICT:"strict",watchFns:function(){var t=[],e=this.state.inputs,n=this;return i(e,function(e){t.push("var "+e+"="+n.generateFunction(e,"s"))}),e.length&&t.push("fn.inputs=["+e.join(",")+"];"),t.join("")},generateFunction:function(t,e){return"function("+e+"){"+this.varsPrefix(t)+this.body(t)+"};"},filterPrefix:function(){var t=[],e=this;return i(this.state.filters,function(n,i){t.push(n+"=$filter("+e.escape(i)+")")}),t.length?"var "+t.join(",")+";":""},varsPrefix:function(t){return this.state[t].vars.length?"var "+this.state[t].vars.join(",")+";":""},body:function(t){return this.state[t].body.join("")},recurse:function(t,e,n,r,s,o){var a,c,l,u,h,d=this;if(r=r||f,!o&&m(t.watchId))e=e||this.nextId(),this.if_("i",this.lazyAssign(e,this.computedMember("i",t.watchId)),this.lazyRecurse(t,e,n,r,s,!0));else switch(t.type){case xr.Program:i(t.body,function(e,n){d.recurse(e.expression,void 0,void 0,function(t){c=t}),n!==t.body.length-1?d.current().body.push(c,";"):d.return_(c)});break;case xr.Literal:u=this.escape(t.value),this.assign(e,u),r(u);break;case xr.UnaryExpression:this.recurse(t.argument,void 0,void 0,function(t){c=t}),u=t.operator+"("+this.ifDefined(c,0)+")",this.assign(e,u),r(u);break;case xr.BinaryExpression:this.recurse(t.left,void 0,void 0,function(t){a=t}),this.recurse(t.right,void 0,void 0,function(t){c=t}),u="+"===t.operator?this.plus(a,c):"-"===t.operator?this.ifDefined(a,0)+t.operator+this.ifDefined(c,0):"("+a+")"+t.operator+"("+c+")",this.assign(e,u),r(u);break;case xr.LogicalExpression:e=e||this.nextId(),d.recurse(t.left,e),d.if_("&&"===t.operator?e:d.not(e),d.lazyRecurse(t.right,e)),r(e);break;case xr.ConditionalExpression:e=e||this.nextId(),d.recurse(t.test,e),d.if_(e,d.lazyRecurse(t.alternate,e),d.lazyRecurse(t.consequent,e)),r(e);break;case xr.Identifier:e=e||this.nextId(),n&&(n.context="inputs"===d.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",t.name)+"?l:s"),n.computed=!1,n.name=t.name),Ae(t.name),d.if_("inputs"===d.stage||d.not(d.getHasOwnProperty("l",t.name)),function(){d.if_("inputs"===d.stage||"s",function(){s&&1!==s&&d.if_(d.not(d.nonComputedMember("s",t.name)),d.lazyAssign(d.nonComputedMember("s",t.name),"{}")),d.assign(e,d.nonComputedMember("s",t.name))})},e&&d.lazyAssign(e,d.nonComputedMember("l",t.name))),(d.state.expensiveChecks||He(t.name))&&d.addEnsureSafeObject(e),r(e);break;case xr.MemberExpression:a=n&&(n.context=this.nextId())||this.nextId(),e=e||this.nextId(),d.recurse(t.object,a,void 0,function(){d.if_(d.notNull(a),function(){s&&1!==s&&d.addEnsureSafeAssignContext(a),t.computed?(c=d.nextId(),d.recurse(t.property,c),d.getStringValue(c),d.addEnsureSafeMemberName(c),s&&1!==s&&d.if_(d.not(d.computedMember(a,c)),d.lazyAssign(d.computedMember(a,c),"{}")),u=d.ensureSafeObject(d.computedMember(a,c)),d.assign(e,u),n&&(n.computed=!0,n.name=c)):(Ae(t.property.name),s&&1!==s&&d.if_(d.not(d.nonComputedMember(a,t.property.name)),d.lazyAssign(d.nonComputedMember(a,t.property.name),"{}")),u=d.nonComputedMember(a,t.property.name),(d.state.expensiveChecks||He(t.property.name))&&(u=d.ensureSafeObject(u)),d.assign(e,u),n&&(n.computed=!1,n.name=t.property.name))},function(){d.assign(e,"undefined")}),r(e)},!!s);break;case xr.CallExpression:e=e||this.nextId(),t.filter?(c=d.filter(t.callee.name),l=[],i(t.arguments,function(t){var e=d.nextId();d.recurse(t,e),l.push(e)}),u=c+"("+l.join(",")+")",d.assign(e,u),r(e)):(c=d.nextId(),a={},l=[],d.recurse(t.callee,c,a,function(){d.if_(d.notNull(c),function(){d.addEnsureSafeFunction(c),i(t.arguments,function(t){d.recurse(t,d.nextId(),void 0,function(t){l.push(d.ensureSafeObject(t))})}),a.name?(d.state.expensiveChecks||d.addEnsureSafeObject(a.context),u=d.member(a.context,a.name,a.computed)+"("+l.join(",")+")"):u=c+"("+l.join(",")+")",u=d.ensureSafeObject(u),d.assign(e,u)},function(){d.assign(e,"undefined")}),r(e)}));break;case xr.AssignmentExpression:if(c=this.nextId(),a={},!Fe(t.left))throw dr("lval");this.recurse(t.left,void 0,a,function(){d.if_(d.notNull(a.context),function(){d.recurse(t.right,c),d.addEnsureSafeObject(d.member(a.context,a.name,a.computed)),d.addEnsureSafeAssignContext(a.context),u=d.member(a.context,a.name,a.computed)+t.operator+c,d.assign(e,u),r(e||u)})},1);break;case xr.ArrayExpression:l=[],i(t.elements,function(t){d.recurse(t,d.nextId(),void 0,function(t){l.push(t)})}),u="["+l.join(",")+"]",this.assign(e,u),r(u);break;case xr.ObjectExpression:l=[],h=!1,i(t.properties,function(t){t.computed&&(h=!0)}),h?(e=e||this.nextId(),this.assign(e,"{}"),i(t.properties,function(t){t.computed?(a=d.nextId(),d.recurse(t.key,a)):a=t.key.type===xr.Identifier?t.key.name:""+t.key.value,c=d.nextId(),d.recurse(t.value,c),d.assign(d.member(e,a,t.computed),c)})):(i(t.properties,function(e){d.recurse(e.value,t.constant?void 0:d.nextId(),void 0,function(t){l.push(d.escape(e.key.type===xr.Identifier?e.key.name:""+e.key.value)+":"+t)})}),u="{"+l.join(",")+"}",this.assign(e,u)),r(e||u);break;case xr.ThisExpression:this.assign(e,"s"),r("s");break;case xr.LocalsExpression:this.assign(e,"l"),r("l");break;case xr.NGValueParameter:this.assign(e,"v"),r("v")}},getHasOwnProperty:function(t,e){var n=t+"."+e,i=this.current().own;return i.hasOwnProperty(n)||(i[n]=this.nextId(!1,t+"&&("+this.escape(e)+" in "+t+")")),i[n]},assign:function(t,e){if(t)return this.current().body.push(t,"=",e,";"),t},filter:function(t){return this.state.filters.hasOwnProperty(t)||(this.state.filters[t]=this.nextId(!0)),this.state.filters[t]},ifDefined:function(t,e){return"ifDefined("+t+","+this.escape(e)+")"},plus:function(t,e){return"plus("+t+","+e+")"},return_:function(t){this.current().body.push("return ",t,";")},if_:function(t,e,n){if(!0===t)e();else{var i=this.current().body;i.push("if(",t,"){"),e(),i.push("}"),n&&(i.push("else{"),n(),i.push("}"))}},not:function(t){return"!("+t+")"},notNull:function(t){return t+"!=null"},nonComputedMember:function(t,e){var n=/[^$_a-zA-Z0-9]/g;return/[$_a-zA-Z][$_a-zA-Z0-9]*/.test(e)?t+"."+e:t+'["'+e.replace(n,this.stringEscapeFn)+'"]'},computedMember:function(t,e){return t+"["+e+"]"},member:function(t,e,n){return n?this.computedMember(t,e):this.nonComputedMember(t,e)},addEnsureSafeObject:function(t){this.current().body.push(this.ensureSafeObject(t),";")},addEnsureSafeMemberName:function(t){this.current().body.push(this.ensureSafeMemberName(t),";")},addEnsureSafeFunction:function(t){this.current().body.push(this.ensureSafeFunction(t),";")},addEnsureSafeAssignContext:function(t){this.current().body.push(this.ensureSafeAssignContext(t),";")},ensureSafeObject:function(t){return"ensureSafeObject("+t+",text)"},ensureSafeMemberName:function(t){return"ensureSafeMemberName("+t+",text)"},ensureSafeFunction:function(t){return"ensureSafeFunction("+t+",text)"},getStringValue:function(t){this.assign(t,"getStringValue("+t+")")},ensureSafeAssignContext:function(t){return"ensureSafeAssignContext("+t+",text)"},lazyRecurse:function(t,e,n,i,r,s){var o=this;return function(){o.recurse(t,e,n,i,r,s)}},lazyAssign:function(t,e){var n=this;return function(){n.assign(t,e)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)},escape:function(t){if(x(t))return"'"+t.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if($(t))return t.toString();if(!0===t)return"true";if(!1===t)return"false";if(null===t)return"null";if("undefined"==typeof t)return"undefined";throw dr("esc")},nextId:function(t,e){var n="v"+this.state.nextId++;return t||this.current().vars.push(n+(e?"="+e:"")),n},current:function(){return this.state[this.state.computing]}},We.prototype={compile:function(t,e){var n=this,r=this.astBuilder.ast(t);this.expression=t,this.expensiveChecks=e,Le(r,n.$filter);var s,o;(s=Ne(r))&&(o=this.recurse(s)),s=Re(r.body);var a;s&&(a=[],i(s,function(t,e){var i=n.recurse(t);t.input=i,a.push(i),t.watchId=e}));var c=[];return i(r.body,function(t){c.push(n.recurse(t.expression))}),s=0===r.body.length?f:1===r.body.length?c[0]:function(t,e){var n;return i(c,function(i){n=i(t,e)}),n},o&&(s.assign=function(t,e,n){return o(t,n,e)}),a&&(s.inputs=a),s.literal=Be(r),s.constant=r.constant,s},recurse:function(t,e,n){var r,s,o,a=this;if(t.input)return this.inputs(t.input,t.watchId);switch(t.type){case xr.Literal:return this.value(t.value,e);case xr.UnaryExpression:return s=this.recurse(t.argument),this["unary"+t.operator](s,e);case xr.BinaryExpression:return r=this.recurse(t.left),s=this.recurse(t.right),this["binary"+t.operator](r,s,e);case xr.LogicalExpression:return r=this.recurse(t.left),s=this.recurse(t.right),this["binary"+t.operator](r,s,e);case xr.ConditionalExpression:return this["ternary?:"](this.recurse(t.test),this.recurse(t.alternate),this.recurse(t.consequent),e);case xr.Identifier:return Ae(t.name,a.expression),a.identifier(t.name,a.expensiveChecks||He(t.name),e,n,a.expression);case xr.MemberExpression:return r=this.recurse(t.object,!1,!!n),t.computed||(Ae(t.property.name,a.expression),s=t.property.name),t.computed&&(s=this.recurse(t.property)),t.computed?this.computedMember(r,s,e,n,a.expression):this.nonComputedMember(r,s,a.expensiveChecks,e,n,a.expression);case xr.CallExpression:return o=[],i(t.arguments,function(t){o.push(a.recurse(t))}),t.filter&&(s=this.$filter(t.callee.name)),t.filter||(s=this.recurse(t.callee,!0)),t.filter?function(t,n,i,r){for(var a=[],c=0;c<o.length;++c)a.push(o[c](t,n,i,r));return t=s.apply(void 0,a,r),e?{context:void 0,name:void 0,value:t}:t}:function(t,n,i,r){var c,l=s(t,n,i,r);if(null!=l.value){je(l.context,a.expression),Me(l.value,a.expression),c=[];for(var u=0;u<o.length;++u)c.push(je(o[u](t,n,i,r),a.expression));c=je(l.value.apply(l.context,c),a.expression)}return e?{value:c}:c};case xr.AssignmentExpression:return r=this.recurse(t.left,!0,1),s=this.recurse(t.right),function(t,n,i,o){var c=r(t,n,i,o);return t=s(t,n,i,o),je(c.value,a.expression),De(c.context),c.context[c.name]=t,e?{value:t}:t};case xr.ArrayExpression:return o=[],i(t.elements,function(t){o.push(a.recurse(t))}),function(t,n,i,r){for(var s=[],a=0;a<o.length;++a)s.push(o[a](t,n,i,r));return e?{value:s}:s};case xr.ObjectExpression:return o=[],i(t.properties,function(t){t.computed?o.push({key:a.recurse(t.key),computed:!0,value:a.recurse(t.value)}):o.push({key:t.key.type===xr.Identifier?t.key.name:""+t.key.value,computed:!1,value:a.recurse(t.value)})}),function(t,n,i,r){for(var s={},a=0;a<o.length;++a)o[a].computed?s[o[a].key(t,n,i,r)]=o[a].value(t,n,i,r):s[o[a].key]=o[a].value(t,n,i,r);return e?{value:s}:s};case xr.ThisExpression:return function(t){return e?{value:t}:t};case xr.LocalsExpression:return function(t,n){return e?{value:n}:n};case xr.NGValueParameter:return function(t,n,i){return e?{value:i}:i}}},"unary+":function(t,e){return function(n,i,r,s){return n=t(n,i,r,s),n=m(n)?+n:0,e?{value:n}:n}},"unary-":function(t,e){return function(n,i,r,s){return n=t(n,i,r,s),n=m(n)?-n:0,e?{value:n}:n}},"unary!":function(t,e){return function(n,i,r,s){return n=!t(n,i,r,s),e?{value:n}:n}},"binary+":function(t,e,n){return function(i,r,s,o){var a=t(i,r,s,o);return i=e(i,r,s,o),a=Ie(a,i),n?{value:a}:a}},"binary-":function(t,e,n){return function(i,r,s,o){var a=t(i,r,s,o);return i=e(i,r,s,o),a=(m(a)?a:0)-(m(i)?i:0),n?{value:a}:a}},"binary*":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)*e(i,r,s,o),n?{value:i}:i}},"binary/":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)/e(i,r,s,o),n?{value:i}:i}},"binary%":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)%e(i,r,s,o),n?{value:i}:i}},"binary===":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)===e(i,r,s,o),n?{value:i}:i}},"binary!==":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)!==e(i,r,s,o),n?{value:i}:i}},"binary==":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)==e(i,r,s,o),n?{value:i}:i}},"binary!=":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)!=e(i,r,s,o),n?{value:i}:i}},"binary<":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)<e(i,r,s,o),n?{value:i}:i}},"binary>":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)>e(i,r,s,o),n?{value:i}:i}},"binary<=":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)<=e(i,r,s,o),n?{value:i}:i}},"binary>=":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)>=e(i,r,s,o),n?{value:i}:i}},"binary&&":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)&&e(i,r,s,o),n?{value:i}:i}},"binary||":function(t,e,n){return function(i,r,s,o){return i=t(i,r,s,o)||e(i,r,s,o),n?{value:i}:i}},"ternary?:":function(t,e,n,i){return function(r,s,o,a){return r=t(r,s,o,a)?e(r,s,o,a):n(r,s,o,a),i?{value:r}:r}},value:function(t,e){return function(){return e?{context:void 0,name:void 0,value:t}:t}},identifier:function(t,e,n,i,r){return function(s,o,a,c){return s=o&&t in o?o:s,i&&1!==i&&s&&!s[t]&&(s[t]={}),o=s?s[t]:void 0,e&&je(o,r),n?{context:s,name:t,value:o}:o}},computedMember:function(t,e,n,i,r){return function(s,o,a,c){var l,u,h=t(s,o,a,c);return null!=h&&(l=e(s,o,a,c),l+="",Ae(l,r),i&&1!==i&&(De(h),h&&!h[l]&&(h[l]={})),u=h[l],je(u,r)),n?{context:h,name:l,value:u}:u}},nonComputedMember:function(t,e,n,i,r,s){return function(o,a,c,l){return o=t(o,a,c,l),r&&1!==r&&(De(o),o&&!o[e]&&(o[e]={})),a=null!=o?o[e]:void 0,(n||He(e))&&je(a,s),i?{context:o,name:e,value:a}:a}},inputs:function(t,e){return function(n,i,r,s){return s?s[e]:t(n,i,r)}}};var $r=function(t,e,n){this.lexer=t,this.$filter=e,this.options=n,this.ast=new xr(t,n),this.astCompiler=n.csp?new We(this.ast,e):new Ve(this.ast,e)};$r.prototype={constructor:$r,parse:function(t){return this.astCompiler.compile(t,this.options.expensiveChecks)}};var _r=Object.prototype.valueOf,wr=e("$sce"),Cr={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},Sr=e("$compile"),Tr=t.document.createElement("a"),Or=an(t.location.href);un.$inject=["$document"],fn.$inject=["$provide"];var kr=22,Ar=".",Er="0";mn.$inject=["$locale"],yn.$inject=["$locale"];var jr={yyyy:wn("FullYear",4,0,!1,!0),yy:wn("FullYear",2,0,!0,!0),y:wn("FullYear",1,0,!1,!0),MMMM:Cn("Month"),MMM:Cn("Month",!0),MM:wn("Month",2,1),M:wn("Month",1,1),LLLL:Cn("Month",!1,!0),dd:wn("Date",2),d:wn("Date",1),HH:wn("Hours",2),H:wn("Hours",1),hh:wn("Hours",2,-12),h:wn("Hours",1,-12),mm:wn("Minutes",2),m:wn("Minutes",1),ss:wn("Seconds",2),s:wn("Seconds",1),sss:wn("Milliseconds",3),EEEE:Cn("Day"),EEE:Cn("Day",!0),a:function(t,e){return 12>t.getHours()?e.AMPMS[0]:e.AMPMS[1]},Z:function(t,e,n){return t=-1*n,t=(0<=t?"+":"")+(_n(Math[0<t?"floor":"ceil"](t/60),2)+_n(Math.abs(t%60),2))},ww:Tn(2),w:Tn(1),G:On,GG:On,GGG:On,GGGG:function(t,e){return 0>=t.getFullYear()?e.ERANAMES[0]:e.ERANAMES[1]}},Mr=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,Dr=/^\-?\d+$/;kn.$inject=["$locale"];var Pr=p(Kn),Ir=p(Jn);Mn.$inject=["$parse"];var Lr=p({restrict:"E",compile:function(t,e){if(!e.href&&!e.xlinkHref)return function(t,e){if("a"===e[0].nodeName.toLowerCase()){var n="[object SVGAnimatedString]"===ei.call(e.prop("href"))?"xlink:href":"href";e.on("click",function(t){e.attr(n)||t.preventDefault()})}}}}),Rr={};i(ji,function(t,e){function n(t,n,r){t.$watch(r[i],function(t){r.$set(e,!!t)})}if("multiple"!=t){var i=Kt("ng-"+e),r=n;"checked"===t&&(r=function(t,e,r){r.ngModel!==r[i]&&n(t,e,r)}),Rr[i]=function(){return{restrict:"A",priority:100,link:r}}}}),i(Di,function(t,e){Rr[e]=function(){return{priority:100,link:function(t,n,i){return"ngPattern"===e&&"/"==i.ngPattern.charAt(0)&&(n=i.ngPattern.match(Yn))?void i.$set("ngPattern",new RegExp(n[1],n[2])):void t.$watch(i[e],function(t){i.$set(e,t)})}}}}),i(["src","srcset","href"],function(t){var e=Kt("ng-"+t);Rr[e]=function(){return{priority:99,link:function(n,i,r){var s=t,o=t;"href"===t&&"[object SVGAnimatedString]"===ei.call(i.prop("href"))&&(o="xlinkHref",r.$attr[o]="xlink:href",s=null),r.$observe(e,function(e){e?(r.$set(o,e),Xn&&s&&i.prop(s,r[o])):"href"===t&&r.$set(o,null)})}}}});var Fr={$addControl:f,$$renameControl:function(t,e){t.$name=e},$removeControl:f,$setValidity:f,$setDirty:f,$setPristine:f,$setSubmitted:f};Pn.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var Nr=function(t){return["$timeout","$parse",function(e,n){function i(t){return""===t?n('this[""]').assign:n(t).assign||f}return{name:"form",restrict:t?"EAC":"E",require:["form","^^?form"],controller:Pn,compile:function(n,r){n.addClass(xs).addClass(ys);var s=r.name?"name":!(!t||!r.ngForm)&&"ngForm";return{pre:function(t,n,r,o){var a=o[0];if(!("action"in r)){var l=function(e){t.$apply(function(){a.$commitViewValue(),a.$setSubmitted()}),e.preventDefault()};n[0].addEventListener("submit",l,!1),n.on("$destroy",function(){e(function(){n[0].removeEventListener("submit",l,!1)},0,!1)})}(o[1]||a.$$parentForm).$addControl(a);var u=s?i(a.$name):f;s&&(u(t,a),r.$observe(s,function(e){a.$name!==e&&(u(t,void 0),a.$$parentForm.$$renameControl(a,e),(u=i(a.$name))(t,a))})),n.on("$destroy",function(){a.$$parentForm.$removeControl(a),u(t,void 0),c(a,Fr)})}}}}}]},Br=Nr(),Vr=Nr(!0),Wr=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,Hr=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,Xr=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,zr=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,Gr=/^(\d{4,})-(\d{2})-(\d{2})$/,qr=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Yr=/^(\d{4,})-W(\d\d)$/,Ur=/^(\d{4,})-(\d\d)$/,Kr=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Jr=ot();i(["date","datetime-local","month","time","week"],function(t){Jr[t]=!0});var Zr={text:function(t,e,n,i,r,s){Ln(t,e,n,i,r,s),In(i)},date:Fn("date",Gr,Rn(Gr,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":Fn("datetimelocal",qr,Rn(qr,"yyyy MM dd HH mm ss sss".split(" ")),"yyyy-MM-ddTHH:mm:ss.sss"),time:Fn("time",Kr,Rn(Kr,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:Fn("week",Yr,function(t,e){if(_(t))return t;if(x(t)){Yr.lastIndex=0;var n=Yr.exec(t);if(n){var i=+n[1],r=+n[2],s=n=0,o=0,a=0,c=Sn(i),r=7*(r-1);return e&&(n=e.getHours(),s=e.getMinutes(),o=e.getSeconds(),a=e.getMilliseconds()),new Date(i,0,c.getDate()+r,n,s,o,a)}}return NaN},"yyyy-Www"),month:Fn("month",Ur,Rn(Ur,["yyyy","MM"]),"yyyy-MM"),number:function(t,e,n,i,r,s){if(Nn(t,e,n,i),Ln(t,e,n,i,r,s),i.$$parserName="number",i.$parsers.push(function(t){return i.$isEmpty(t)?null:zr.test(t)?parseFloat(t):void 0}),i.$formatters.push(function(t){if(!i.$isEmpty(t)){if(!$(t))throw ws("numfmt",t);t=t.toString()}return t}),m(n.min)||n.ngMin){var o;i.$validators.min=function(t){return i.$isEmpty(t)||v(o)||t>=o},n.$observe("min",function(t){m(t)&&!$(t)&&(t=parseFloat(t)),o=$(t)&&!isNaN(t)?t:void 0,i.$validate()})}if(m(n.max)||n.ngMax){var a;i.$validators.max=function(t){return i.$isEmpty(t)||v(a)||t<=a},n.$observe("max",function(t){m(t)&&!$(t)&&(t=parseFloat(t)),a=$(t)&&!isNaN(t)?t:void 0,i.$validate()})}},url:function(t,e,n,i,r,s){Ln(t,e,n,i,r,s),In(i),i.$$parserName="url",i.$validators.url=function(t,e){var n=t||e;return i.$isEmpty(n)||Hr.test(n)}},email:function(t,e,n,i,r,s){Ln(t,e,n,i,r,s),In(i),i.$$parserName="email",i.$validators.email=function(t,e){var n=t||e;return i.$isEmpty(n)||Xr.test(n)}},radio:function(t,e,n,i){v(n.name)&&e.attr("name",++si),e.on("click",function(t){e[0].checked&&i.$setViewValue(n.value,t&&t.type)}),i.$render=function(){e[0].checked=n.value==i.$viewValue},n.$observe("value",i.$render)},checkbox:function(t,e,n,i,r,s,o,a){var c=Bn(a,t,"ngTrueValue",n.ngTrueValue,!0),l=Bn(a,t,"ngFalseValue",n.ngFalseValue,!1);e.on("click",function(t){i.$setViewValue(e[0].checked,t&&t.type)}),i.$render=function(){e[0].checked=i.$viewValue},i.$isEmpty=function(t){return!1===t},i.$formatters.push(function(t){return P(t,c)}),i.$parsers.push(function(t){return t?c:l})},hidden:f,button:f,submit:f,reset:f,file:f},Qr=["$browser","$sniffer","$filter","$parse",function(t,e,n,i){return{restrict:"E",require:["?ngModel"],link:{pre:function(r,s,o,a){a[0]&&(Zr[Kn(o.type)]||Zr.text)(r,s,o,a[0],e,t,n,i)}}}}],ts=/^(true|false|\d+)$/,es=function(){return{restrict:"A",priority:100,compile:function(t,e){return ts.test(e.ngValue)?function(t,e,n){n.$set("value",t.$eval(n.ngValue))}:function(t,e,n){t.$watch(n.ngValue,function(t){n.$set("value",t)})}}}},ns=["$compile",function(t){return{restrict:"AC",compile:function(e){return t.$$addBindingClass(e),function(e,n,i){t.$$addBindingInfo(n,i.ngBind),n=n[0],e.$watch(i.ngBind,function(t){n.textContent=v(t)?"":t})}}}}],is=["$interpolate","$compile",function(t,e){return{compile:function(n){return e.$$addBindingClass(n),function(n,i,r){n=t(i.attr(r.$attr.ngBindTemplate)),e.$$addBindingInfo(i,n.expressions),i=i[0],r.$observe("ngBindTemplate",function(t){i.textContent=v(t)?"":t})}}}}],rs=["$sce","$parse","$compile",function(t,e,n){return{restrict:"A",compile:function(i,r){var s=e(r.ngBindHtml),o=e(r.ngBindHtml,function(e){return t.valueOf(e)});return n.$$addBindingClass(i),function(e,i,r){n.$$addBindingInfo(i,r.ngBindHtml),e.$watch(o,function(){var n=s(e);i.html(t.getTrustedHtml(n)||"")})}}}}],ss=p({restrict:"A",require:"ngModel",link:function(t,e,n,i){i.$viewChangeListeners.push(function(){t.$eval(n.ngChange)})}}),os=Vn("",!0),as=Vn("Odd",0),cs=Vn("Even",1),ls=Dn({compile:function(t,e){e.$set("ngCloak",void 0),t.removeClass("ng-cloak")}}),us=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],hs={},fs={blur:!0,focus:!0};i("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),function(t){var e=Kt("ng-"+t);hs[e]=["$parse","$rootScope",function(n,i){return{restrict:"A",compile:function(r,s){var o=n(s[e],null,!0);return function(e,n){n.on(t,function(n){var r=function(){o(e,{$event:n})};fs[t]&&i.$$phase?e.$evalAsync(r):e.$apply(r)})}}}}]});var ds=["$animate","$compile",function(t,e){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(n,i,r,s,o){var a,c,l;n.$watch(r.ngIf,function(n){n?c||o(function(n,s){c=s,n[n.length++]=e.$$createComment("end ngIf",r.ngIf),a={clone:n},t.enter(n,i.parent(),i);
}):(l&&(l.remove(),l=null),c&&(c.$destroy(),c=null),a&&(l=st(a.clone),t.leave(l).then(function(){l=null}),a=null))})}}}],ps=["$templateRequest","$anchorScroll","$animate",function(t,e,n){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:ri.noop,compile:function(i,r){var s=r.ngInclude||r.src,o=r.onload||"",a=r.autoscroll;return function(i,r,c,l,u){var h,f,d,p=0,g=function(){f&&(f.remove(),f=null),h&&(h.$destroy(),h=null),d&&(n.leave(d).then(function(){f=null}),f=d,d=null)};i.$watch(s,function(s){var c=function(){!m(a)||a&&!i.$eval(a)||e()},f=++p;s?(t(s,!0).then(function(t){if(!i.$$destroyed&&f===p){var e=i.$new();l.template=t,t=u(e,function(t){g(),n.enter(t,null,r).then(c)}),h=e,d=t,h.$emit("$includeContentLoaded",s),i.$eval(o)}},function(){i.$$destroyed||f!==p||(g(),i.$emit("$includeContentError",s))}),i.$emit("$includeContentRequested",s)):(g(),l.template=null)})}}}}],gs=["$compile",function(e){return{restrict:"ECA",priority:-400,require:"ngInclude",link:function(n,i,r,s){ei.call(i[0]).match(/SVG/)?(i.empty(),e(ft(s.template,t.document).childNodes)(n,function(t){i.append(t)},{futureParentElement:i})):(i.html(s.template),e(i.contents())(n))}}}],vs=Dn({priority:450,compile:function(){return{pre:function(t,e,n){t.$eval(n.ngInit)}}}}),ms=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(t,e,n,r){var s=e.attr(n.$attr.ngList)||", ",o="false"!==n.ngTrim,a=o?ci(s):s;r.$parsers.push(function(t){if(!v(t)){var e=[];return t&&i(t.split(a),function(t){t&&e.push(o?ci(t):t)}),e}}),r.$formatters.push(function(t){if(oi(t))return t.join(s)}),r.$isEmpty=function(t){return!t||!t.length}}}},ys="ng-valid",bs="ng-invalid",xs="ng-pristine",$s="ng-dirty",_s="ng-pending",ws=e("ngModel"),Cs=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(t,e,n,r,s,o,a,c,l,u){this.$modelValue=this.$viewValue=Number.NaN,this.$$rawModelValue=void 0,this.$validators={},this.$asyncValidators={},this.$parsers=[],this.$formatters=[],this.$viewChangeListeners=[],this.$untouched=!0,this.$touched=!1,this.$pristine=!0,this.$dirty=!1,this.$valid=!0,this.$invalid=!1,this.$error={},this.$$success={},this.$pending=void 0,this.$name=u(n.name||"",!1)(t),this.$$parentForm=Fr;var h,d=s(n.ngModel),p=d.assign,g=d,y=p,b=null,x=this;this.$$setOptions=function(t){if((x.$options=t)&&t.getterSetter){var e=s(n.ngModel+"()"),i=s(n.ngModel+"($$$p)");g=function(t){var n=d(t);return w(n)&&(n=e(t)),n},y=function(t,e){w(d(t))?i(t,{$$$p:e}):p(t,e)}}else if(!d.assign)throw ws("nonassign",n.ngModel,W(r))},this.$render=f,this.$isEmpty=function(t){return v(t)||""===t||null===t||t!==t},this.$$updateEmptyClasses=function(t){x.$isEmpty(t)?(o.removeClass(r,"ng-not-empty"),o.addClass(r,"ng-empty")):(o.removeClass(r,"ng-empty"),o.addClass(r,"ng-not-empty"))};var _=0;Wn({ctrl:this,$element:r,set:function(t,e){t[e]=!0},unset:function(t,e){delete t[e]},$animate:o}),this.$setPristine=function(){x.$dirty=!1,x.$pristine=!0,o.removeClass(r,$s),o.addClass(r,xs)},this.$setDirty=function(){x.$dirty=!0,x.$pristine=!1,o.removeClass(r,xs),o.addClass(r,$s),x.$$parentForm.$setDirty()},this.$setUntouched=function(){x.$touched=!1,x.$untouched=!0,o.setClass(r,"ng-untouched","ng-touched")},this.$setTouched=function(){x.$touched=!0,x.$untouched=!1,o.setClass(r,"ng-touched","ng-untouched")},this.$rollbackViewValue=function(){a.cancel(b),x.$viewValue=x.$$lastCommittedViewValue,x.$render()},this.$validate=function(){if(!$(x.$modelValue)||!isNaN(x.$modelValue)){var t=x.$$rawModelValue,e=x.$valid,n=x.$modelValue,i=x.$options&&x.$options.allowInvalid;x.$$runValidators(t,x.$$lastCommittedViewValue,function(r){i||e===r||(x.$modelValue=r?t:void 0,x.$modelValue!==n&&x.$$writeModelToScope())})}},this.$$runValidators=function(t,e,n){function r(){var n=!0;return i(x.$validators,function(i,r){var s=i(t,e);n=n&&s,o(r,s)}),!!n||(i(x.$asyncValidators,function(t,e){o(e,null)}),!1)}function s(){var n=[],r=!0;i(x.$asyncValidators,function(i,s){var a=i(t,e);if(!a||!w(a.then))throw ws("nopromise",a);o(s,void 0),n.push(a.then(function(){o(s,!0)},function(){r=!1,o(s,!1)}))}),n.length?l.all(n).then(function(){a(r)},f):a(!0)}function o(t,e){c===_&&x.$setValidity(t,e)}function a(t){c===_&&n(t)}_++;var c=_;(function(){var t=x.$$parserName||"parse";return v(h)?(o(t,null),!0):(h||(i(x.$validators,function(t,e){o(e,null)}),i(x.$asyncValidators,function(t,e){o(e,null)})),o(t,h),h)})()&&r()?s():a(!1)},this.$commitViewValue=function(){var t=x.$viewValue;a.cancel(b),(x.$$lastCommittedViewValue!==t||""===t&&x.$$hasNativeValidators)&&(x.$$updateEmptyClasses(t),x.$$lastCommittedViewValue=t,x.$pristine&&this.$setDirty(),this.$$parseAndValidate())},this.$$parseAndValidate=function(){var e=x.$$lastCommittedViewValue;if(h=!v(e)||void 0)for(var n=0;n<x.$parsers.length;n++)if(e=x.$parsers[n](e),v(e)){h=!1;break}$(x.$modelValue)&&isNaN(x.$modelValue)&&(x.$modelValue=g(t));var i=x.$modelValue,r=x.$options&&x.$options.allowInvalid;x.$$rawModelValue=e,r&&(x.$modelValue=e,x.$modelValue!==i&&x.$$writeModelToScope()),x.$$runValidators(e,x.$$lastCommittedViewValue,function(t){r||(x.$modelValue=t?e:void 0,x.$modelValue!==i&&x.$$writeModelToScope())})},this.$$writeModelToScope=function(){y(t,x.$modelValue),i(x.$viewChangeListeners,function(t){try{t()}catch(n){e(n)}})},this.$setViewValue=function(t,e){x.$viewValue=t,x.$options&&!x.$options.updateOnDefault||x.$$debounceViewValueCommit(e)},this.$$debounceViewValueCommit=function(e){var n=0,i=x.$options;i&&m(i.debounce)&&(i=i.debounce,$(i)?n=i:$(i[e])?n=i[e]:$(i["default"])&&(n=i["default"])),a.cancel(b),n?b=a(function(){x.$commitViewValue()},n):c.$$phase?x.$commitViewValue():t.$apply(function(){x.$commitViewValue()})},t.$watch(function(){var e=g(t);if(e!==x.$modelValue&&(x.$modelValue===x.$modelValue||e===e)){x.$modelValue=x.$$rawModelValue=e,h=void 0;for(var n=x.$formatters,i=n.length,r=e;i--;)r=n[i](r);x.$viewValue!==r&&(x.$$updateEmptyClasses(r),x.$viewValue=x.$$lastCommittedViewValue=r,x.$render(),x.$$runValidators(e,r,f))}return e})}],Ss=["$rootScope",function(t){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Cs,priority:1,compile:function(e){return e.addClass(xs).addClass("ng-untouched").addClass(ys),{pre:function(t,e,n,i){var r=i[0];e=i[1]||r.$$parentForm,r.$$setOptions(i[2]&&i[2].$options),e.$addControl(r),n.$observe("name",function(t){r.$name!==t&&r.$$parentForm.$$renameControl(r,t)}),t.$on("$destroy",function(){r.$$parentForm.$removeControl(r)})},post:function(e,n,i,r){var s=r[0];s.$options&&s.$options.updateOn&&n.on(s.$options.updateOn,function(t){s.$$debounceViewValueCommit(t&&t.type)}),n.on("blur",function(){s.$touched||(t.$$phase?e.$evalAsync(s.$setTouched):e.$apply(s.$setTouched))})}}}}}],Ts=/(\s+|^)default(\s+|$)/,Os=function(){return{restrict:"A",controller:["$scope","$attrs",function(t,e){var n=this;this.$options=D(t.$eval(e.ngModelOptions)),m(this.$options.updateOn)?(this.$options.updateOnDefault=!1,this.$options.updateOn=ci(this.$options.updateOn.replace(Ts,function(){return n.$options.updateOnDefault=!0," "}))):this.$options.updateOnDefault=!0}]}},ks=Dn({terminal:!0,priority:1e3}),As=e("ngOptions"),Es=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,js=["$compile","$document","$parse",function(e,r,s){function o(t,e,i){function r(t,e,n,i,r){this.selectValue=t,this.viewValue=e,this.label=n,this.group=i,this.disabled=r}function o(t){var e;if(!l&&n(t))e=t;else{e=[];for(var i in t)t.hasOwnProperty(i)&&"$"!==i.charAt(0)&&e.push(i)}return e}var a=t.match(Es);if(!a)throw As("iexp",t,W(e));var c=a[5]||a[7],l=a[6];t=/ as /.test(a[0])&&a[1];var u=a[9];e=s(a[2]?a[1]:c);var h=t&&s(t)||e,f=u&&s(u),d=u?function(t,e){return f(i,e)}:function(t){return It(t)},p=function(t,e){return d(t,x(t,e))},g=s(a[2]||a[1]),v=s(a[3]||""),m=s(a[4]||""),y=s(a[8]),b={},x=l?function(t,e){return b[l]=e,b[c]=t,b}:function(t){return b[c]=t,b};return{trackBy:u,getTrackByValue:p,getWatchables:s(y,function(t){var e=[];t=t||[];for(var n=o(t),r=n.length,s=0;s<r;s++){var c=t===n?s:n[s],l=t[c],c=x(l,c),l=d(l,c);e.push(l),(a[2]||a[1])&&(l=g(i,c),e.push(l)),a[4]&&(c=m(i,c),e.push(c))}return e}),getOptions:function(){for(var t=[],e={},n=y(i)||[],s=o(n),a=s.length,c=0;c<a;c++){var l=n===s?c:s[c],f=x(n[l],l),b=h(i,f),l=d(b,f),$=g(i,f),_=v(i,f),f=m(i,f),b=new r(l,b,$,_,f);t.push(b),e[l]=b}return{items:t,selectValueMap:e,getOptionFromViewValue:function(t){return e[p(t)]},getViewValueFromOption:function(t){return u?ri.copy(t.viewValue):t.viewValue}}}}}var a=t.document.createElement("option"),c=t.document.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(t,e,n,i){i[0].registerOption=f},post:function(t,n,s,l){function u(t,e){t.element=e,e.disabled=t.disabled,t.label!==e.label&&(e.label=t.label,e.textContent=t.label),t.value!==e.value&&(e.value=t.selectValue)}function h(){var t=$&&d.readValue();if($)for(var e=$.items.length-1;0<=e;e--){var i=$.items[e];kt(m(i.group)?i.element.parentNode:i.element)}$=_.getOptions();var r={};b&&n.prepend(f),$.items.forEach(function(t){var e;if(m(t.group)){e=r[t.group],e||(e=c.cloneNode(!1),w.appendChild(e),e.label=null===t.group?"null":t.group,r[t.group]=e);var n=a.cloneNode(!1)}else e=w,n=a.cloneNode(!1);e.appendChild(n),u(t,n)}),n[0].appendChild(w),p.$render(),p.$isEmpty(t)||(e=d.readValue(),(_.trackBy||g?P(t,e):t===e)||(p.$setViewValue(e),p.$render()))}var f,d=l[0],p=l[1],g=s.multiple;l=0;for(var v=n.children(),y=v.length;l<y;l++)if(""===v[l].value){f=v.eq(l);break}var b=!!f,x=zn(a.cloneNode(!1));x.val("?");var $,_=o(s.ngOptions,n,t),w=r[0].createDocumentFragment();g?(p.$isEmpty=function(t){return!t||0===t.length},d.writeValue=function(t){$.items.forEach(function(t){t.element.selected=!1}),t&&t.forEach(function(t){(t=$.getOptionFromViewValue(t))&&(t.element.selected=!0)})},d.readValue=function(){var t=n.val()||[],e=[];return i(t,function(t){(t=$.selectValueMap[t])&&!t.disabled&&e.push($.getViewValueFromOption(t))}),e},_.trackBy&&t.$watchCollection(function(){if(oi(p.$viewValue))return p.$viewValue.map(function(t){return _.getTrackByValue(t)})},function(){p.$render()})):(d.writeValue=function(t){var e=$.getOptionFromViewValue(t);e?(n[0].value!==e.selectValue&&(x.remove(),b||f.remove(),n[0].value=e.selectValue,e.element.selected=!0),e.element.setAttribute("selected","selected")):null===t||b?(x.remove(),b||n.prepend(f),n.val(""),f.prop("selected",!0),f.attr("selected",!0)):(b||f.remove(),n.prepend(x),n.val("?"),x.prop("selected",!0),x.attr("selected",!0))},d.readValue=function(){var t=$.selectValueMap[n.val()];return t&&!t.disabled?(b||f.remove(),x.remove(),$.getViewValueFromOption(t)):null},_.trackBy&&t.$watch(function(){return _.getTrackByValue(p.$viewValue)},function(){p.$render()})),b?(f.remove(),e(f)(t),f.removeClass("ng-scope")):f=zn(a.cloneNode(!1)),n.empty(),h(),t.$watchCollection(_.getWatchables,h)}}}}],Ms=["$locale","$interpolate","$log",function(t,e,n){var r=/{}/g,s=/^when(Minus)?(.+)$/;return{link:function(o,a,c){function l(t){a.text(t||"")}var u,h=c.count,d=c.$attr.when&&a.attr(c.$attr.when),p=c.offset||0,g=o.$eval(d)||{},m={},y=e.startSymbol(),b=e.endSymbol(),x=y+h+"-"+p+b,_=ri.noop;i(c,function(t,e){var n=s.exec(e);n&&(n=(n[1]?"-":"")+Kn(n[2]),g[n]=a.attr(c.$attr[e]))}),i(g,function(t,n){m[n]=e(t.replace(r,x))}),o.$watch(h,function(e){var i=parseFloat(e),r=isNaN(i);r||i in g||(i=t.pluralCat(i-p)),i===u||r&&$(u)&&isNaN(u)||(_(),r=m[i],v(r)?(null!=e&&n.debug("ngPluralize: no rule defined for '"+i+"' in "+d),_=f,l()):_=o.$watch(r,l),u=i)})}}}],Ds=["$parse","$animate","$compile",function(t,r,s){var o=e("ngRepeat"),a=function(t,e,n,i,r,s,o){t[n]=i,r&&(t[r]=s),t.$index=e,t.$first=0===e,t.$last=e===o-1,t.$middle=!(t.$first||t.$last),t.$odd=!(t.$even=0===(1&e))};return{restrict:"A",multiElement:!0,transclude:"element",priority:1e3,terminal:!0,$$tlb:!0,compile:function(e,c){var l=c.ngRepeat,u=s.$$createComment("end ngRepeat",l),h=l.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!h)throw o("iexp",l);var f=h[1],d=h[2],p=h[3],g=h[4],h=f.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);if(!h)throw o("iidexp",f);var v=h[3]||h[1],m=h[2];if(p&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(p)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(p)))throw o("badident",p);var y,b,x,$,_={$id:It};return g?y=t(g):(x=function(t,e){return It(e)},$=function(t){return t}),function(t,e,s,c,h){y&&(b=function(e,n,i){return m&&(_[m]=e),_[v]=n,_.$index=i,y(t,_)});var f=ot();t.$watchCollection(d,function(s){var c,d,g,y,_,w,C,S,T,O,k=e[0],A=ot();if(p&&(t[p]=s),n(s))S=s,d=b||x;else for(O in d=b||$,S=[],s)Un.call(s,O)&&"$"!==O.charAt(0)&&S.push(O);for(y=S.length,O=Array(y),c=0;c<y;c++)if(_=s===S?c:S[c],w=s[_],C=d(_,w,c),f[C])T=f[C],delete f[C],A[C]=T,O[c]=T;else{if(A[C])throw i(O,function(t){t&&t.scope&&(f[t.id]=t)}),o("dupes",l,C,w);O[c]={id:C,scope:void 0,clone:void 0},A[C]=!0}for(g in f){if(T=f[g],C=st(T.clone),r.leave(C),C[0].parentNode)for(c=0,d=C.length;c<d;c++)C[c].$$NG_REMOVED=!0;T.scope.$destroy()}for(c=0;c<y;c++)if(_=s===S?c:S[c],w=s[_],T=O[c],T.scope){g=k;do g=g.nextSibling;while(g&&g.$$NG_REMOVED);T.clone[0]!=g&&r.move(st(T.clone),null,k),k=T.clone[T.clone.length-1],a(T.scope,c,v,w,m,_,y)}else h(function(t,e){T.scope=e;var n=u.cloneNode(!1);t[t.length++]=n,r.enter(t,null,k),k=n,T.clone=t,A[T.id]=T,a(T.scope,c,v,w,m,_,y)});f=A})}}}}],Ps=["$animate",function(t){return{restrict:"A",multiElement:!0,link:function(e,n,i){e.$watch(i.ngShow,function(e){t[e?"removeClass":"addClass"](n,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Is=["$animate",function(t){return{restrict:"A",multiElement:!0,link:function(e,n,i){e.$watch(i.ngHide,function(e){t[e?"addClass":"removeClass"](n,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Ls=Dn(function(t,e,n){t.$watch(n.ngStyle,function(t,n){n&&t!==n&&i(n,function(t,n){e.css(n,"")}),t&&e.css(t)},!0)}),Rs=["$animate","$compile",function(t,e){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(n,r,s,o){var a=[],c=[],l=[],u=[],h=function(t,e){return function(){t.splice(e,1)}};n.$watch(s.ngSwitch||s.on,function(n){var r,s;for(r=0,s=l.length;r<s;++r)t.cancel(l[r]);for(r=l.length=0,s=u.length;r<s;++r){var f=st(c[r].clone);u[r].$destroy(),(l[r]=t.leave(f)).then(h(l,r))}c.length=0,u.length=0,(a=o.cases["!"+n]||o.cases["?"])&&i(a,function(n){n.transclude(function(i,r){u.push(r);var s=n.element;i[i.length++]=e.$$createComment("end ngSwitchWhen"),c.push({clone:i}),t.enter(i,s.parent(),s)})})})}}}],Fs=Dn({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(t,e,n,i,r){i.cases["!"+n.ngSwitchWhen]=i.cases["!"+n.ngSwitchWhen]||[],i.cases["!"+n.ngSwitchWhen].push({transclude:r,element:e})}}),Ns=Dn({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(t,e,n,i,r){i.cases["?"]=i.cases["?"]||[],i.cases["?"].push({transclude:r,element:e})}}),Bs=e("ngTransclude"),Vs=["$compile",function(t){return{restrict:"EAC",terminal:!0,compile:function(e){var n=t(e.contents());return e.empty(),function(t,e,i,r,s){function o(){n(t,function(t){e.append(t)})}if(!s)throw Bs("orphan",W(e));i.ngTransclude===i.$attr.ngTransclude&&(i.ngTransclude=""),i=i.ngTransclude||i.ngTranscludeSlot,s(function(t,n){t.length?e.append(t):(o(),n.$destroy())},null,i),i&&!s.isSlotFilled(i)&&o()}}}}],Ws=["$templateCache",function(t){return{restrict:"E",terminal:!0,compile:function(e,n){"text/ng-template"==n.type&&t.put(n.id,e[0].text)}}}],Hs={$setViewValue:f,$render:f},Xs=["$element","$scope",function(e,n){var i=this,r=new Lt;i.ngModelCtrl=Hs,i.unknownOption=zn(t.document.createElement("option")),i.renderUnknownOption=function(t){t="? "+It(t)+" ?",i.unknownOption.val(t),e.prepend(i.unknownOption),e.val(t)},n.$on("$destroy",function(){i.renderUnknownOption=f}),i.removeUnknownOption=function(){i.unknownOption.parent()&&i.unknownOption.remove()},i.readValue=function(){return i.removeUnknownOption(),e.val()},i.writeValue=function(t){i.hasOption(t)?(i.removeUnknownOption(),e.val(t),""===t&&i.emptyOption.prop("selected",!0)):null==t&&i.emptyOption?(i.removeUnknownOption(),e.val("")):i.renderUnknownOption(t)},i.addOption=function(t,e){if(8!==e[0].nodeType){it(t,'"option value"'),""===t&&(i.emptyOption=e);var n=r.get(t)||0;r.put(t,n+1),i.ngModelCtrl.$render(),e[0].hasAttribute("selected")&&(e[0].selected=!0)}},i.removeOption=function(t){var e=r.get(t);e&&(1===e?(r.remove(t),""===t&&(i.emptyOption=void 0)):r.put(t,e-1))},i.hasOption=function(t){return!!r.get(t)},i.registerOption=function(t,e,n,r,s){if(r){var o;n.$observe("value",function(t){m(o)&&i.removeOption(o),o=t,i.addOption(t,e)})}else s?t.$watch(s,function(t,r){n.$set("value",t),r!==t&&i.removeOption(r),i.addOption(t,e)}):i.addOption(n.value,e);e.on("$destroy",function(){i.removeOption(n.value),i.ngModelCtrl.$render()})}}],zs=function(){return{restrict:"E",require:["select","?ngModel"],controller:Xs,priority:1,link:{pre:function(t,e,n,r){var s=r[1];if(s){var o=r[0];if(o.ngModelCtrl=s,e.on("change",function(){t.$apply(function(){s.$setViewValue(o.readValue())})}),n.multiple){o.readValue=function(){var t=[];return i(e.find("option"),function(e){e.selected&&t.push(e.value)}),t},o.writeValue=function(t){var n=new Lt(t);i(e.find("option"),function(t){t.selected=m(n.get(t.value))})};var a,c=NaN;t.$watch(function(){c!==s.$viewValue||P(a,s.$viewValue)||(a=ct(s.$viewValue),s.$render()),c=s.$viewValue}),s.$isEmpty=function(t){return!t||0===t.length}}}},post:function(t,e,n,i){var r=i[1];if(r){var s=i[0];r.$render=function(){s.writeValue(r.$viewValue)}}}}}},Gs=["$interpolate",function(t){return{restrict:"E",priority:100,compile:function(e,n){if(m(n.value))var i=t(n.value,!0);else{var r=t(e.text(),!0);r||n.$set("value",e.text())}return function(t,e,n){var s=e.parent();(s=s.data("$selectController")||s.parent().data("$selectController"))&&s.registerOption(t,e,n,i,r)}}}}],qs=p({restrict:"E",terminal:!1}),Ys=function(){return{restrict:"A",require:"?ngModel",link:function(t,e,n,i){i&&(n.required=!0,i.$validators.required=function(t,e){return!n.required||!i.$isEmpty(e)},n.$observe("required",function(){i.$validate()}))}}},Us=function(){return{restrict:"A",require:"?ngModel",link:function(t,n,i,r){if(r){var s,o=i.ngPattern||i.pattern;i.$observe("pattern",function(t){if(x(t)&&0<t.length&&(t=new RegExp("^"+t+"$")),t&&!t.test)throw e("ngPattern")("noregexp",o,t,W(n));s=t||void 0,r.$validate()}),r.$validators.pattern=function(t,e){return r.$isEmpty(e)||v(s)||s.test(e)}}}}},Ks=function(){return{restrict:"A",require:"?ngModel",link:function(t,e,n,i){if(i){var r=-1;n.$observe("maxlength",function(t){t=u(t),r=isNaN(t)?-1:t,i.$validate()}),i.$validators.maxlength=function(t,e){return 0>r||i.$isEmpty(e)||e.length<=r}}}}},Js=function(){return{restrict:"A",require:"?ngModel",link:function(t,e,n,i){if(i){var r=0;n.$observe("minlength",function(t){r=u(t)||0,i.$validate()}),i.$validators.minlength=function(t,e){return i.$isEmpty(e)||e.length>=r}}}}};t.angular.bootstrap?t.console&&console.log("WARNING: Tried to load angular more than once."):(tt(),lt(ri),ri.module("ngLocale",[],["$provide",function(t){function e(t){t+="";var e=t.indexOf(".");return-1==e?0:t.length-e-1}t.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM","PM"],DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:"January February March April May June July August September October November December".split(" "),SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),STANDALONEMONTH:"January February March April May June July August September October November December".split(" "),WEEKENDRANGE:[5,6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-¤",negSuf:"",posPre:"¤",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(t,n){var i=0|t,r=n;return void 0===r&&(r=Math.min(e(t),3)),Math.pow(10,r),1==i&&0==r?"one":"other"}})}]),zn(t.document).ready(function(){U(t.document,K)}))}(window),!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');var fabric=fabric||{version:"1.6.4"};"undefined"!=typeof exports&&(exports.fabric=fabric),"undefined"!=typeof document&&"undefined"!=typeof window?(fabric.document=document,fabric.window=window,window.fabric=fabric):(fabric.document=require("jsdom").jsdom("<!DOCTYPE html><html><head></head><body></body></html>"),fabric.document.createWindow?fabric.window=fabric.document.createWindow():fabric.window=fabric.document.parentWindow),fabric.isTouchSupported="ontouchstart"in fabric.document.documentElement,fabric.isLikelyNode="undefined"!=typeof Buffer&&"undefined"==typeof window,fabric.SHARED_ATTRIBUTES=["display","transform","fill","fill-opacity","fill-rule","opacity","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","id"],fabric.DPI=96,fabric.reNum="(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)",fabric.fontPaths={},fabric.charWidthsCache={},fabric.devicePixelRatio=fabric.window.devicePixelRatio||fabric.window.webkitDevicePixelRatio||fabric.window.mozDevicePixelRatio||1,function(){function t(t,e){if(this.__eventListeners[t]){var n=this.__eventListeners[t];e?n[n.indexOf(e)]=!1:fabric.util.array.fill(n,!1)}}function e(t,e){if(this.__eventListeners||(this.__eventListeners={}),1===arguments.length)for(var n in t)this.on(n,t[n]);else this.__eventListeners[t]||(this.__eventListeners[t]=[]),this.__eventListeners[t].push(e);return this}function n(e,n){if(this.__eventListeners){if(0===arguments.length)for(e in this.__eventListeners)t.call(this,e);else if(1===arguments.length&&"object"==typeof arguments[0])for(var i in e)t.call(this,i,e[i]);else t.call(this,e,n);return this}}function i(t,e){if(this.__eventListeners){var n=this.__eventListeners[t];if(n){for(var i=0,r=n.length;i<r;i++)n[i]&&n[i].call(this,e||{});return this.__eventListeners[t]=n.filter(function(t){return t!==!1}),this}}}fabric.Observable={observe:e,stopObserving:n,fire:i,on:e,off:n,trigger:i}}(),fabric.Collection={_objects:[],add:function(){if(this._objects.push.apply(this._objects,arguments),this._onObjectAdded)for(var t=0,e=arguments.length;t<e;t++)this._onObjectAdded(arguments[t]);return this.renderOnAddRemove&&this.renderAll(),this},insertAt:function(t,e,n){var i=this.getObjects();return n?i[e]=t:i.splice(e,0,t),this._onObjectAdded&&this._onObjectAdded(t),this.renderOnAddRemove&&this.renderAll(),this},remove:function(){for(var t,e=this.getObjects(),n=!1,i=0,r=arguments.length;i<r;i++)t=e.indexOf(arguments[i]),t!==-1&&(n=!0,e.splice(t,1),this._onObjectRemoved&&this._onObjectRemoved(arguments[i]));return this.renderOnAddRemove&&n&&this.renderAll(),this},forEachObject:function(t,e){for(var n=this.getObjects(),i=0,r=n.length;i<r;i++)t.call(e,n[i],i,n);return this},getObjects:function(t){return"undefined"==typeof t?this._objects:this._objects.filter(function(e){return e.type===t})},item:function(t){return this.getObjects()[t]},isEmpty:function(){return 0===this.getObjects().length},size:function(){return this.getObjects().length},contains:function(t){return this.getObjects().indexOf(t)>-1},complexity:function(){return this.getObjects().reduce(function(t,e){return t+=e.complexity?e.complexity():0},0)}},function(t){var e=Math.sqrt,n=Math.atan2,i=Math.pow,r=Math.abs,s=Math.PI/180;fabric.util={removeFromArray:function(t,e){var n=t.indexOf(e);return n!==-1&&t.splice(n,1),t},getRandomInt:function(t,e){return Math.floor(Math.random()*(e-t+1))+t},degreesToRadians:function(t){return t*s},radiansToDegrees:function(t){return t/s},rotatePoint:function(t,e,n){t.subtractEquals(e);var i=fabric.util.rotateVector(t,n);return new fabric.Point(i.x,i.y).addEquals(e)},rotateVector:function(t,e){var n=Math.sin(e),i=Math.cos(e),r=t.x*i-t.y*n,s=t.x*n+t.y*i;return{x:r,y:s}},transformPoint:function(t,e,n){return n?new fabric.Point(e[0]*t.x+e[2]*t.y,e[1]*t.x+e[3]*t.y):new fabric.Point(e[0]*t.x+e[2]*t.y+e[4],e[1]*t.x+e[3]*t.y+e[5])},makeBoundingBoxFromPoints:function(t){var e=[t[0].x,t[1].x,t[2].x,t[3].x],n=fabric.util.array.min(e),i=fabric.util.array.max(e),r=Math.abs(n-i),s=[t[0].y,t[1].y,t[2].y,t[3].y],o=fabric.util.array.min(s),a=fabric.util.array.max(s),c=Math.abs(o-a);return{left:n,top:o,width:r,height:c}},invertTransform:function(t){var e=1/(t[0]*t[3]-t[1]*t[2]),n=[e*t[3],-e*t[1],-e*t[2],e*t[0]],i=fabric.util.transformPoint({x:t[4],y:t[5]},n,!0);return n[4]=-i.x,n[5]=-i.y,n},toFixed:function(t,e){return parseFloat(Number(t).toFixed(e))},parseUnit:function(t,e){var n=/\D{0,2}$/.exec(t),i=parseFloat(t);switch(e||(e=fabric.Text.DEFAULT_SVG_FONT_SIZE),n[0]){case"mm":return i*fabric.DPI/25.4;case"cm":return i*fabric.DPI/2.54;case"in":return i*fabric.DPI;case"pt":return i*fabric.DPI/72;case"pc":return i*fabric.DPI/72*12;case"em":return i*e;default:return i}},falseFunction:function(){return!1},getKlass:function(t,e){return t=fabric.util.string.camelize(t.charAt(0).toUpperCase()+t.slice(1)),fabric.util.resolveNamespace(e)[t]},resolveNamespace:function(e){if(!e)return fabric;for(var n=e.split("."),i=n.length,r=t||fabric.window,s=0;s<i;++s)r=r[n[s]];return r},loadImage:function(t,e,n,i){if(!t)return void(e&&e.call(n,t));var r=fabric.util.createImage();r.onload=function(){e&&e.call(n,r),r=r.onload=r.onerror=null},r.onerror=function(){fabric.log("Error loading "+r.src),e&&e.call(n,null,!0),r=r.onload=r.onerror=null},0!==t.indexOf("data")&&i&&(r.crossOrigin=i),r.src=t},enlivenObjects:function(t,e,n,i){function r(){++o===a&&e&&e(s)}t=t||[];var s=[],o=0,a=t.length;return a?void t.forEach(function(t,e){if(!t||!t.type)return void r();var o=fabric.util.getKlass(t.type,n);o.async?o.fromObject(t,function(n,o){o||(s[e]=n,i&&i(t,s[e])),r()}):(s[e]=o.fromObject(t),i&&i(t,s[e]),r())}):void(e&&e(s))},groupSVGElements:function(t,e,n){var i;return i=new fabric.PathGroup(t,e),"undefined"!=typeof n&&i.setSourcePath(n),i},populateWithProperties:function(t,e,n){if(n&&"[object Array]"===Object.prototype.toString.call(n))for(var i=0,r=n.length;i<r;i++)n[i]in t&&(e[n[i]]=t[n[i]])},drawDashedLine:function(t,i,r,s,o,a){var c=s-i,l=o-r,u=e(c*c+l*l),h=n(l,c),f=a.length,d=0,p=!0;for(t.save(),t.translate(i,r),t.moveTo(0,0),t.rotate(h),i=0;u>i;)i+=a[d++%f],i>u&&(i=u),t[p?"lineTo":"moveTo"](i,0),p=!p;t.restore()},createCanvasElement:function(t){return t||(t=fabric.document.createElement("canvas")),t.getContext||"undefined"==typeof G_vmlCanvasManager||G_vmlCanvasManager.initElement(t),t},createImage:function(){return fabric.isLikelyNode?new(require("canvas").Image):fabric.document.createElement("img")},createAccessors:function(t){for(var e=t.prototype,n=e.stateProperties.length;n--;){var i=e.stateProperties[n],r=i.charAt(0).toUpperCase()+i.slice(1),s="set"+r,o="get"+r;e[o]||(e[o]=function(t){return new Function('return this.get("'+t+'")')}(i)),e[s]||(e[s]=function(t){return new Function("value",'return this.set("'+t+'", value)')}(i))}},clipContext:function(t,e){e.save(),e.beginPath(),t.clipTo(e),e.clip()},multiplyTransformMatrices:function(t,e,n){return[t[0]*e[0]+t[2]*e[1],t[1]*e[0]+t[3]*e[1],t[0]*e[2]+t[2]*e[3],t[1]*e[2]+t[3]*e[3],n?0:t[0]*e[4]+t[2]*e[5]+t[4],n?0:t[1]*e[4]+t[3]*e[5]+t[5]]},qrDecompose:function(t){var r=n(t[1],t[0]),o=i(t[0],2)+i(t[1],2),a=e(o),c=(t[0]*t[3]-t[2]*t[1])/a,l=n(t[0]*t[2]+t[1]*t[3],o);return{angle:r/s,scaleX:a,scaleY:c,skewX:l/s,skewY:0,translateX:t[4],translateY:t[5]}},customTransformMatrix:function(t,e,n){var i=[1,0,r(Math.tan(n*s)),1],o=[r(t),0,0,r(e)];return fabric.util.multiplyTransformMatrices(o,i,!0)},resetObjectTransform:function(t){t.scaleX=1,t.scaleY=1,t.skewX=0,t.skewY=0,t.flipX=!1,t.flipY=!1,t.setAngle(0)},getFunctionBody:function(t){return(String(t).match(/function[^{]*\{([\s\S]*)\}/)||{})[1]},isTransparent:function(t,e,n,i){i>0&&(e>i?e-=i:e=0,n>i?n-=i:n=0);for(var r=!0,s=t.getImageData(e,n,2*i||1,2*i||1),o=3,a=s.data.length;o<a;o+=4){var c=s.data[o];if(r=c<=0,r===!1)break}return s=null,r},parsePreserveAspectRatioAttribute:function(t){var e,n="meet",i="Mid",r="Mid",s=t.split(" ");return s&&s.length&&(n=s.pop(),"meet"!==n&&"slice"!==n?(e=n,n="meet"):s.length&&(e=s.pop())),i="none"!==e?e.slice(1,4):"none",r="none"!==e?e.slice(5,8):"none",{meetOrSlice:n,alignX:i,alignY:r}},clearFabricFontCache:function(t){t?fabric.charWidthsCache[t]&&delete fabric.charWidthsCache[t]:fabric.charWidthsCache={}}}}("undefined"!=typeof exports?exports:this),function(){function t(t,i,s,o,c,l,u){var h=a.call(arguments);if(r[h])return r[h];var f=Math.PI,d=u*f/180,p=Math.sin(d),g=Math.cos(d),v=0,m=0;s=Math.abs(s),o=Math.abs(o);var y=-g*t*.5-p*i*.5,b=-g*i*.5+p*t*.5,x=s*s,$=o*o,_=b*b,w=y*y,C=x*$-x*_-$*w,S=0;if(C<0){var T=Math.sqrt(1-C/(x*$));s*=T,o*=T}else S=(c===l?-1:1)*Math.sqrt(C/(x*_+$*w));var O=S*s*b/o,k=-S*o*y/s,A=g*O-p*k+.5*t,E=p*O+g*k+.5*i,j=n(1,0,(y-O)/s,(b-k)/o),M=n((y-O)/s,(b-k)/o,(-y-O)/s,(-b-k)/o);0===l&&M>0?M-=2*f:1===l&&M<0&&(M+=2*f);for(var D=Math.ceil(Math.abs(M/f*2)),P=[],I=M/D,L=8/3*Math.sin(I/4)*Math.sin(I/4)/Math.sin(I/2),R=j+I,F=0;F<D;F++)P[F]=e(j,R,g,p,s,o,A,E,L,v,m),v=P[F][4],m=P[F][5],j=R,R+=I;return r[h]=P,P}function e(t,e,n,i,r,o,c,l,u,h,f){var d=a.call(arguments);if(s[d])return s[d];var p=Math.cos(t),g=Math.sin(t),v=Math.cos(e),m=Math.sin(e),y=n*r*v-i*o*m+c,b=i*r*v+n*o*m+l,x=h+u*(-n*r*g-i*o*p),$=f+u*(-i*r*g+n*o*p),_=y+u*(n*r*m+i*o*v),w=b+u*(i*r*m-n*o*v);return s[d]=[x,$,_,w,y,b],s[d]}function n(t,e,n,i){var r=Math.atan2(e,t),s=Math.atan2(i,n);return s>=r?s-r:2*Math.PI-(r-s)}function i(t,e,n,i,r,s,c,l){var u=a.call(arguments);if(o[u])return o[u];var h,f,d,p,g,v,m,y,b=Math.sqrt,x=Math.min,$=Math.max,_=Math.abs,w=[],C=[[],[]];f=6*t-12*n+6*r,h=-3*t+9*n-9*r+3*c,d=3*n-3*t;for(var S=0;S<2;++S)if(S>0&&(f=6*e-12*i+6*s,h=-3*e+9*i-9*s+3*l,d=3*i-3*e),_(h)<1e-12){if(_(f)<1e-12)continue;p=-d/f,0<p&&p<1&&w.push(p)}else m=f*f-4*d*h,m<0||(y=b(m),g=(-f+y)/(2*h),0<g&&g<1&&w.push(g),v=(-f-y)/(2*h),0<v&&v<1&&w.push(v));for(var T,O,k,A=w.length,E=A;A--;)p=w[A],k=1-p,T=k*k*k*t+3*k*k*p*n+3*k*p*p*r+p*p*p*c,C[0][A]=T,O=k*k*k*e+3*k*k*p*i+3*k*p*p*s+p*p*p*l,C[1][A]=O;C[0][E]=t,C[1][E]=e,C[0][E+1]=c,C[1][E+1]=l;var j=[{x:x.apply(null,C[0]),y:x.apply(null,C[1])},{x:$.apply(null,C[0]),y:$.apply(null,C[1])}];return o[u]=j,j}var r={},s={},o={},a=Array.prototype.join;fabric.util.drawArc=function(e,n,i,r){for(var s=r[0],o=r[1],a=r[2],c=r[3],l=r[4],u=r[5],h=r[6],f=[[],[],[],[]],d=t(u-n,h-i,s,o,c,l,a),p=0,g=d.length;p<g;p++)f[p][0]=d[p][0]+n,f[p][1]=d[p][1]+i,f[p][2]=d[p][2]+n,f[p][3]=d[p][3]+i,f[p][4]=d[p][4]+n,f[p][5]=d[p][5]+i,e.bezierCurveTo.apply(e,f[p])},fabric.util.getBoundsOfArc=function(e,n,r,s,o,a,c,l,u){for(var h=0,f=0,d=[],p=[],g=t(l-e,u-n,r,s,a,c,o),v=[[],[]],m=0,y=g.length;m<y;m++)d=i(h,f,g[m][0],g[m][1],g[m][2],g[m][3],g[m][4],g[m][5]),v[0].x=d[0].x+e,v[0].y=d[0].y+n,v[1].x=d[1].x+e,v[1].y=d[1].y+n,p.push(v[0]),p.push(v[1]),h=g[m][4],f=g[m][5];return p},fabric.util.getBoundsOfCurve=i}(),function(){function t(t,e){for(var n=s.call(arguments,2),i=[],r=0,o=t.length;r<o;r++)i[r]=n.length?t[r][e].apply(t[r],n):t[r][e].call(t[r]);return i}function e(t,e){
return r(t,e,function(t,e){return t>=e})}function n(t,e){return r(t,e,function(t,e){return t<e})}function i(t,e){for(var n=t.length;n--;)t[n]=e;return t}function r(t,e,n){if(t&&0!==t.length){var i=t.length-1,r=e?t[i][e]:t[i];if(e)for(;i--;)n(t[i][e],r)&&(r=t[i][e]);else for(;i--;)n(t[i],r)&&(r=t[i]);return r}}var s=Array.prototype.slice;Array.prototype.indexOf||(Array.prototype.indexOf=function(t){if(void 0===this||null===this)throw new TypeError;var e=Object(this),n=e.length>>>0;if(0===n)return-1;var i=0;if(arguments.length>0&&(i=Number(arguments[1]),i!==i?i=0:0!==i&&i!==Number.POSITIVE_INFINITY&&i!==Number.NEGATIVE_INFINITY&&(i=(i>0||-1)*Math.floor(Math.abs(i)))),i>=n)return-1;for(var r=i>=0?i:Math.max(n-Math.abs(i),0);r<n;r++)if(r in e&&e[r]===t)return r;return-1}),Array.prototype.forEach||(Array.prototype.forEach=function(t,e){for(var n=0,i=this.length>>>0;n<i;n++)n in this&&t.call(e,this[n],n,this)}),Array.prototype.map||(Array.prototype.map=function(t,e){for(var n=[],i=0,r=this.length>>>0;i<r;i++)i in this&&(n[i]=t.call(e,this[i],i,this));return n}),Array.prototype.every||(Array.prototype.every=function(t,e){for(var n=0,i=this.length>>>0;n<i;n++)if(n in this&&!t.call(e,this[n],n,this))return!1;return!0}),Array.prototype.some||(Array.prototype.some=function(t,e){for(var n=0,i=this.length>>>0;n<i;n++)if(n in this&&t.call(e,this[n],n,this))return!0;return!1}),Array.prototype.filter||(Array.prototype.filter=function(t,e){for(var n,i=[],r=0,s=this.length>>>0;r<s;r++)r in this&&(n=this[r],t.call(e,n,r,this)&&i.push(n));return i}),Array.prototype.reduce||(Array.prototype.reduce=function(t){var e,n=this.length>>>0,i=0;if(arguments.length>1)e=arguments[1];else for(;;){if(i in this){e=this[i++];break}if(++i>=n)throw new TypeError}for(;i<n;i++)i in this&&(e=t.call(null,e,this[i],i,this));return e}),fabric.util.array={fill:i,invoke:t,min:n,max:e}}(),function(){function t(t,e){for(var n in e)t[n]=e[n];return t}function e(e){return t({},e)}fabric.util.object={extend:t,clone:e}}(),function(){function t(t){return t.replace(/-+(.)?/g,function(t,e){return e?e.toUpperCase():""})}function e(t,e){return t.charAt(0).toUpperCase()+(e?t.slice(1):t.slice(1).toLowerCase())}function n(t){return t.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&apos;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\xA0]+/,"").replace(/[\s\xA0]+$/,"")}),fabric.util.string={camelize:t,capitalize:e,escapeXml:n}}(),function(){var t=Array.prototype.slice,e=Function.prototype.apply,n=function(){};Function.prototype.bind||(Function.prototype.bind=function(i){var r,s=this,o=t.call(arguments,1);return r=o.length?function(){return e.call(s,this instanceof n?this:i,o.concat(t.call(arguments)))}:function(){return e.call(s,this instanceof n?this:i,arguments)},n.prototype=this.prototype,r.prototype=new n,r})}(),function(){function t(){}function e(t){var e=this.constructor.superclass.prototype[t];return arguments.length>1?e.apply(this,i.call(arguments,1)):e.call(this)}function n(){function n(){this.initialize.apply(this,arguments)}var s=null,a=i.call(arguments,0);"function"==typeof a[0]&&(s=a.shift()),n.superclass=s,n.subclasses=[],s&&(t.prototype=s.prototype,n.prototype=new t,s.subclasses.push(n));for(var c=0,l=a.length;c<l;c++)o(n,a[c],s);return n.prototype.initialize||(n.prototype.initialize=r),n.prototype.constructor=n,n.prototype.callSuper=e,n}var i=Array.prototype.slice,r=function(){},s=function(){for(var t in{toString:1})if("toString"===t)return!1;return!0}(),o=function(t,e,n){for(var i in e)i in t.prototype&&"function"==typeof t.prototype[i]&&(e[i]+"").indexOf("callSuper")>-1?t.prototype[i]=function(t){return function(){var i=this.constructor.superclass;this.constructor.superclass=n;var r=e[t].apply(this,arguments);if(this.constructor.superclass=i,"initialize"!==t)return r}}(i):t.prototype[i]=e[i],s&&(e.toString!==Object.prototype.toString&&(t.prototype.toString=e.toString),e.valueOf!==Object.prototype.valueOf&&(t.prototype.valueOf=e.valueOf))};fabric.util.createClass=n}(),function(){function t(t){var e,n,i=Array.prototype.slice.call(arguments,1),r=i.length;for(n=0;n<r;n++)if(e=typeof t[i[n]],!/^(?:function|object|unknown)$/.test(e))return!1;return!0}function e(t,e){return{handler:e,wrappedHandler:n(t,e)}}function n(t,e){return function(n){e.call(o(t),n||fabric.window.event)}}function i(t,e){return function(n){if(g[t]&&g[t][e])for(var i=g[t][e],r=0,s=i.length;r<s;r++)i[r].call(this,n||fabric.window.event)}}function r(t){t||(t=fabric.window.event);var e=t.target||(typeof t.srcElement!==c?t.srcElement:null),n=fabric.util.getScrollLeftTop(e);return{x:v(t)+n.left,y:m(t)+n.top}}function s(t,e,n){var i="touchend"===t.type?"changedTouches":"touches";return t[i]&&t[i][0]?t[i][0][e]-(t[i][0][e]-t[i][0][n])||t[n]:t[n]}var o,a,c="unknown",l=function(){var t=0;return function(e){return e.__uniqueID||(e.__uniqueID="uniqueID__"+t++)}}();!function(){var t={};o=function(e){return t[e]},a=function(e,n){t[e]=n}}();var u,h,f=t(fabric.document.documentElement,"addEventListener","removeEventListener")&&t(fabric.window,"addEventListener","removeEventListener"),d=t(fabric.document.documentElement,"attachEvent","detachEvent")&&t(fabric.window,"attachEvent","detachEvent"),p={},g={};f?(u=function(t,e,n){t.addEventListener(e,n,!1)},h=function(t,e,n){t.removeEventListener(e,n,!1)}):d?(u=function(t,n,i){var r=l(t);a(r,t),p[r]||(p[r]={}),p[r][n]||(p[r][n]=[]);var s=e(r,i);p[r][n].push(s),t.attachEvent("on"+n,s.wrappedHandler)},h=function(t,e,n){var i,r=l(t);if(p[r]&&p[r][e])for(var s=0,o=p[r][e].length;s<o;s++)i=p[r][e][s],i&&i.handler===n&&(t.detachEvent("on"+e,i.wrappedHandler),p[r][e][s]=null)}):(u=function(t,e,n){var r=l(t);if(g[r]||(g[r]={}),!g[r][e]){g[r][e]=[];var s=t["on"+e];s&&g[r][e].push(s),t["on"+e]=i(r,e)}g[r][e].push(n)},h=function(t,e,n){var i=l(t);if(g[i]&&g[i][e])for(var r=g[i][e],s=0,o=r.length;s<o;s++)r[s]===n&&r.splice(s,1)}),fabric.util.addListener=u,fabric.util.removeListener=h;var v=function(t){return typeof t.clientX!==c?t.clientX:0},m=function(t){return typeof t.clientY!==c?t.clientY:0};fabric.isTouchSupported&&(v=function(t){return s(t,"pageX","clientX")},m=function(t){return s(t,"pageY","clientY")}),fabric.util.getPointer=r,fabric.util.object.extend(fabric.util,fabric.Observable)}(),function(){function t(t,e){var n=t.style;if(!n)return t;if("string"==typeof e)return t.style.cssText+=";"+e,e.indexOf("opacity")>-1?s(t,e.match(/opacity:\s*(\d?\.?\d*)/)[1]):t;for(var i in e)if("opacity"===i)s(t,e[i]);else{var r="float"===i||"cssFloat"===i?"undefined"==typeof n.styleFloat?"cssFloat":"styleFloat":i;n[r]=e[i]}return t}var e=fabric.document.createElement("div"),n="string"==typeof e.style.opacity,i="string"==typeof e.style.filter,r=/alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/,s=function(t){return t};n?s=function(t,e){return t.style.opacity=e,t}:i&&(s=function(t,e){var n=t.style;return t.currentStyle&&!t.currentStyle.hasLayout&&(n.zoom=1),r.test(n.filter)?(e=e>=.9999?"":"alpha(opacity="+100*e+")",n.filter=n.filter.replace(r,e)):n.filter+=" alpha(opacity="+100*e+")",t}),fabric.util.setStyle=t}(),function(){function t(t){return"string"==typeof t?fabric.document.getElementById(t):t}function e(t,e){var n=fabric.document.createElement(t);for(var i in e)"class"===i?n.className=e[i]:"for"===i?n.htmlFor=e[i]:n.setAttribute(i,e[i]);return n}function n(t,e){t&&(" "+t.className+" ").indexOf(" "+e+" ")===-1&&(t.className+=(t.className?" ":"")+e)}function i(t,n,i){return"string"==typeof n&&(n=e(n,i)),t.parentNode&&t.parentNode.replaceChild(n,t),n.appendChild(t),n}function r(t){for(var e=0,n=0,i=fabric.document.documentElement,r=fabric.document.body||{scrollLeft:0,scrollTop:0};t&&(t.parentNode||t.host)&&(t=t.parentNode||t.host,t===fabric.document?(e=r.scrollLeft||i.scrollLeft||0,n=r.scrollTop||i.scrollTop||0):(e+=t.scrollLeft||0,n+=t.scrollTop||0),1!==t.nodeType||"fixed"!==fabric.util.getElementStyle(t,"position")););return{left:e,top:n}}function s(t){var e,n,i=t&&t.ownerDocument,s={left:0,top:0},o={left:0,top:0},a={borderLeftWidth:"left",borderTopWidth:"top",paddingLeft:"left",paddingTop:"top"};if(!i)return o;for(var c in a)o[a[c]]+=parseInt(u(t,c),10)||0;return e=i.documentElement,"undefined"!=typeof t.getBoundingClientRect&&(s=t.getBoundingClientRect()),n=r(t),{left:s.left+n.left-(e.clientLeft||0)+o.left,top:s.top+n.top-(e.clientTop||0)+o.top}}var o,a=Array.prototype.slice,c=function(t){return a.call(t,0)};try{o=c(fabric.document.childNodes)instanceof Array}catch(l){}o||(c=function(t){for(var e=new Array(t.length),n=t.length;n--;)e[n]=t[n];return e});var u;u=fabric.document.defaultView&&fabric.document.defaultView.getComputedStyle?function(t,e){var n=fabric.document.defaultView.getComputedStyle(t,null);return n?n[e]:void 0}:function(t,e){var n=t.style[e];return!n&&t.currentStyle&&(n=t.currentStyle[e]),n},function(){function t(t){return"undefined"!=typeof t.onselectstart&&(t.onselectstart=fabric.util.falseFunction),i?t.style[i]="none":"string"==typeof t.unselectable&&(t.unselectable="on"),t}function e(t){return"undefined"!=typeof t.onselectstart&&(t.onselectstart=null),i?t.style[i]="":"string"==typeof t.unselectable&&(t.unselectable=""),t}var n=fabric.document.documentElement.style,i="userSelect"in n?"userSelect":"MozUserSelect"in n?"MozUserSelect":"WebkitUserSelect"in n?"WebkitUserSelect":"KhtmlUserSelect"in n?"KhtmlUserSelect":"";fabric.util.makeElementUnselectable=t,fabric.util.makeElementSelectable=e}(),function(){function t(t,e){var n=fabric.document.getElementsByTagName("head")[0],i=fabric.document.createElement("script"),r=!0;i.onload=i.onreadystatechange=function(t){if(r){if("string"==typeof this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)return;r=!1,e(t||fabric.window.event),i=i.onload=i.onreadystatechange=null}},i.src=t,n.appendChild(i)}fabric.util.getScript=t}(),fabric.util.getById=t,fabric.util.toArray=c,fabric.util.makeElement=e,fabric.util.addClass=n,fabric.util.wrapElement=i,fabric.util.getScrollLeftTop=r,fabric.util.getElementOffset=s,fabric.util.getElementStyle=u}(),function(){function t(t,e){return t+(/\?/.test(t)?"&":"?")+e}function e(){}function n(n,r){r||(r={});var s=r.method?r.method.toUpperCase():"GET",o=r.onComplete||function(){},a=i(),c=r.body||r.parameters;return a.onreadystatechange=function(){4===a.readyState&&(o(a),a.onreadystatechange=e)},"GET"===s&&(c=null,"string"==typeof r.parameters&&(n=t(n,r.parameters))),a.open(s,n,!0),"POST"!==s&&"PUT"!==s||a.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),a.send(c),a}var i=function(){for(var t=[function(){return new ActiveXObject("Microsoft.XMLHTTP")},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml2.XMLHTTP.3.0")},function(){return new XMLHttpRequest}],e=t.length;e--;)try{var n=t[e]();if(n)return t[e]}catch(i){}}();fabric.util.request=n}(),fabric.log=function(){},fabric.warn=function(){},"undefined"!=typeof console&&["log","warn"].forEach(function(t){"undefined"!=typeof console[t]&&"function"==typeof console[t].apply&&(fabric[t]=function(){return console[t].apply(console,arguments)})}),function(){function t(t){e(function(n){t||(t={});var i,r=n||+new Date,s=t.duration||500,o=r+s,a=t.onChange||function(){},c=t.abort||function(){return!1},l=t.easing||function(t,e,n,i){return-n*Math.cos(t/i*(Math.PI/2))+n+e},u="startValue"in t?t.startValue:0,h="endValue"in t?t.endValue:100,f=t.byValue||h-u;t.onStart&&t.onStart(),function d(n){i=n||+new Date;var h=i>o?s:i-r;return c()?void(t.onComplete&&t.onComplete()):(a(l(h,u,f,s)),i>o?void(t.onComplete&&t.onComplete()):void e(d))}(r)})}function e(){return n.apply(fabric.window,arguments)}var n=fabric.window.requestAnimationFrame||fabric.window.webkitRequestAnimationFrame||fabric.window.mozRequestAnimationFrame||fabric.window.oRequestAnimationFrame||fabric.window.msRequestAnimationFrame||function(t){fabric.window.setTimeout(t,1e3/60)};fabric.util.animate=t,fabric.util.requestAnimFrame=e}(),function(){function t(t,e,n,i){return t<Math.abs(e)?(t=e,i=n/4):i=0===e&&0===t?n/(2*Math.PI)*Math.asin(1):n/(2*Math.PI)*Math.asin(e/t),{a:t,c:e,p:n,s:i}}function e(t,e,n){return t.a*Math.pow(2,10*(e-=1))*Math.sin((e*n-t.s)*(2*Math.PI)/t.p)}function n(t,e,n,i){return n*((t=t/i-1)*t*t+1)+e}function i(t,e,n,i){return t/=i/2,t<1?n/2*t*t*t+e:n/2*((t-=2)*t*t+2)+e}function r(t,e,n,i){return n*(t/=i)*t*t*t+e}function s(t,e,n,i){return-n*((t=t/i-1)*t*t*t-1)+e}function o(t,e,n,i){return t/=i/2,t<1?n/2*t*t*t*t+e:-n/2*((t-=2)*t*t*t-2)+e}function a(t,e,n,i){return n*(t/=i)*t*t*t*t+e}function c(t,e,n,i){return n*((t=t/i-1)*t*t*t*t+1)+e}function l(t,e,n,i){return t/=i/2,t<1?n/2*t*t*t*t*t+e:n/2*((t-=2)*t*t*t*t+2)+e}function u(t,e,n,i){return-n*Math.cos(t/i*(Math.PI/2))+n+e}function h(t,e,n,i){return n*Math.sin(t/i*(Math.PI/2))+e}function f(t,e,n,i){return-n/2*(Math.cos(Math.PI*t/i)-1)+e}function d(t,e,n,i){return 0===t?e:n*Math.pow(2,10*(t/i-1))+e}function p(t,e,n,i){return t===i?e+n:n*(-Math.pow(2,-10*t/i)+1)+e}function g(t,e,n,i){return 0===t?e:t===i?e+n:(t/=i/2,t<1?n/2*Math.pow(2,10*(t-1))+e:n/2*(-Math.pow(2,-10*--t)+2)+e)}function v(t,e,n,i){return-n*(Math.sqrt(1-(t/=i)*t)-1)+e}function m(t,e,n,i){return n*Math.sqrt(1-(t=t/i-1)*t)+e}function y(t,e,n,i){return t/=i/2,t<1?-n/2*(Math.sqrt(1-t*t)-1)+e:n/2*(Math.sqrt(1-(t-=2)*t)+1)+e}function b(n,i,r,s){var o=1.70158,a=0,c=r;if(0===n)return i;if(n/=s,1===n)return i+r;a||(a=.3*s);var l=t(c,r,a,o);return-e(l,n,s)+i}function x(e,n,i,r){var s=1.70158,o=0,a=i;if(0===e)return n;if(e/=r,1===e)return n+i;o||(o=.3*r);var c=t(a,i,o,s);return c.a*Math.pow(2,-10*e)*Math.sin((e*r-c.s)*(2*Math.PI)/c.p)+c.c+n}function $(n,i,r,s){var o=1.70158,a=0,c=r;if(0===n)return i;if(n/=s/2,2===n)return i+r;a||(a=s*(.3*1.5));var l=t(c,r,a,o);return n<1?-.5*e(l,n,s)+i:l.a*Math.pow(2,-10*(n-=1))*Math.sin((n*s-l.s)*(2*Math.PI)/l.p)*.5+l.c+i}function _(t,e,n,i,r){return void 0===r&&(r=1.70158),n*(t/=i)*t*((r+1)*t-r)+e}function w(t,e,n,i,r){return void 0===r&&(r=1.70158),n*((t=t/i-1)*t*((r+1)*t+r)+1)+e}function C(t,e,n,i,r){return void 0===r&&(r=1.70158),t/=i/2,t<1?n/2*(t*t*(((r*=1.525)+1)*t-r))+e:n/2*((t-=2)*t*(((r*=1.525)+1)*t+r)+2)+e}function S(t,e,n,i){return n-T(i-t,0,n,i)+e}function T(t,e,n,i){return(t/=i)<1/2.75?n*(7.5625*t*t)+e:t<2/2.75?n*(7.5625*(t-=1.5/2.75)*t+.75)+e:t<2.5/2.75?n*(7.5625*(t-=2.25/2.75)*t+.9375)+e:n*(7.5625*(t-=2.625/2.75)*t+.984375)+e}function O(t,e,n,i){return t<i/2?.5*S(2*t,0,n,i)+e:.5*T(2*t-i,0,n,i)+.5*n+e}fabric.util.ease={easeInQuad:function(t,e,n,i){return n*(t/=i)*t+e},easeOutQuad:function(t,e,n,i){return-n*(t/=i)*(t-2)+e},easeInOutQuad:function(t,e,n,i){return t/=i/2,t<1?n/2*t*t+e:-n/2*(--t*(t-2)-1)+e},easeInCubic:function(t,e,n,i){return n*(t/=i)*t*t+e},easeOutCubic:n,easeInOutCubic:i,easeInQuart:r,easeOutQuart:s,easeInOutQuart:o,easeInQuint:a,easeOutQuint:c,easeInOutQuint:l,easeInSine:u,easeOutSine:h,easeInOutSine:f,easeInExpo:d,easeOutExpo:p,easeInOutExpo:g,easeInCirc:v,easeOutCirc:m,easeInOutCirc:y,easeInElastic:b,easeOutElastic:x,easeInOutElastic:$,easeInBack:_,easeOutBack:w,easeInOutBack:C,easeInBounce:S,easeOutBounce:T,easeInOutBounce:O}}(),function(t){"use strict";function e(t){return t in O?O[t]:t}function n(t,e,n,i){var r,s="[object Array]"===Object.prototype.toString.call(e);return"fill"!==t&&"stroke"!==t||"none"!==e?"strokeDashArray"===t?e=e.replace(/,/g," ").split(/\s+/).map(function(t){return parseFloat(t)}):"transformMatrix"===t?e=n&&n.transformMatrix?_(n.transformMatrix,v.parseTransformAttribute(e)):v.parseTransformAttribute(e):"visible"===t?(e="none"!==e&&"hidden"!==e,n&&n.visible===!1&&(e=!1)):"originX"===t?e="start"===e?"left":"end"===e?"right":"center":r=s?e.map($):$(e,i):e="",!s&&isNaN(r)?e:r}function i(t){for(var e in k)if("undefined"!=typeof t[k[e]]&&""!==t[e]){if("undefined"==typeof t[e]){if(!v.Object.prototype[e])continue;t[e]=v.Object.prototype[e]}if(0!==t[e].indexOf("url(")){var n=new v.Color(t[e]);t[e]=n.setAlpha(x(n.getAlpha()*t[k[e]],2)).toRgba()}}return t}function r(t,e){for(var n,i,r=[],s=0;s<e.length;s++)n=e[s],i=t.getElementsByTagName(n),r=r.concat(Array.prototype.slice.call(i));return r}function s(t,i){var r,s;t.replace(/;\s*$/,"").split(";").forEach(function(t){var o=t.split(":");r=e(o[0].trim().toLowerCase()),s=n(r,o[1].trim()),i[r]=s})}function o(t,i){var r,s;for(var o in t)"undefined"!=typeof t[o]&&(r=e(o.toLowerCase()),s=n(r,t[o]),i[r]=s)}function a(t,e){var n={};for(var i in v.cssRules[e])if(c(t,i.split(" ")))for(var r in v.cssRules[e][i])n[r]=v.cssRules[e][i][r];return n}function c(t,e){var n,i=!0;return n=u(t,e.pop()),n&&e.length&&(i=l(t,e)),n&&i&&0===e.length}function l(t,e){for(var n,i=!0;t.parentNode&&1===t.parentNode.nodeType&&e.length;)i&&(n=e.pop()),t=t.parentNode,i=u(t,n);return 0===e.length}function u(t,e){var n,i=t.nodeName,r=t.getAttribute("class"),s=t.getAttribute("id");if(n=new RegExp("^"+i,"i"),e=e.replace(n,""),s&&e.length&&(n=new RegExp("#"+s+"(?![a-zA-Z\\-]+)","i"),e=e.replace(n,"")),r&&e.length){r=r.split(" ");for(var o=r.length;o--;)n=new RegExp("\\."+r[o]+"(?![a-zA-Z\\-]+)","i"),e=e.replace(n,"")}return 0===e.length}function h(t,e){var n;if(t.getElementById&&(n=t.getElementById(e)),n)return n;var i,r,s=t.getElementsByTagName("*");for(r=0;r<s.length;r++)if(i=s[r],e===i.getAttribute("id"))return i}function f(t){for(var e=r(t,["use","svg:use"]),n=0;e.length&&n<e.length;){var i,s,o,a,c,l=e[n],u=l.getAttribute("xlink:href").substr(1),f=l.getAttribute("x")||0,p=l.getAttribute("y")||0,g=h(t,u).cloneNode(!0),v=(g.getAttribute("transform")||"")+" translate("+f+", "+p+")",m=e.length;if(d(g),/^svg$/i.test(g.nodeName)){var y=g.ownerDocument.createElement("g");for(o=0,a=g.attributes,c=a.length;o<c;o++)s=a.item(o),y.setAttribute(s.nodeName,s.nodeValue);for(;null!=g.firstChild;)y.appendChild(g.firstChild);g=y}for(o=0,a=l.attributes,c=a.length;o<c;o++)s=a.item(o),"x"!==s.nodeName&&"y"!==s.nodeName&&"xlink:href"!==s.nodeName&&("transform"===s.nodeName?v=s.nodeValue+" "+v:g.setAttribute(s.nodeName,s.nodeValue));g.setAttribute("transform",v),g.setAttribute("instantiated_by_use","1"),g.removeAttribute("id"),i=l.parentNode,i.replaceChild(g,l),e.length===m&&n++}}function d(t){var e,n,i,r,s=t.getAttribute("viewBox"),o=1,a=1,c=0,l=0,u=t.getAttribute("width"),h=t.getAttribute("height"),f=t.getAttribute("x")||0,d=t.getAttribute("y")||0,p=t.getAttribute("preserveAspectRatio")||"",g=!s||!C.test(t.nodeName)||!(s=s.match(A)),m=!u||!h||"100%"===u||"100%"===h,y=g&&m,b={},x="";if(b.width=0,b.height=0,b.toBeParsed=y,y)return b;if(g)return b.width=$(u),b.height=$(h),b;if(c=-parseFloat(s[1]),l=-parseFloat(s[2]),e=parseFloat(s[3]),n=parseFloat(s[4]),m?(b.width=e,b.height=n):(b.width=$(u),b.height=$(h),o=b.width/e,a=b.height/n),p=v.util.parsePreserveAspectRatioAttribute(p),"none"!==p.alignX&&(a=o=o>a?a:o),1===o&&1===a&&0===c&&0===l&&0===f&&0===d)return b;if((f||d)&&(x=" translate("+$(f)+" "+$(d)+") "),i=x+" matrix("+o+" 0 0 "+a+" "+c*o+" "+l*a+") ","svg"===t.nodeName){for(r=t.ownerDocument.createElement("g");null!=t.firstChild;)r.appendChild(t.firstChild);t.appendChild(r)}else r=t,i=r.getAttribute("transform")+i;return r.setAttribute("transform",i),b}function p(t){var e=t.objects,n=t.options;return e=e.map(function(t){return v[y(t.type)].fromObject(t)}),{objects:e,options:n}}function g(t,e,n){e[n]&&e[n].toSVG&&t.push('\t<pattern x="0" y="0" id="',n,'Pattern" ','width="',e[n].source.width,'" height="',e[n].source.height,'" patternUnits="userSpaceOnUse">\n','\t\t<image x="0" y="0" ','width="',e[n].source.width,'" height="',e[n].source.height,'" xlink:href="',e[n].source.src,'"></image>\n\t</pattern>\n')}var v=t.fabric||(t.fabric={}),m=v.util.object.extend,y=v.util.string.capitalize,b=v.util.object.clone,x=v.util.toFixed,$=v.util.parseUnit,_=v.util.multiplyTransformMatrices,w=/^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,C=/^(symbol|image|marker|pattern|view|svg)$/i,S=/^(?:pattern|defs|symbol|metadata)$/i,T=/^(symbol|g|a|svg)$/i,O={cx:"left",x:"left",r:"radius",cy:"top",y:"top",display:"visible",visibility:"visible",transform:"transformMatrix","fill-opacity":"fillOpacity","fill-rule":"fillRule","font-family":"fontFamily","font-size":"fontSize","font-style":"fontStyle","font-weight":"fontWeight","stroke-dasharray":"strokeDashArray","stroke-linecap":"strokeLineCap","stroke-linejoin":"strokeLineJoin","stroke-miterlimit":"strokeMiterLimit","stroke-opacity":"strokeOpacity","stroke-width":"strokeWidth","text-decoration":"textDecoration","text-anchor":"originX"},k={stroke:"strokeOpacity",fill:"fillOpacity"};v.cssRules={},v.gradientDefs={},v.parseTransformAttribute=function(){function t(t,e){var n=e[0],i=3===e.length?e[1]:0,r=3===e.length?e[2]:0;t[0]=Math.cos(n),t[1]=Math.sin(n),t[2]=-Math.sin(n),t[3]=Math.cos(n),t[4]=i-(t[0]*i+t[2]*r),t[5]=r-(t[1]*i+t[3]*r)}function e(t,e){var n=e[0],i=2===e.length?e[1]:e[0];t[0]=n,t[3]=i}function n(t,e){t[2]=Math.tan(v.util.degreesToRadians(e[0]))}function i(t,e){t[1]=Math.tan(v.util.degreesToRadians(e[0]))}function r(t,e){t[4]=e[0],2===e.length&&(t[5]=e[1])}var s=[1,0,0,1,0,0],o=v.reNum,a="(?:\\s+,?\\s*|,\\s*)",c="(?:(skewX)\\s*\\(\\s*("+o+")\\s*\\))",l="(?:(skewY)\\s*\\(\\s*("+o+")\\s*\\))",u="(?:(rotate)\\s*\\(\\s*("+o+")(?:"+a+"("+o+")"+a+"("+o+"))?\\s*\\))",h="(?:(scale)\\s*\\(\\s*("+o+")(?:"+a+"("+o+"))?\\s*\\))",f="(?:(translate)\\s*\\(\\s*("+o+")(?:"+a+"("+o+"))?\\s*\\))",d="(?:(matrix)\\s*\\(\\s*("+o+")"+a+"("+o+")"+a+"("+o+")"+a+"("+o+")"+a+"("+o+")"+a+"("+o+")\\s*\\))",p="(?:"+d+"|"+f+"|"+h+"|"+u+"|"+c+"|"+l+")",g="(?:"+p+"(?:"+a+"*"+p+")*)",m="^\\s*(?:"+g+"?)\\s*$",y=new RegExp(m),b=new RegExp(p,"g");return function(o){var a=s.concat(),c=[];if(!o||o&&!y.test(o))return a;o.replace(b,function(o){var l=new RegExp(p).exec(o).filter(function(t){return""!==t&&null!=t}),u=l[1],h=l.slice(2).map(parseFloat);switch(u){case"translate":r(a,h);break;case"rotate":h[0]=v.util.degreesToRadians(h[0]),t(a,h);break;case"scale":e(a,h);break;case"skewX":n(a,h);break;case"skewY":i(a,h);break;case"matrix":a=h}c.push(a.concat()),a=s.concat()});for(var l=c[0];c.length>1;)c.shift(),l=v.util.multiplyTransformMatrices(l,c[0]);return l}}();var A=new RegExp("^\\s*("+v.reNum+"+)\\s*,?\\s*("+v.reNum+"+)\\s*,?\\s*("+v.reNum+"+)\\s*,?\\s*("+v.reNum+"+)\\s*$");v.parseSVGDocument=function(){function t(t,e){for(;t&&(t=t.parentNode);)if(t.nodeName&&e.test(t.nodeName.replace("svg:",""))&&!t.getAttribute("instantiated_by_use"))return!0;return!1}return function(e,n,i){if(e){f(e);var r=new Date,s=v.Object.__uid++,o=d(e),a=v.util.toArray(e.getElementsByTagName("*"));if(o.svgUid=s,0===a.length&&v.isLikelyNode){a=e.selectNodes('//*[name(.)!="svg"]');for(var c=[],l=0,u=a.length;l<u;l++)c[l]=a[l];a=c}var h=a.filter(function(e){return d(e),w.test(e.nodeName.replace("svg:",""))&&!t(e,S)});if(!h||h&&!h.length)return void(n&&n([],{}));v.gradientDefs[s]=v.getGradientDefs(e),v.cssRules[s]=v.getCSSRules(e),v.parseElements(h,function(t){v.documentParsingTime=new Date-r,n&&n(t,o)},b(o),i)}}}();var E={has:function(t,e){e(!1)},get:function(){},set:function(){}},j=new RegExp("(normal|italic)?\\s*(normal|small-caps)?\\s*(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\s*("+v.reNum+"(?:px|cm|mm|em|pt|pc|in)*)(?:\\/(normal|"+v.reNum+"))?\\s+(.*)");m(v,{parseFontDeclaration:function(t,e){var n=t.match(j);if(n){var i=n[1],r=n[3],s=n[4],o=n[5],a=n[6];i&&(e.fontStyle=i),r&&(e.fontWeight=isNaN(parseFloat(r))?r:parseFloat(r)),s&&(e.fontSize=$(s)),a&&(e.fontFamily=a),o&&(e.lineHeight="normal"===o?1:o)}},getGradientDefs:function(t){var e,n,i,s=["linearGradient","radialGradient","svg:linearGradient","svg:radialGradient"],o=r(t,s),a=0,c={},l={};for(a=o.length;a--;)e=o[a],i=e.getAttribute("xlink:href"),n=e.getAttribute("id"),i&&(l[n]=i.substr(1)),c[n]=e;for(n in l){var u=c[l[n]].cloneNode(!0);for(e=c[n];u.firstChild;)e.appendChild(u.firstChild)}return c},parseAttributes:function(t,r,s){if(t){var o,c,l={};"undefined"==typeof s&&(s=t.getAttribute("svgUid")),t.parentNode&&T.test(t.parentNode.nodeName)&&(l=v.parseAttributes(t.parentNode,r,s)),c=l&&l.fontSize||t.getAttribute("font-size")||v.Text.DEFAULT_SVG_FONT_SIZE;var u=r.reduce(function(i,r){return o=t.getAttribute(r),o&&(r=e(r),o=n(r,o,l,c),i[r]=o),i},{});return u=m(u,m(a(t,s),v.parseStyleAttribute(t))),u.font&&v.parseFontDeclaration(u.font,u),i(m(l,u))}},parseElements:function(t,e,n,i){new v.ElementsParser(t,e,n,i).parse()},parseStyleAttribute:function(t){var e={},n=t.getAttribute("style");return n?("string"==typeof n?s(n,e):o(n,e),e):e},parsePointsAttribute:function(t){if(!t)return null;t=t.replace(/,/g," ").trim(),t=t.split(/\s+/);var e,n,i=[];for(e=0,n=t.length;e<n;e+=2)i.push({x:parseFloat(t[e]),y:parseFloat(t[e+1])});return i},getCSSRules:function(t){for(var i,r=t.getElementsByTagName("style"),s={},o=0,a=r.length;o<a;o++){var c=r[o].textContent||r[o].text;c=c.replace(/\/\*[\s\S]*?\*\//g,""),""!==c.trim()&&(i=c.match(/[^{]*\{[\s\S]*?\}/g),i=i.map(function(t){return t.trim()}),i.forEach(function(t){for(var i=t.match(/([\s\S]*?)\s*\{([^}]*)\}/),r={},o=i[2].trim(),a=o.replace(/;$/,"").split(/\s*;\s*/),c=0,l=a.length;c<l;c++){var u=a[c].split(/\s*:\s*/),h=e(u[0]),f=n(h,u[1],u[0]);r[h]=f}t=i[1],t.split(",").forEach(function(t){t=t.replace(/^svg/i,"").trim(),""!==t&&(s[t]?v.util.object.extend(s[t],r):s[t]=v.util.object.clone(r))})}))}return s},loadSVGFromURL:function(t,e,n){function i(i){var r=i.responseXML;r&&!r.documentElement&&v.window.ActiveXObject&&i.responseText&&(r=new ActiveXObject("Microsoft.XMLDOM"),r.async="false",r.loadXML(i.responseText.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i,""))),r&&r.documentElement||e&&e(null),v.parseSVGDocument(r.documentElement,function(n,i){E.set(t,{objects:v.util.array.invoke(n,"toObject"),options:i}),e&&e(n,i)},n)}t=t.replace(/^\n\s*/,"").trim(),E.has(t,function(n){n?E.get(t,function(t){var n=p(t);e(n.objects,n.options)}):new v.util.request(t,{method:"get",onComplete:i})})},loadSVGFromString:function(t,e,n){t=t.trim();var i;if("undefined"!=typeof DOMParser){var r=new DOMParser;r&&r.parseFromString&&(i=r.parseFromString(t,"text/xml"))}else v.window.ActiveXObject&&(i=new ActiveXObject("Microsoft.XMLDOM"),i.async="false",i.loadXML(t.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i,"")));v.parseSVGDocument(i.documentElement,function(t,n){e(t,n)},n)},createSVGFontFacesMarkup:function(t){for(var e,n,i,r,s,o,a,c="",l={},u=v.fontPaths,h=0,f=t.length;h<f;h++)if(e=t[h],n=e.fontFamily,e.type.indexOf("text")!==-1&&!l[n]&&u[n]&&(l[n]=!0,e.styles)){i=e.styles;for(s in i){r=i[s];for(a in r)o=r[a],n=o.fontFamily,!l[n]&&u[n]&&(l[n]=!0)}}for(var d in l)c+=["\t\t@font-face {\n","\t\t\tfont-family: '",d,"';\n","\t\t\tsrc: url('",u[d],"');\n","\t\t}\n"].join("");return c&&(c=['\t<style type="text/css">',"<![CDATA[\n",c,"]]>","</style>\n"].join("")),c},createSVGRefElementsMarkup:function(t){var e=[];return g(e,t,"backgroundColor"),g(e,t,"overlayColor"),e.join("")}})}("undefined"!=typeof exports?exports:this),fabric.ElementsParser=function(t,e,n,i){this.elements=t,this.callback=e,this.options=n,this.reviver=i,this.svgUid=n&&n.svgUid||0},fabric.ElementsParser.prototype.parse=function(){this.instances=new Array(this.elements.length),this.numElements=this.elements.length,this.createObjects()},fabric.ElementsParser.prototype.createObjects=function(){for(var t=0,e=this.elements.length;t<e;t++)this.elements[t].setAttribute("svgUid",this.svgUid),function(t,e){setTimeout(function(){t.createObject(t.elements[e],e)},0)}(this,t)},fabric.ElementsParser.prototype.createObject=function(t,e){var n=fabric[fabric.util.string.capitalize(t.tagName.replace("svg:",""))];if(n&&n.fromElement)try{this._createObject(n,t,e)}catch(i){fabric.log(i)}else this.checkIfDone()},fabric.ElementsParser.prototype._createObject=function(t,e,n){if(t.async)t.fromElement(e,this.createCallback(n,e),this.options);else{var i=t.fromElement(e,this.options);this.resolveGradient(i,"fill"),this.resolveGradient(i,"stroke"),this.reviver&&this.reviver(e,i),this.instances[n]=i,this.checkIfDone()}},fabric.ElementsParser.prototype.createCallback=function(t,e){var n=this;return function(i){n.resolveGradient(i,"fill"),n.resolveGradient(i,"stroke"),n.reviver&&n.reviver(e,i),n.instances[t]=i,n.checkIfDone()}},fabric.ElementsParser.prototype.resolveGradient=function(t,e){var n=t.get(e);if(/^url\(/.test(n)){var i=n.slice(5,n.length-1);fabric.gradientDefs[this.svgUid][i]&&t.set(e,fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][i],t))}},fabric.ElementsParser.prototype.checkIfDone=function(){0===--this.numElements&&(this.instances=this.instances.filter(function(t){return null!=t}),this.callback(this.instances))},function(t){"use strict";function e(t,e){this.x=t,this.y=e}var n=t.fabric||(t.fabric={});return n.Point?void n.warn("fabric.Point is already defined"):(n.Point=e,void(e.prototype={type:"point",constructor:e,add:function(t){return new e(this.x+t.x,this.y+t.y)},addEquals:function(t){return this.x+=t.x,this.y+=t.y,this},scalarAdd:function(t){return new e(this.x+t,this.y+t)},scalarAddEquals:function(t){return this.x+=t,this.y+=t,this},subtract:function(t){return new e(this.x-t.x,this.y-t.y)},subtractEquals:function(t){return this.x-=t.x,this.y-=t.y,this},scalarSubtract:function(t){return new e(this.x-t,this.y-t)},scalarSubtractEquals:function(t){return this.x-=t,this.y-=t,this},multiply:function(t){return new e(this.x*t,this.y*t)},multiplyEquals:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return new e(this.x/t,this.y/t)},divideEquals:function(t){return this.x/=t,this.y/=t,this},eq:function(t){return this.x===t.x&&this.y===t.y},lt:function(t){return this.x<t.x&&this.y<t.y},lte:function(t){return this.x<=t.x&&this.y<=t.y},gt:function(t){return this.x>t.x&&this.y>t.y},gte:function(t){return this.x>=t.x&&this.y>=t.y},lerp:function(t,n){return"undefined"==typeof n&&(n=.5),n=Math.max(Math.min(1,n),0),new e(this.x+(t.x-this.x)*n,this.y+(t.y-this.y)*n)},distanceFrom:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},midPointFrom:function(t){return this.lerp(t)},min:function(t){return new e(Math.min(this.x,t.x),Math.min(this.y,t.y))},max:function(t){return new e(Math.max(this.x,t.x),Math.max(this.y,t.y))},toString:function(){return this.x+","+this.y},setXY:function(t,e){return this.x=t,this.y=e,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setFromPoint:function(t){return this.x=t.x,this.y=t.y,this},swap:function(t){var e=this.x,n=this.y;this.x=t.x,this.y=t.y,t.x=e,t.y=n},clone:function(){return new e(this.x,this.y)}}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";function e(t){this.status=t,this.points=[]}var n=t.fabric||(t.fabric={});return n.Intersection?void n.warn("fabric.Intersection is already defined"):(n.Intersection=e,n.Intersection.prototype={constructor:e,appendPoint:function(t){return this.points.push(t),this},appendPoints:function(t){return this.points=this.points.concat(t),this}},n.Intersection.intersectLineLine=function(t,i,r,s){var o,a=(s.x-r.x)*(t.y-r.y)-(s.y-r.y)*(t.x-r.x),c=(i.x-t.x)*(t.y-r.y)-(i.y-t.y)*(t.x-r.x),l=(s.y-r.y)*(i.x-t.x)-(s.x-r.x)*(i.y-t.y);if(0!==l){var u=a/l,h=c/l;0<=u&&u<=1&&0<=h&&h<=1?(o=new e("Intersection"),o.appendPoint(new n.Point(t.x+u*(i.x-t.x),t.y+u*(i.y-t.y)))):o=new e}else o=new e(0===a||0===c?"Coincident":"Parallel");return o},n.Intersection.intersectLinePolygon=function(t,n,i){for(var r,s,o,a=new e,c=i.length,l=0;l<c;l++)r=i[l],s=i[(l+1)%c],o=e.intersectLineLine(t,n,r,s),a.appendPoints(o.points);return a.points.length>0&&(a.status="Intersection"),a},n.Intersection.intersectPolygonPolygon=function(t,n){for(var i=new e,r=t.length,s=0;s<r;s++){var o=t[s],a=t[(s+1)%r],c=e.intersectLinePolygon(o,a,n);i.appendPoints(c.points)}return i.points.length>0&&(i.status="Intersection"),i},void(n.Intersection.intersectPolygonRectangle=function(t,i,r){var s=i.min(r),o=i.max(r),a=new n.Point(o.x,s.y),c=new n.Point(s.x,o.y),l=e.intersectLinePolygon(s,a,t),u=e.intersectLinePolygon(a,o,t),h=e.intersectLinePolygon(o,c,t),f=e.intersectLinePolygon(c,s,t),d=new e;
return d.appendPoints(l.points),d.appendPoints(u.points),d.appendPoints(h.points),d.appendPoints(f.points),d.points.length>0&&(d.status="Intersection"),d}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";function e(t){t?this._tryParsingColor(t):this.setSource([0,0,0,1])}function n(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t}var i=t.fabric||(t.fabric={});return i.Color?void i.warn("fabric.Color is already defined."):(i.Color=e,i.Color.prototype={_tryParsingColor:function(t){var n;t in e.colorNameMap&&(t=e.colorNameMap[t]),"transparent"===t&&(n=[255,255,255,0]),n||(n=e.sourceFromHex(t)),n||(n=e.sourceFromRgb(t)),n||(n=e.sourceFromHsl(t)),n||(n=[0,0,0,1]),n&&this.setSource(n)},_rgbToHsl:function(t,e,n){t/=255,e/=255,n/=255;var r,s,o,a=i.util.array.max([t,e,n]),c=i.util.array.min([t,e,n]);if(o=(a+c)/2,a===c)r=s=0;else{var l=a-c;switch(s=o>.5?l/(2-a-c):l/(a+c),a){case t:r=(e-n)/l+(e<n?6:0);break;case e:r=(n-t)/l+2;break;case n:r=(t-e)/l+4}r/=6}return[Math.round(360*r),Math.round(100*s),Math.round(100*o)]},getSource:function(){return this._source},setSource:function(t){this._source=t},toRgb:function(){var t=this.getSource();return"rgb("+t[0]+","+t[1]+","+t[2]+")"},toRgba:function(){var t=this.getSource();return"rgba("+t[0]+","+t[1]+","+t[2]+","+t[3]+")"},toHsl:function(){var t=this.getSource(),e=this._rgbToHsl(t[0],t[1],t[2]);return"hsl("+e[0]+","+e[1]+"%,"+e[2]+"%)"},toHsla:function(){var t=this.getSource(),e=this._rgbToHsl(t[0],t[1],t[2]);return"hsla("+e[0]+","+e[1]+"%,"+e[2]+"%,"+t[3]+")"},toHex:function(){var t,e,n,i=this.getSource();return t=i[0].toString(16),t=1===t.length?"0"+t:t,e=i[1].toString(16),e=1===e.length?"0"+e:e,n=i[2].toString(16),n=1===n.length?"0"+n:n,t.toUpperCase()+e.toUpperCase()+n.toUpperCase()},getAlpha:function(){return this.getSource()[3]},setAlpha:function(t){var e=this.getSource();return e[3]=t,this.setSource(e),this},toGrayscale:function(){var t=this.getSource(),e=parseInt((.3*t[0]+.59*t[1]+.11*t[2]).toFixed(0),10),n=t[3];return this.setSource([e,e,e,n]),this},toBlackWhite:function(t){var e=this.getSource(),n=(.3*e[0]+.59*e[1]+.11*e[2]).toFixed(0),i=e[3];return t=t||127,n=Number(n)<Number(t)?0:255,this.setSource([n,n,n,i]),this},overlayWith:function(t){t instanceof e||(t=new e(t));for(var n=[],i=this.getAlpha(),r=.5,s=this.getSource(),o=t.getSource(),a=0;a<3;a++)n.push(Math.round(s[a]*(1-r)+o[a]*r));return n[3]=i,this.setSource(n),this}},i.Color.reRGBa=/^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/,i.Color.reHSLa=/^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/,i.Color.reHex=/^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i,i.Color.colorNameMap={aqua:"#00FFFF",black:"#000000",blue:"#0000FF",fuchsia:"#FF00FF",gray:"#808080",grey:"#808080",green:"#008000",lime:"#00FF00",maroon:"#800000",navy:"#000080",olive:"#808000",orange:"#FFA500",purple:"#800080",red:"#FF0000",silver:"#C0C0C0",teal:"#008080",white:"#FFFFFF",yellow:"#FFFF00"},i.Color.fromRgb=function(t){return e.fromSource(e.sourceFromRgb(t))},i.Color.sourceFromRgb=function(t){var n=t.match(e.reRGBa);if(n){var i=parseInt(n[1],10)/(/%$/.test(n[1])?100:1)*(/%$/.test(n[1])?255:1),r=parseInt(n[2],10)/(/%$/.test(n[2])?100:1)*(/%$/.test(n[2])?255:1),s=parseInt(n[3],10)/(/%$/.test(n[3])?100:1)*(/%$/.test(n[3])?255:1);return[parseInt(i,10),parseInt(r,10),parseInt(s,10),n[4]?parseFloat(n[4]):1]}},i.Color.fromRgba=e.fromRgb,i.Color.fromHsl=function(t){return e.fromSource(e.sourceFromHsl(t))},i.Color.sourceFromHsl=function(t){var i=t.match(e.reHSLa);if(i){var r,s,o,a=(parseFloat(i[1])%360+360)%360/360,c=parseFloat(i[2])/(/%$/.test(i[2])?100:1),l=parseFloat(i[3])/(/%$/.test(i[3])?100:1);if(0===c)r=s=o=l;else{var u=l<=.5?l*(c+1):l+c-l*c,h=2*l-u;r=n(h,u,a+1/3),s=n(h,u,a),o=n(h,u,a-1/3)}return[Math.round(255*r),Math.round(255*s),Math.round(255*o),i[4]?parseFloat(i[4]):1]}},i.Color.fromHsla=e.fromHsl,i.Color.fromHex=function(t){return e.fromSource(e.sourceFromHex(t))},i.Color.sourceFromHex=function(t){if(t.match(e.reHex)){var n=t.slice(t.indexOf("#")+1),i=3===n.length||4===n.length,r=8===n.length||4===n.length,s=i?n.charAt(0)+n.charAt(0):n.substring(0,2),o=i?n.charAt(1)+n.charAt(1):n.substring(2,4),a=i?n.charAt(2)+n.charAt(2):n.substring(4,6),c=r?i?n.charAt(3)+n.charAt(3):n.substring(6,8):"FF";return[parseInt(s,16),parseInt(o,16),parseInt(a,16),parseFloat((parseInt(c,16)/255).toFixed(2))]}},void(i.Color.fromSource=function(t){var n=new e;return n.setSource(t),n}))}("undefined"!=typeof exports?exports:this),function(){function t(t){var e,n,i,r=t.getAttribute("style"),s=t.getAttribute("offset")||0;if(s=parseFloat(s)/(/%$/.test(s)?100:1),s=s<0?0:s>1?1:s,r){var o=r.split(/\s*;\s*/);""===o[o.length-1]&&o.pop();for(var a=o.length;a--;){var c=o[a].split(/\s*:\s*/),l=c[0].trim(),u=c[1].trim();"stop-color"===l?e=u:"stop-opacity"===l&&(i=u)}}return e||(e=t.getAttribute("stop-color")||"rgb(0,0,0)"),i||(i=t.getAttribute("stop-opacity")),e=new fabric.Color(e),n=e.getAlpha(),i=isNaN(parseFloat(i))?1:parseFloat(i),i*=n,{offset:s,color:e.toRgb(),opacity:i}}function e(t){return{x1:t.getAttribute("x1")||0,y1:t.getAttribute("y1")||0,x2:t.getAttribute("x2")||"100%",y2:t.getAttribute("y2")||0}}function n(t){return{x1:t.getAttribute("fx")||t.getAttribute("cx")||"50%",y1:t.getAttribute("fy")||t.getAttribute("cy")||"50%",r1:0,x2:t.getAttribute("cx")||"50%",y2:t.getAttribute("cy")||"50%",r2:t.getAttribute("r")||"50%"}}function i(t,e,n){var i,r=0,s=1,o="";for(var a in e)"Infinity"===e[a]?e[a]=1:"-Infinity"===e[a]&&(e[a]=0),i=parseFloat(e[a],10),s="string"==typeof e[a]&&/^\d+%$/.test(e[a])?.01:1,"x1"===a||"x2"===a||"r2"===a?(s*="objectBoundingBox"===n?t.width:1,r="objectBoundingBox"===n?t.left||0:0):"y1"!==a&&"y2"!==a||(s*="objectBoundingBox"===n?t.height:1,r="objectBoundingBox"===n?t.top||0:0),e[a]=i*s+r;if("ellipse"===t.type&&null!==e.r2&&"objectBoundingBox"===n&&t.rx!==t.ry){var c=t.ry/t.rx;o=" scale(1, "+c+")",e.y1&&(e.y1/=c),e.y2&&(e.y2/=c)}return o}fabric.Gradient=fabric.util.createClass({offsetX:0,offsetY:0,initialize:function(t){t||(t={});var e={};this.id=fabric.Object.__uid++,this.type=t.type||"linear",e={x1:t.coords.x1||0,y1:t.coords.y1||0,x2:t.coords.x2||0,y2:t.coords.y2||0},"radial"===this.type&&(e.r1=t.coords.r1||0,e.r2=t.coords.r2||0),this.coords=e,this.colorStops=t.colorStops.slice(),t.gradientTransform&&(this.gradientTransform=t.gradientTransform),this.offsetX=t.offsetX||this.offsetX,this.offsetY=t.offsetY||this.offsetY},addColorStop:function(t){for(var e in t){var n=new fabric.Color(t[e]);this.colorStops.push({offset:e,color:n.toRgb(),opacity:n.getAlpha()})}return this},toObject:function(){return{type:this.type,coords:this.coords,colorStops:this.colorStops,offsetX:this.offsetX,offsetY:this.offsetY,gradientTransform:this.gradientTransform?this.gradientTransform.concat():this.gradientTransform}},toSVG:function(t){var e,n,i=fabric.util.object.clone(this.coords);if(this.colorStops.sort(function(t,e){return t.offset-e.offset}),!t.group||"path-group"!==t.group.type)for(var r in i)"x1"===r||"x2"===r||"r2"===r?i[r]+=this.offsetX-t.width/2:"y1"!==r&&"y2"!==r||(i[r]+=this.offsetY-t.height/2);n='id="SVGID_'+this.id+'" gradientUnits="userSpaceOnUse"',this.gradientTransform&&(n+=' gradientTransform="matrix('+this.gradientTransform.join(" ")+')" '),"linear"===this.type?e=["<linearGradient ",n,' x1="',i.x1,'" y1="',i.y1,'" x2="',i.x2,'" y2="',i.y2,'">\n']:"radial"===this.type&&(e=["<radialGradient ",n,' cx="',i.x2,'" cy="',i.y2,'" r="',i.r2,'" fx="',i.x1,'" fy="',i.y1,'">\n']);for(var s=0;s<this.colorStops.length;s++)e.push("<stop ",'offset="',100*this.colorStops[s].offset+"%",'" style="stop-color:',this.colorStops[s].color,null!=this.colorStops[s].opacity?";stop-opacity: "+this.colorStops[s].opacity:";",'"/>\n');return e.push("linear"===this.type?"</linearGradient>\n":"</radialGradient>\n"),e.join("")},toLive:function(t,e){var n,i,r=fabric.util.object.clone(this.coords);if(this.type){if(e.group&&"path-group"===e.group.type)for(i in r)"x1"===i||"x2"===i?r[i]+=-this.offsetX+e.width/2:"y1"!==i&&"y2"!==i||(r[i]+=-this.offsetY+e.height/2);"linear"===this.type?n=t.createLinearGradient(r.x1,r.y1,r.x2,r.y2):"radial"===this.type&&(n=t.createRadialGradient(r.x1,r.y1,r.r1,r.x2,r.y2,r.r2));for(var s=0,o=this.colorStops.length;s<o;s++){var a=this.colorStops[s].color,c=this.colorStops[s].opacity,l=this.colorStops[s].offset;"undefined"!=typeof c&&(a=new fabric.Color(a).setAlpha(c).toRgba()),n.addColorStop(parseFloat(l),a)}return n}}}),fabric.util.object.extend(fabric.Gradient,{fromElement:function(r,s){var o,a,c,l=r.getElementsByTagName("stop"),u=r.getAttribute("gradientUnits")||"objectBoundingBox",h=r.getAttribute("gradientTransform"),f=[];o="linearGradient"===r.nodeName||"LINEARGRADIENT"===r.nodeName?"linear":"radial","linear"===o?a=e(r):"radial"===o&&(a=n(r));for(var d=l.length;d--;)f.push(t(l[d]));c=i(s,a,u);var p=new fabric.Gradient({type:o,coords:a,colorStops:f,offsetX:-s.left,offsetY:-s.top});return(h||""!==c)&&(p.gradientTransform=fabric.parseTransformAttribute((h||"")+c)),p},forObject:function(t,e){return e||(e={}),i(t,e.coords,"userSpaceOnUse"),new fabric.Gradient(e)}})}(),fabric.Pattern=fabric.util.createClass({repeat:"repeat",offsetX:0,offsetY:0,initialize:function(t){if(t||(t={}),this.id=fabric.Object.__uid++,t.source)if("string"==typeof t.source)if("undefined"!=typeof fabric.util.getFunctionBody(t.source))this.source=new Function(fabric.util.getFunctionBody(t.source));else{var e=this;this.source=fabric.util.createImage(),fabric.util.loadImage(t.source,function(t){e.source=t})}else this.source=t.source;t.repeat&&(this.repeat=t.repeat),t.offsetX&&(this.offsetX=t.offsetX),t.offsetY&&(this.offsetY=t.offsetY)},toObject:function(){var t;return"function"==typeof this.source?t=String(this.source):"string"==typeof this.source.src?t=this.source.src:"object"==typeof this.source&&this.source.toDataURL&&(t=this.source.toDataURL()),{source:t,repeat:this.repeat,offsetX:this.offsetX,offsetY:this.offsetY}},toSVG:function(t){var e="function"==typeof this.source?this.source():this.source,n=e.width/t.getWidth(),i=e.height/t.getHeight(),r=this.offsetX/t.getWidth(),s=this.offsetY/t.getHeight(),o="";return"repeat-x"!==this.repeat&&"no-repeat"!==this.repeat||(i=1),"repeat-y"!==this.repeat&&"no-repeat"!==this.repeat||(n=1),e.src?o=e.src:e.toDataURL&&(o=e.toDataURL()),'<pattern id="SVGID_'+this.id+'" x="'+r+'" y="'+s+'" width="'+n+'" height="'+i+'">\n<image x="0" y="0" width="'+e.width+'" height="'+e.height+'" xlink:href="'+o+'"></image>\n</pattern>\n'},toLive:function(t){var e="function"==typeof this.source?this.source():this.source;if(!e)return"";if("undefined"!=typeof e.src){if(!e.complete)return"";if(0===e.naturalWidth||0===e.naturalHeight)return""}return t.createPattern(e,this.repeat)}}),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.toFixed;return e.Shadow?void e.warn("fabric.Shadow is already defined."):(e.Shadow=e.util.createClass({color:"rgb(0,0,0)",blur:0,offsetX:0,offsetY:0,affectStroke:!1,includeDefaultValues:!0,initialize:function(t){"string"==typeof t&&(t=this._parseShadow(t));for(var n in t)this[n]=t[n];this.id=e.Object.__uid++},_parseShadow:function(t){var n=t.trim(),i=e.Shadow.reOffsetsAndBlur.exec(n)||[],r=n.replace(e.Shadow.reOffsetsAndBlur,"")||"rgb(0,0,0)";return{color:r.trim(),offsetX:parseInt(i[1],10)||0,offsetY:parseInt(i[2],10)||0,blur:parseInt(i[3],10)||0}},toString:function(){return[this.offsetX,this.offsetY,this.blur,this.color].join("px ")},toSVG:function(t){var i=40,r=40,s=e.Object.NUM_FRACTION_DIGITS,o=e.util.rotateVector({x:this.offsetX,y:this.offsetY},e.util.degreesToRadians(-t.angle)),a=20;return t.width&&t.height&&(i=100*n((Math.abs(o.x)+this.blur)/t.width,s)+a,r=100*n((Math.abs(o.y)+this.blur)/t.height,s)+a),t.flipX&&(o.x*=-1),t.flipY&&(o.y*=-1),'<filter id="SVGID_'+this.id+'" y="-'+r+'%" height="'+(100+2*r)+'%" x="-'+i+'%" width="'+(100+2*i)+'%" >\n\t<feGaussianBlur in="SourceAlpha" stdDeviation="'+n(this.blur?this.blur/2:0,s)+'"></feGaussianBlur>\n\t<feOffset dx="'+n(o.x,s)+'" dy="'+n(o.y,s)+'" result="oBlur" ></feOffset>\n\t<feFlood flood-color="'+this.color+'"/>\n\t<feComposite in2="oBlur" operator="in" />\n\t<feMerge>\n\t\t<feMergeNode></feMergeNode>\n\t\t<feMergeNode in="SourceGraphic"></feMergeNode>\n\t</feMerge>\n</filter>\n'},toObject:function(){if(this.includeDefaultValues)return{color:this.color,blur:this.blur,offsetX:this.offsetX,offsetY:this.offsetY,affectStroke:this.affectStroke};var t={},n=e.Shadow.prototype;return["color","blur","offsetX","offsetY","affectStroke"].forEach(function(e){this[e]!==n[e]&&(t[e]=this[e])},this),t}}),void(e.Shadow.reOffsetsAndBlur=/(?:\s|^)(-?\d+(?:px)?(?:\s?|$))?(-?\d+(?:px)?(?:\s?|$))?(\d+(?:px)?)?(?:\s?|$)(?:$|\s)/))}("undefined"!=typeof exports?exports:this),function(){"use strict";if(fabric.StaticCanvas)return void fabric.warn("fabric.StaticCanvas is already defined.");var t=fabric.util.object.extend,e=fabric.util.getElementOffset,n=fabric.util.removeFromArray,i=fabric.util.toFixed,r=new Error("Could not initialize `canvas` element");fabric.StaticCanvas=fabric.util.createClass({initialize:function(t,e){e||(e={}),this._initStatic(t,e)},backgroundColor:"",backgroundImage:null,overlayColor:"",overlayImage:null,includeDefaultValues:!0,stateful:!0,renderOnAddRemove:!0,clipTo:null,controlsAboveOverlay:!1,allowTouchScrolling:!1,imageSmoothingEnabled:!0,viewportTransform:[1,0,0,1,0,0],backgroundVpt:!0,overlayVpt:!0,onBeforeScaleRotate:function(){},enableRetinaScaling:!0,_initStatic:function(t,e){var n=fabric.StaticCanvas.prototype.renderAll.bind(this);this._objects=[],this._createLowerCanvas(t),this._initOptions(e),this._setImageSmoothing(),this.interactive||this._initRetinaScaling(),e.overlayImage&&this.setOverlayImage(e.overlayImage,n),e.backgroundImage&&this.setBackgroundImage(e.backgroundImage,n),e.backgroundColor&&this.setBackgroundColor(e.backgroundColor,n),e.overlayColor&&this.setOverlayColor(e.overlayColor,n),this.calcOffset()},_isRetinaScaling:function(){return 1!==fabric.devicePixelRatio&&this.enableRetinaScaling},getRetinaScaling:function(){return this._isRetinaScaling()?fabric.devicePixelRatio:1},_initRetinaScaling:function(){this._isRetinaScaling()&&(this.lowerCanvasEl.setAttribute("width",this.width*fabric.devicePixelRatio),this.lowerCanvasEl.setAttribute("height",this.height*fabric.devicePixelRatio),this.contextContainer.scale(fabric.devicePixelRatio,fabric.devicePixelRatio))},calcOffset:function(){return this._offset=e(this.lowerCanvasEl),this},setOverlayImage:function(t,e,n){return this.__setBgOverlayImage("overlayImage",t,e,n)},setBackgroundImage:function(t,e,n){return this.__setBgOverlayImage("backgroundImage",t,e,n)},setOverlayColor:function(t,e){return this.__setBgOverlayColor("overlayColor",t,e)},setBackgroundColor:function(t,e){return this.__setBgOverlayColor("backgroundColor",t,e)},_setImageSmoothing:function(){var t=this.getContext();t.imageSmoothingEnabled=t.imageSmoothingEnabled||t.webkitImageSmoothingEnabled||t.mozImageSmoothingEnabled||t.msImageSmoothingEnabled||t.oImageSmoothingEnabled,t.imageSmoothingEnabled=this.imageSmoothingEnabled},__setBgOverlayImage:function(t,e,n,i){return"string"==typeof e?fabric.util.loadImage(e,function(e){e&&(this[t]=new fabric.Image(e,i)),n&&n(e)},this,i&&i.crossOrigin):(i&&e.setOptions(i),this[t]=e,n&&n(e)),this},__setBgOverlayColor:function(t,e,n){if(e&&e.source){var i=this;fabric.util.loadImage(e.source,function(r){i[t]=new fabric.Pattern({source:r,repeat:e.repeat,offsetX:e.offsetX,offsetY:e.offsetY}),n&&n()})}else this[t]=e,n&&n();return this},_createCanvasElement:function(){var t=fabric.document.createElement("canvas");if(t.style||(t.style={}),!t)throw r;return this._initCanvasElement(t),t},_initCanvasElement:function(t){if(fabric.util.createCanvasElement(t),"undefined"==typeof t.getContext)throw r},_initOptions:function(t){for(var e in t)this[e]=t[e];this.width=this.width||parseInt(this.lowerCanvasEl.width,10)||0,this.height=this.height||parseInt(this.lowerCanvasEl.height,10)||0,this.lowerCanvasEl.style&&(this.lowerCanvasEl.width=this.width,this.lowerCanvasEl.height=this.height,this.lowerCanvasEl.style.width=this.width+"px",this.lowerCanvasEl.style.height=this.height+"px",this.viewportTransform=this.viewportTransform.slice())},_createLowerCanvas:function(t){this.lowerCanvasEl=fabric.util.getById(t)||this._createCanvasElement(),this._initCanvasElement(this.lowerCanvasEl),fabric.util.addClass(this.lowerCanvasEl,"lower-canvas"),this.interactive&&this._applyCanvasStyle(this.lowerCanvasEl),this.contextContainer=this.lowerCanvasEl.getContext("2d")},getWidth:function(){return this.width},getHeight:function(){return this.height},setWidth:function(t,e){return this.setDimensions({width:t},e)},setHeight:function(t,e){return this.setDimensions({height:t},e)},setDimensions:function(t,e){var n;e=e||{};for(var i in t)n=t[i],e.cssOnly||(this._setBackstoreDimension(i,t[i]),n+="px"),e.backstoreOnly||this._setCssDimension(i,n);return this._initRetinaScaling(),this._setImageSmoothing(),this.calcOffset(),e.cssOnly||this.renderAll(),this},_setBackstoreDimension:function(t,e){return this.lowerCanvasEl[t]=e,this.upperCanvasEl&&(this.upperCanvasEl[t]=e),this.cacheCanvasEl&&(this.cacheCanvasEl[t]=e),this[t]=e,this},_setCssDimension:function(t,e){return this.lowerCanvasEl.style[t]=e,this.upperCanvasEl&&(this.upperCanvasEl.style[t]=e),this.wrapperEl&&(this.wrapperEl.style[t]=e),this},getZoom:function(){return Math.sqrt(this.viewportTransform[0]*this.viewportTransform[3])},setViewportTransform:function(t){var e=this.getActiveGroup();this.viewportTransform=t;for(var n=0,i=this._objects.length;n<i;n++)this._objects[n].setCoords();return e&&e.setCoords(),this.renderAll(),this},zoomToPoint:function(t,e){var n=t,i=this.viewportTransform.slice(0);t=fabric.util.transformPoint(t,fabric.util.invertTransform(this.viewportTransform)),i[0]=e,i[3]=e;var r=fabric.util.transformPoint(t,i);return i[4]+=n.x-r.x,i[5]+=n.y-r.y,this.setViewportTransform(i)},setZoom:function(t){return this.zoomToPoint(new fabric.Point(0,0),t),this},absolutePan:function(t){var e=this.viewportTransform.slice(0);return e[4]=-t.x,e[5]=-t.y,this.setViewportTransform(e)},relativePan:function(t){return this.absolutePan(new fabric.Point(-t.x-this.viewportTransform[4],-t.y-this.viewportTransform[5]))},getElement:function(){return this.lowerCanvasEl},getActiveObject:function(){return null},getActiveGroup:function(){return null},_onObjectAdded:function(t){this.stateful&&t.setupState(),t._set("canvas",this),t.setCoords(),this.fire("object:added",{target:t}),t.fire("added")},_onObjectRemoved:function(t){this.fire("object:removed",{target:t}),t.fire("removed")},clearContext:function(t){return t.clearRect(0,0,this.width,this.height),this},getContext:function(){return this.contextContainer},clear:function(){return this._objects.length=0,this.clearContext(this.contextContainer),this.fire("canvas:cleared"),this.renderAll(),this},renderAll:function(){var t=this.contextContainer;return this.renderCanvas(t,this._objects),this},renderCanvas:function(t,e){this.clearContext(t),this.fire("before:render"),this.clipTo&&fabric.util.clipContext(this,t),this._renderBackground(t),t.save(),t.transform.apply(t,this.viewportTransform),this._renderObjects(t,e),t.restore(),!this.controlsAboveOverlay&&this.interactive&&this.drawControls(t),this.clipTo&&t.restore(),this._renderOverlay(t),this.controlsAboveOverlay&&this.interactive&&this.drawControls(t),this.fire("after:render")},drawControls:function(){},_renderObjects:function(t,e){for(var n=0,i=e.length;n<i;++n)e[n]&&e[n].render(t)},_renderBackgroundOrOverlay:function(t,e){var n=this[e+"Color"];n&&(t.fillStyle=n.toLive?n.toLive(t):n,t.fillRect(n.offsetX||0,n.offsetY||0,this.width,this.height)),n=this[e+"Image"],n&&(this[e+"Vpt"]&&(t.save(),t.transform.apply(t,this.viewportTransform)),n.render(t),this[e+"Vpt"]&&t.restore())},_renderBackground:function(t){this._renderBackgroundOrOverlay(t,"background")},_renderOverlay:function(t){this._renderBackgroundOrOverlay(t,"overlay")},getCenter:function(){return{top:this.getHeight()/2,left:this.getWidth()/2}},centerObjectH:function(t){return this._centerObject(t,new fabric.Point(this.getCenter().left,t.getCenterPoint().y))},centerObjectV:function(t){return this._centerObject(t,new fabric.Point(t.getCenterPoint().x,this.getCenter().top))},centerObject:function(t){var e=this.getCenter();return this._centerObject(t,new fabric.Point(e.left,e.top))},viewportCenterObject:function(t){var e=this.getVpCenter();return this._centerObject(t,e)},viewportCenterObjectH:function(t){var e=this.getVpCenter();return this._centerObject(t,new fabric.Point(e.x,t.getCenterPoint().y)),this},viewportCenterObjectV:function(t){var e=this.getVpCenter();return this._centerObject(t,new fabric.Point(t.getCenterPoint().x,e.y))},getVpCenter:function(){var t=this.getCenter(),e=fabric.util.invertTransform(this.viewportTransform);return fabric.util.transformPoint({x:t.left,y:t.top},e)},_centerObject:function(t,e){return t.setPositionByOrigin(e,"center","center"),this.renderAll(),this},toDatalessJSON:function(t){return this.toDatalessObject(t)},toObject:function(t){return this._toObjectMethod("toObject",t)},toDatalessObject:function(t){return this._toObjectMethod("toDatalessObject",t)},_toObjectMethod:function(e,n){var i={objects:this._toObjects(e,n)};return t(i,this.__serializeBgOverlay()),fabric.util.populateWithProperties(this,i,n),i},_toObjects:function(t,e){return this.getObjects().filter(function(t){return!t.excludeFromExport}).map(function(n){return this._toObject(n,t,e)},this)},_toObject:function(t,e,n){var i;this.includeDefaultValues||(i=t.includeDefaultValues,t.includeDefaultValues=!1);var r=this._realizeGroupTransformOnObject(t),s=t[e](n);return this.includeDefaultValues||(t.includeDefaultValues=i),this._unwindGroupTransformOnObject(t,r),s},_realizeGroupTransformOnObject:function(t){var e=["angle","flipX","flipY","height","left","scaleX","scaleY","top","width"];if(t.group&&t.group===this.getActiveGroup()){var n={};return e.forEach(function(e){n[e]=t[e]}),this.getActiveGroup().realizeTransform(t),n}return null},_unwindGroupTransformOnObject:function(t,e){e&&t.set(e)},__serializeBgOverlay:function(){var t={background:this.backgroundColor&&this.backgroundColor.toObject?this.backgroundColor.toObject():this.backgroundColor};return this.overlayColor&&(t.overlay=this.overlayColor.toObject?this.overlayColor.toObject():this.overlayColor),this.backgroundImage&&(t.backgroundImage=this.backgroundImage.toObject()),this.overlayImage&&(t.overlayImage=this.overlayImage.toObject()),t},svgViewportTransformation:!0,toSVG:function(t,e){t||(t={});var n=[];return this._setSVGPreamble(n,t),this._setSVGHeader(n,t),this._setSVGBgOverlayColor(n,"backgroundColor"),this._setSVGBgOverlayImage(n,"backgroundImage",e),this._setSVGObjects(n,e),this._setSVGBgOverlayColor(n,"overlayColor"),this._setSVGBgOverlayImage(n,"overlayImage",e),n.push("</svg>"),n.join("")},_setSVGPreamble:function(t,e){e.suppressPreamble||t.push('<?xml version="1.0" encoding="',e.encoding||"UTF-8",'" standalone="no" ?>\n','<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ','"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n')},_setSVGHeader:function(t,e){var n,r=e.width||this.width,s=e.height||this.height,o='viewBox="0 0 '+this.width+" "+this.height+'" ',a=fabric.Object.NUM_FRACTION_DIGITS;e.viewBox?o='viewBox="'+e.viewBox.x+" "+e.viewBox.y+" "+e.viewBox.width+" "+e.viewBox.height+'" ':this.svgViewportTransformation&&(n=this.viewportTransform,o='viewBox="'+i(-n[4]/n[0],a)+" "+i(-n[5]/n[3],a)+" "+i(this.width/n[0],a)+" "+i(this.height/n[3],a)+'" '),t.push("<svg ",'xmlns="http://www.w3.org/2000/svg" ','xmlns:xlink="http://www.w3.org/1999/xlink" ','version="1.1" ','width="',r,'" ','height="',s,'" ',this.backgroundColor&&!this.backgroundColor.toLive?'style="background-color: '+this.backgroundColor+'" ':null,o,'xml:space="preserve">\n',"<desc>Created with Fabric.js ",fabric.version,"</desc>\n","<defs>",fabric.createSVGFontFacesMarkup(this.getObjects()),fabric.createSVGRefElementsMarkup(this),"</defs>\n")},_setSVGObjects:function(t,e){for(var n,i,r=0,s=this.getObjects(),o=s.length;r<o;r++)n=s[r],n.excludeFromExport||(i=this._realizeGroupTransformOnObject(n),t.push(n.toSVG(e)),this._unwindGroupTransformOnObject(n,i))},_setSVGBgOverlayImage:function(t,e,n){this[e]&&this[e].toSVG&&t.push(this[e].toSVG(n))},_setSVGBgOverlayColor:function(t,e){this[e]&&this[e].source?t.push('<rect x="',this[e].offsetX,'" y="',this[e].offsetY,'" ','width="',"repeat-y"===this[e].repeat||"no-repeat"===this[e].repeat?this[e].source.width:this.width,'" height="',"repeat-x"===this[e].repeat||"no-repeat"===this[e].repeat?this[e].source.height:this.height,'" fill="url(#'+e+'Pattern)"',"></rect>\n"):this[e]&&"overlayColor"===e&&t.push('<rect x="0" y="0" ','width="',this.width,'" height="',this.height,'" fill="',this[e],'"',"></rect>\n")},sendToBack:function(t){if(!t)return this;var e,i,r,s=this.getActiveGroup?this.getActiveGroup():null;if(t===s)for(r=s._objects,e=r.length;e--;)i=r[e],n(this._objects,i),this._objects.unshift(i);else n(this._objects,t),this._objects.unshift(t);return this.renderAll&&this.renderAll()},bringToFront:function(t){if(!t)return this;var e,i,r,s=this.getActiveGroup?this.getActiveGroup():null;if(t===s)for(r=s._objects,e=0;e<r.length;e++)i=r[e],n(this._objects,i),this._objects.push(i);else n(this._objects,t),this._objects.push(t);return this.renderAll&&this.renderAll()},sendBackwards:function(t,e){if(!t)return this;var i,r,s,o,a,c=this.getActiveGroup?this.getActiveGroup():null;if(t===c)for(a=c._objects,i=0;i<a.length;i++)r=a[i],s=this._objects.indexOf(r),0!==s&&(o=s-1,n(this._objects,r),this._objects.splice(o,0,r));else s=this._objects.indexOf(t),0!==s&&(o=this._findNewLowerIndex(t,s,e),n(this._objects,t),this._objects.splice(o,0,t));return this.renderAll&&this.renderAll(),this},_findNewLowerIndex:function(t,e,n){var i;if(n){i=e;for(var r=e-1;r>=0;--r){var s=t.intersectsWithObject(this._objects[r])||t.isContainedWithinObject(this._objects[r])||this._objects[r].isContainedWithinObject(t);if(s){i=r;break}}}else i=e-1;return i},bringForward:function(t,e){if(!t)return this;var i,r,s,o,a,c=this.getActiveGroup?this.getActiveGroup():null;if(t===c)for(a=c._objects,i=a.length;i--;)r=a[i],s=this._objects.indexOf(r),s!==this._objects.length-1&&(o=s+1,n(this._objects,r),this._objects.splice(o,0,r));else s=this._objects.indexOf(t),s!==this._objects.length-1&&(o=this._findNewUpperIndex(t,s,e),n(this._objects,t),this._objects.splice(o,0,t));return this.renderAll&&this.renderAll(),this},_findNewUpperIndex:function(t,e,n){var i;if(n){i=e;for(var r=e+1;r<this._objects.length;++r){var s=t.intersectsWithObject(this._objects[r])||t.isContainedWithinObject(this._objects[r])||this._objects[r].isContainedWithinObject(t);if(s){i=r;break}}}else i=e+1;return i},moveTo:function(t,e){return n(this._objects,t),this._objects.splice(e,0,t),this.renderAll&&this.renderAll()},dispose:function(){return this.clear(),this},toString:function(){return"#<fabric.Canvas ("+this.complexity()+"): { objects: "+this.getObjects().length+" }>"}}),t(fabric.StaticCanvas.prototype,fabric.Observable),t(fabric.StaticCanvas.prototype,fabric.Collection),t(fabric.StaticCanvas.prototype,fabric.DataURLExporter),t(fabric.StaticCanvas,{EMPTY_JSON:'{"objects": [], "background": "white"}',supports:function(t){var e=fabric.util.createCanvasElement();if(!e||!e.getContext)return null;var n=e.getContext("2d");if(!n)return null;switch(t){case"getImageData":return"undefined"!=typeof n.getImageData;case"setLineDash":return"undefined"!=typeof n.setLineDash;case"toDataURL":return"undefined"!=typeof e.toDataURL;case"toDataURLWithQuality":try{return e.toDataURL("image/jpeg",0),!0}catch(i){}return!1;default:return null}}}),fabric.StaticCanvas.prototype.toJSON=fabric.StaticCanvas.prototype.toObject}(),fabric.BaseBrush=fabric.util.createClass({color:"rgb(0, 0, 0)",width:1,shadow:null,strokeLineCap:"round",strokeLineJoin:"round",strokeDashArray:null,setShadow:function(t){return this.shadow=new fabric.Shadow(t),this},_setBrushStyles:function(){var t=this.canvas.contextTop;t.strokeStyle=this.color,t.lineWidth=this.width,t.lineCap=this.strokeLineCap,t.lineJoin=this.strokeLineJoin,this.strokeDashArray&&fabric.StaticCanvas.supports("setLineDash")&&t.setLineDash(this.strokeDashArray)},_setShadow:function(){if(this.shadow){var t=this.canvas.contextTop;t.shadowColor=this.shadow.color,t.shadowBlur=this.shadow.blur,t.shadowOffsetX=this.shadow.offsetX,t.shadowOffsetY=this.shadow.offsetY}},_resetShadow:function(){var t=this.canvas.contextTop;t.shadowColor="",t.shadowBlur=t.shadowOffsetX=t.shadowOffsetY=0}}),function(){fabric.PencilBrush=fabric.util.createClass(fabric.BaseBrush,{initialize:function(t){this.canvas=t,this._points=[]},onMouseDown:function(t){this._prepareForDrawing(t),this._captureDrawingPath(t),this._render()},onMouseMove:function(t){this._captureDrawingPath(t),this.canvas.clearContext(this.canvas.contextTop),this._render()},onMouseUp:function(){this._finalizeAndAddPath()},_prepareForDrawing:function(t){var e=new fabric.Point(t.x,t.y);this._reset(),this._addPoint(e),this.canvas.contextTop.moveTo(e.x,e.y)},_addPoint:function(t){this._points.push(t)},_reset:function(){this._points.length=0,this._setBrushStyles(),this._setShadow()},_captureDrawingPath:function(t){var e=new fabric.Point(t.x,t.y);this._addPoint(e)},_render:function(){var t=this.canvas.contextTop,e=this.canvas.viewportTransform,n=this._points[0],i=this._points[1];t.save(),t.transform(e[0],e[1],e[2],e[3],e[4],e[5]),t.beginPath(),2===this._points.length&&n.x===i.x&&n.y===i.y&&(n.x-=.5,i.x+=.5),t.moveTo(n.x,n.y);for(var r=1,s=this._points.length;r<s;r++){var o=n.midPointFrom(i);t.quadraticCurveTo(n.x,n.y,o.x,o.y),n=this._points[r],i=this._points[r+1]}t.lineTo(n.x,n.y),t.stroke(),t.restore()},convertPointsToSVGPath:function(t){var e=[],n=new fabric.Point(t[0].x,t[0].y),i=new fabric.Point(t[1].x,t[1].y);e.push("M ",t[0].x," ",t[0].y," ");for(var r=1,s=t.length;r<s;r++){var o=n.midPointFrom(i);e.push("Q ",n.x," ",n.y," ",o.x," ",o.y," "),n=new fabric.Point(t[r].x,t[r].y),r+1<t.length&&(i=new fabric.Point(t[r+1].x,t[r+1].y))}return e.push("L ",n.x," ",n.y," "),e},createPath:function(t){var e=new fabric.Path(t,{fill:null,stroke:this.color,strokeWidth:this.width,strokeLineCap:this.strokeLineCap,strokeLineJoin:this.strokeLineJoin,strokeDashArray:this.strokeDashArray,originX:"center",originY:"center"});return this.shadow&&(this.shadow.affectStroke=!0,e.setShadow(this.shadow)),e},_finalizeAndAddPath:function(){var t=this.canvas.contextTop;t.closePath();var e=this.convertPointsToSVGPath(this._points).join("");if("M 0 0 Q 0 0 0 0 L 0 0"===e)return void this.canvas.renderAll();var n=this.createPath(e);this.canvas.add(n),n.setCoords(),this.canvas.clearContext(this.canvas.contextTop),this._resetShadow(),this.canvas.renderAll(),this.canvas.fire("path:created",{path:n})}})}(),fabric.CircleBrush=fabric.util.createClass(fabric.BaseBrush,{width:10,initialize:function(t){this.canvas=t,this.points=[]},drawDot:function(t){var e=this.addPoint(t),n=this.canvas.contextTop,i=this.canvas.viewportTransform;n.save(),n.transform(i[0],i[1],i[2],i[3],i[4],i[5]),n.fillStyle=e.fill,n.beginPath(),n.arc(e.x,e.y,e.radius,0,2*Math.PI,!1),n.closePath(),n.fill(),n.restore()},onMouseDown:function(t){this.points.length=0,this.canvas.clearContext(this.canvas.contextTop),this._setShadow(),this.drawDot(t)},onMouseMove:function(t){this.drawDot(t)},onMouseUp:function(){var t=this.canvas.renderOnAddRemove;this.canvas.renderOnAddRemove=!1;for(var e=[],n=0,i=this.points.length;n<i;n++){var r=this.points[n],s=new fabric.Circle({radius:r.radius,left:r.x,top:r.y,originX:"center",originY:"center",fill:r.fill});this.shadow&&s.setShadow(this.shadow),e.push(s)}var o=new fabric.Group(e,{originX:"center",
originY:"center"});o.canvas=this.canvas,this.canvas.add(o),this.canvas.fire("path:created",{path:o}),this.canvas.clearContext(this.canvas.contextTop),this._resetShadow(),this.canvas.renderOnAddRemove=t,this.canvas.renderAll()},addPoint:function(t){var e=new fabric.Point(t.x,t.y),n=fabric.util.getRandomInt(Math.max(0,this.width-20),this.width+20)/2,i=new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0,100)/100).toRgba();return e.radius=n,e.fill=i,this.points.push(e),e}}),fabric.SprayBrush=fabric.util.createClass(fabric.BaseBrush,{width:10,density:20,dotWidth:1,dotWidthVariance:1,randomOpacity:!1,optimizeOverlapping:!0,initialize:function(t){this.canvas=t,this.sprayChunks=[]},onMouseDown:function(t){this.sprayChunks.length=0,this.canvas.clearContext(this.canvas.contextTop),this._setShadow(),this.addSprayChunk(t),this.render()},onMouseMove:function(t){this.addSprayChunk(t),this.render()},onMouseUp:function(){var t=this.canvas.renderOnAddRemove;this.canvas.renderOnAddRemove=!1;for(var e=[],n=0,i=this.sprayChunks.length;n<i;n++)for(var r=this.sprayChunks[n],s=0,o=r.length;s<o;s++){var a=new fabric.Rect({width:r[s].width,height:r[s].width,left:r[s].x+1,top:r[s].y+1,originX:"center",originY:"center",fill:this.color});this.shadow&&a.setShadow(this.shadow),e.push(a)}this.optimizeOverlapping&&(e=this._getOptimizedRects(e));var c=new fabric.Group(e,{originX:"center",originY:"center"});c.canvas=this.canvas,this.canvas.add(c),this.canvas.fire("path:created",{path:c}),this.canvas.clearContext(this.canvas.contextTop),this._resetShadow(),this.canvas.renderOnAddRemove=t,this.canvas.renderAll()},_getOptimizedRects:function(t){for(var e,n={},i=0,r=t.length;i<r;i++)e=t[i].left+""+t[i].top,n[e]||(n[e]=t[i]);var s=[];for(e in n)s.push(n[e]);return s},render:function(){var t=this.canvas.contextTop;t.fillStyle=this.color;var e=this.canvas.viewportTransform;t.save(),t.transform(e[0],e[1],e[2],e[3],e[4],e[5]);for(var n=0,i=this.sprayChunkPoints.length;n<i;n++){var r=this.sprayChunkPoints[n];"undefined"!=typeof r.opacity&&(t.globalAlpha=r.opacity),t.fillRect(r.x,r.y,r.width,r.width)}t.restore()},addSprayChunk:function(t){this.sprayChunkPoints=[];for(var e,n,i,r=this.width/2,s=0;s<this.density;s++){e=fabric.util.getRandomInt(t.x-r,t.x+r),n=fabric.util.getRandomInt(t.y-r,t.y+r),i=this.dotWidthVariance?fabric.util.getRandomInt(Math.max(1,this.dotWidth-this.dotWidthVariance),this.dotWidth+this.dotWidthVariance):this.dotWidth;var o=new fabric.Point(e,n);o.width=i,this.randomOpacity&&(o.opacity=fabric.util.getRandomInt(0,100)/100),this.sprayChunkPoints.push(o)}this.sprayChunks.push(this.sprayChunkPoints)}}),fabric.PatternBrush=fabric.util.createClass(fabric.PencilBrush,{getPatternSrc:function(){var t=20,e=5,n=fabric.document.createElement("canvas"),i=n.getContext("2d");return n.width=n.height=t+e,i.fillStyle=this.color,i.beginPath(),i.arc(t/2,t/2,t/2,0,2*Math.PI,!1),i.closePath(),i.fill(),n},getPatternSrcFunction:function(){return String(this.getPatternSrc).replace("this.color",'"'+this.color+'"')},getPattern:function(){return this.canvas.contextTop.createPattern(this.source||this.getPatternSrc(),"repeat")},_setBrushStyles:function(){this.callSuper("_setBrushStyles"),this.canvas.contextTop.strokeStyle=this.getPattern()},createPath:function(t){var e=this.callSuper("createPath",t),n=e._getLeftTopCoords().scalarAdd(e.strokeWidth/2);return e.stroke=new fabric.Pattern({source:this.source||this.getPatternSrcFunction(),offsetX:-n.x,offsetY:-n.y}),e}}),function(){var t=fabric.util.getPointer,e=fabric.util.degreesToRadians,n=fabric.util.radiansToDegrees,i=Math.atan2,r=Math.abs,s=.5;fabric.Canvas=fabric.util.createClass(fabric.StaticCanvas,{initialize:function(t,e){e||(e={}),this._initStatic(t,e),this._initInteractive(),this._createCacheCanvas()},uniScaleTransform:!1,uniScaleKey:"shiftKey",centeredScaling:!1,centeredRotation:!1,centeredKey:"altKey",altActionKey:"shiftKey",interactive:!0,selection:!0,selectionKey:"shiftKey",selectionColor:"rgba(100, 100, 255, 0.3)",selectionDashArray:[],selectionBorderColor:"rgba(255, 255, 255, 0.3)",selectionLineWidth:1,hoverCursor:"move",moveCursor:"move",defaultCursor:"default",freeDrawingCursor:"crosshair",rotationCursor:"crosshair",containerClass:"canvas-container",perPixelTargetFind:!1,targetFindTolerance:0,skipTargetFind:!1,isDrawingMode:!1,preserveObjectStacking:!1,_initInteractive:function(){this._currentTransform=null,this._groupSelector=null,this._initWrapperElement(),this._createUpperCanvas(),this._initEventListeners(),this._initRetinaScaling(),this.freeDrawingBrush=fabric.PencilBrush&&new fabric.PencilBrush(this),this.calcOffset()},_chooseObjectsToRender:function(){var t,e=this.getActiveGroup(),n=this.getActiveObject(),i=[],r=[];if(!e&&!n||this.preserveObjectStacking)i=this._objects;else{for(var s=0,o=this._objects.length;s<o;s++)t=this._objects[s],e&&e.contains(t)||t===n?r.push(t):i.push(t);e&&(e._set("_objects",r),i.push(e)),n&&i.push(n)}return i},renderAll:function(){!this.selection||this._groupSelector||this.isDrawingMode||this.clearContext(this.contextTop);var t=this.contextContainer;return this.renderCanvas(t,this._chooseObjectsToRender()),this},renderTop:function(){var t=this.contextTop;return this.clearContext(t),this.selection&&this._groupSelector&&this._drawSelection(t),this.fire("after:render"),this},_resetCurrentTransform:function(){var t=this._currentTransform;t.target.set({scaleX:t.original.scaleX,scaleY:t.original.scaleY,skewX:t.original.skewX,skewY:t.original.skewY,left:t.original.left,top:t.original.top}),this._shouldCenterTransform(t.target)?"rotate"===t.action?this._setOriginToCenter(t.target):("center"!==t.originX&&("right"===t.originX?t.mouseXSign=-1:t.mouseXSign=1),"center"!==t.originY&&("bottom"===t.originY?t.mouseYSign=-1:t.mouseYSign=1),t.originX="center",t.originY="center"):(t.originX=t.original.originX,t.originY=t.original.originY)},containsPoint:function(t,e,n){var i,r=!0,s=n||this.getPointer(t,r);return i=e.group&&e.group===this.getActiveGroup()?this._normalizePointer(e.group,s):{x:s.x,y:s.y},e.containsPoint(i)||e._findTargetCorner(s)},_normalizePointer:function(t,e){var n=t.calcTransformMatrix(),i=fabric.util.invertTransform(n),r=this.viewportTransform,s=this.restorePointerVpt(e),o=fabric.util.transformPoint(s,i);return fabric.util.transformPoint(o,r)},isTargetTransparent:function(t,e,n){var i=t.hasBorders,r=t.transparentCorners,s=this.contextCache,o=t.selectionBackgroundColor;t.hasBorders=t.transparentCorners=!1,t.selectionBackgroundColor="",s.save(),s.transform.apply(s,this.viewportTransform),t.render(s),s.restore(),t.active&&t._renderControls(s),t.hasBorders=i,t.transparentCorners=r,t.selectionBackgroundColor=o;var a=fabric.util.isTransparent(s,e,n,this.targetFindTolerance);return this.clearContext(s),a},_shouldClearSelection:function(t,e){var n=this.getActiveGroup(),i=this.getActiveObject();return!e||e&&n&&!n.contains(e)&&n!==e&&!t[this.selectionKey]||e&&!e.evented||e&&!e.selectable&&i&&i!==e},_shouldCenterTransform:function(t){if(t){var e,n=this._currentTransform;return"scale"===n.action||"scaleX"===n.action||"scaleY"===n.action?e=this.centeredScaling||t.centeredScaling:"rotate"===n.action&&(e=this.centeredRotation||t.centeredRotation),e?!n.altKey:n.altKey}},_getOriginFromCorner:function(t,e){var n={x:t.originX,y:t.originY};return"ml"===e||"tl"===e||"bl"===e?n.x="right":"mr"!==e&&"tr"!==e&&"br"!==e||(n.x="left"),"tl"===e||"mt"===e||"tr"===e?n.y="bottom":"bl"!==e&&"mb"!==e&&"br"!==e||(n.y="top"),n},_getActionFromCorner:function(t,e,n){if(!e)return"drag";switch(e){case"mtr":return"rotate";case"ml":case"mr":return n[this.altActionKey]?"skewY":"scaleX";case"mt":case"mb":return n[this.altActionKey]?"skewX":"scaleY";default:return"scale"}},_setupCurrentTransform:function(t,n){if(n){var i=this.getPointer(t),r=n._findTargetCorner(this.getPointer(t,!0)),s=this._getActionFromCorner(n,r,t),o=this._getOriginFromCorner(n,r);this._currentTransform={target:n,action:s,corner:r,scaleX:n.scaleX,scaleY:n.scaleY,skewX:n.skewX,skewY:n.skewY,offsetX:i.x-n.left,offsetY:i.y-n.top,originX:o.x,originY:o.y,ex:i.x,ey:i.y,lastX:i.x,lastY:i.y,left:n.left,top:n.top,theta:e(n.angle),width:n.width*n.scaleX,mouseXSign:1,mouseYSign:1,shiftKey:t.shiftKey,altKey:t[this.centeredKey]},this._currentTransform.original={left:n.left,top:n.top,scaleX:n.scaleX,scaleY:n.scaleY,skewX:n.skewX,skewY:n.skewY,originX:o.x,originY:o.y},this._resetCurrentTransform()}},_translateObject:function(t,e){var n=this._currentTransform,i=n.target,r=t-n.offsetX,s=e-n.offsetY,o=!i.get("lockMovementX")&&i.left!==r,a=!i.get("lockMovementY")&&i.top!==s;return o&&i.set("left",r),a&&i.set("top",s),o||a},_changeSkewTransformOrigin:function(t,e,n){var i="originX",r={0:"center"},s=e.target.skewX,o="left",a="right",c="mt"===e.corner||"ml"===e.corner?1:-1,l=1;t=t>0?1:-1,"y"===n&&(s=e.target.skewY,o="top",a="bottom",i="originY"),r[-1]=o,r[1]=a,e.target.flipX&&(l*=-1),e.target.flipY&&(l*=-1),0===s?(e.skewSign=-c*t*l,e[i]=r[-t]):(s=s>0?1:-1,e.skewSign=s,e[i]=r[s*c*l])},_skewObject:function(t,e,n){var i=this._currentTransform,r=i.target,s=!1,o=r.get("lockSkewingX"),a=r.get("lockSkewingY");if(o&&"x"===n||a&&"y"===n)return!1;var c,l,u=r.getCenterPoint(),h=r.toLocalPoint(new fabric.Point(t,e),"center","center")[n],f=r.toLocalPoint(new fabric.Point(i.lastX,i.lastY),"center","center")[n],d=r._getTransformedDimensions();return this._changeSkewTransformOrigin(h-f,i,n),c=r.toLocalPoint(new fabric.Point(t,e),i.originX,i.originY)[n],l=r.translateToOriginPoint(u,i.originX,i.originY),s=this._setObjectSkew(c,i,n,d),i.lastX=t,i.lastY=e,r.setPositionByOrigin(l,i.originX,i.originY),s},_setObjectSkew:function(t,e,n,i){var r,s,o,a,c,l,u,h,f,d=e.target,p=!1,g=e.skewSign;return"x"===n?(a="y",c="Y",l="X",h=0,f=d.skewY):(a="x",c="X",l="Y",h=d.skewX,f=0),o=d._getTransformedDimensions(h,f),u=2*Math.abs(t)-o[n],u<=2?r=0:(r=g*Math.atan(u/d["scale"+l]/(o[a]/d["scale"+c])),r=fabric.util.radiansToDegrees(r)),p=d["skew"+l]!==r,d.set("skew"+l,r),0!==d["skew"+c]&&(s=d._getTransformedDimensions(),r=i[a]/s[a]*d["scale"+c],d.set("scale"+c,r)),p},_scaleObject:function(t,e,n){var i=this._currentTransform,r=i.target,s=r.get("lockScalingX"),o=r.get("lockScalingY"),a=r.get("lockScalingFlip");if(s&&o)return!1;var c=r.translateToOriginPoint(r.getCenterPoint(),i.originX,i.originY),l=r.toLocalPoint(new fabric.Point(t,e),i.originX,i.originY),u=r._getTransformedDimensions(),h=!1;return this._setLocalMouse(l,i),h=this._setObjectScale(l,i,s,o,n,a,u),r.setPositionByOrigin(c,i.originX,i.originY),h},_setObjectScale:function(t,e,n,i,r,s,o){var a,c,l,u,h=e.target,f=!1,d=!1,p=!1;return l=t.x*h.scaleX/o.x,u=t.y*h.scaleY/o.y,a=h.scaleX!==l,c=h.scaleY!==u,s&&l<=0&&l<h.scaleX&&(f=!0),s&&u<=0&&u<h.scaleY&&(d=!0),"equally"!==r||n||i?r?"x"!==r||h.get("lockUniScaling")?"y"!==r||h.get("lockUniScaling")||d||i||h.set("scaleY",u)&&(p=p||c):f||n||h.set("scaleX",l)&&(p=p||a):(f||n||h.set("scaleX",l)&&(p=p||a),d||i||h.set("scaleY",u)&&(p=p||c)):f||d||(p=this._scaleObjectEqually(t,h,e,o)),e.newScaleX=l,e.newScaleY=u,f||d||this._flipObject(e,r),p},_scaleObjectEqually:function(t,e,n,i){var r,s=t.y+t.x,o=i.y*n.original.scaleY/e.scaleY+i.x*n.original.scaleX/e.scaleX;return n.newScaleX=n.original.scaleX*s/o,n.newScaleY=n.original.scaleY*s/o,r=n.newScaleX!==e.scaleX||n.newScaleY!==e.scaleY,e.set("scaleX",n.newScaleX),e.set("scaleY",n.newScaleY),r},_flipObject:function(t,e){t.newScaleX<0&&"y"!==e&&("left"===t.originX?t.originX="right":"right"===t.originX&&(t.originX="left")),t.newScaleY<0&&"x"!==e&&("top"===t.originY?t.originY="bottom":"bottom"===t.originY&&(t.originY="top"))},_setLocalMouse:function(t,e){var n=e.target;"right"===e.originX?t.x*=-1:"center"===e.originX&&(t.x*=2*e.mouseXSign,t.x<0&&(e.mouseXSign=-e.mouseXSign)),"bottom"===e.originY?t.y*=-1:"center"===e.originY&&(t.y*=2*e.mouseYSign,t.y<0&&(e.mouseYSign=-e.mouseYSign)),r(t.x)>n.padding?t.x<0?t.x+=n.padding:t.x-=n.padding:t.x=0,r(t.y)>n.padding?t.y<0?t.y+=n.padding:t.y-=n.padding:t.y=0},_rotateObject:function(t,e){var r=this._currentTransform;if(r.target.get("lockRotation"))return!1;var s=i(r.ey-r.top,r.ex-r.left),o=i(e-r.top,t-r.left),a=n(o-s+r.theta);return a<0&&(a=360+a),r.target.angle=a%360,!0},setCursor:function(t){this.upperCanvasEl.style.cursor=t},_resetObjectTransform:function(t){t.scaleX=1,t.scaleY=1,t.skewX=0,t.skewY=0,t.setAngle(0)},_drawSelection:function(t){var e=this._groupSelector,n=e.left,i=e.top,o=r(n),a=r(i);if(t.fillStyle=this.selectionColor,t.fillRect(e.ex-(n>0?0:-n),e.ey-(i>0?0:-i),o,a),t.lineWidth=this.selectionLineWidth,t.strokeStyle=this.selectionBorderColor,this.selectionDashArray.length>1){var c=e.ex+s-(n>0?0:o),l=e.ey+s-(i>0?0:a);t.beginPath(),fabric.util.drawDashedLine(t,c,l,c+o,l,this.selectionDashArray),fabric.util.drawDashedLine(t,c,l+a-1,c+o,l+a-1,this.selectionDashArray),fabric.util.drawDashedLine(t,c,l,c,l+a,this.selectionDashArray),fabric.util.drawDashedLine(t,c+o-1,l,c+o-1,l+a,this.selectionDashArray),t.closePath(),t.stroke()}else t.strokeRect(e.ex+s-(n>0?0:o),e.ey+s-(i>0?0:a),o,a)},findTarget:function(t,e){if(!this.skipTargetFind){var n=!0,i=this.getPointer(t,n),r=this.getActiveGroup(),s=this.getActiveObject();if(r&&!e&&this._checkTarget(i,r))return r;if(s&&this._checkTarget(i,s))return s;this.targets=[];var o=this._searchPossibleTargets(this._objects,i);return this._fireOverOutEvents(o,t),o}},_fireOverOutEvents:function(t,e){t?this._hoveredTarget!==t&&(this._hoveredTarget&&(this.fire("mouse:out",{target:this._hoveredTarget,e:e}),this._hoveredTarget.fire("mouseout")),this.fire("mouse:over",{target:t,e:e}),t.fire("mouseover"),this._hoveredTarget=t):this._hoveredTarget&&(this.fire("mouse:out",{target:this._hoveredTarget,e:e}),this._hoveredTarget.fire("mouseout"),this._hoveredTarget=null)},_checkTarget:function(t,e){if(e&&e.visible&&e.evented&&this.containsPoint(null,e,t)){if(!this.perPixelTargetFind&&!e.perPixelTargetFind||e.isEditing)return!0;var n=this.isTargetTransparent(e,t.x,t.y);if(!n)return!0}},_searchPossibleTargets:function(t,e){for(var n,i,r,s=t.length;s--;)if(this._checkTarget(e,t[s])){n=t[s],"group"===n.type&&n.subTargetCheck&&(i=this._normalizePointer(n,e),r=this._searchPossibleTargets(n._objects,i),r&&this.targets.push(r));break}return n},restorePointerVpt:function(t){return fabric.util.transformPoint(t,fabric.util.invertTransform(this.viewportTransform))},getPointer:function(e,n,i){i||(i=this.upperCanvasEl);var r,s=t(e),o=i.getBoundingClientRect(),a=o.width||0,c=o.height||0;return a&&c||("top"in o&&"bottom"in o&&(c=Math.abs(o.top-o.bottom)),"right"in o&&"left"in o&&(a=Math.abs(o.right-o.left))),this.calcOffset(),s.x=s.x-this._offset.left,s.y=s.y-this._offset.top,n||(s=this.restorePointerVpt(s)),r=0===a||0===c?{width:1,height:1}:{width:i.width/a,height:i.height/c},{x:s.x*r.width,y:s.y*r.height}},_createUpperCanvas:function(){var t=this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/,"");this.upperCanvasEl=this._createCanvasElement(),fabric.util.addClass(this.upperCanvasEl,"upper-canvas "+t),this.wrapperEl.appendChild(this.upperCanvasEl),this._copyCanvasStyle(this.lowerCanvasEl,this.upperCanvasEl),this._applyCanvasStyle(this.upperCanvasEl),this.contextTop=this.upperCanvasEl.getContext("2d")},_createCacheCanvas:function(){this.cacheCanvasEl=this._createCanvasElement(),this.cacheCanvasEl.setAttribute("width",this.width),this.cacheCanvasEl.setAttribute("height",this.height),this.contextCache=this.cacheCanvasEl.getContext("2d")},_initWrapperElement:function(){this.wrapperEl=fabric.util.wrapElement(this.lowerCanvasEl,"div",{"class":this.containerClass}),fabric.util.setStyle(this.wrapperEl,{width:this.getWidth()+"px",height:this.getHeight()+"px",position:"relative"}),fabric.util.makeElementUnselectable(this.wrapperEl)},_applyCanvasStyle:function(t){var e=this.getWidth()||t.width,n=this.getHeight()||t.height;fabric.util.setStyle(t,{position:"absolute",width:e+"px",height:n+"px",left:0,top:0}),t.width=e,t.height=n,fabric.util.makeElementUnselectable(t)},_copyCanvasStyle:function(t,e){e.style.cssText=t.style.cssText},getSelectionContext:function(){return this.contextTop},getSelectionElement:function(){return this.upperCanvasEl},_setActiveObject:function(t){this._activeObject&&this._activeObject.set("active",!1),this._activeObject=t,t.set("active",!0)},setActiveObject:function(t,e){return this._setActiveObject(t),this.renderAll(),this.fire("object:selected",{target:t,e:e}),t.fire("selected",{e:e}),this},getActiveObject:function(){return this._activeObject},_onObjectRemoved:function(t){this.getActiveObject()===t&&(this.fire("before:selection:cleared",{target:t}),this._discardActiveObject(),this.fire("selection:cleared",{target:t}),t.fire("deselected")),this.callSuper("_onObjectRemoved",t)},_discardActiveObject:function(){this._activeObject&&this._activeObject.set("active",!1),this._activeObject=null},discardActiveObject:function(t){var e=this._activeObject;return this.fire("before:selection:cleared",{target:e,e:t}),this._discardActiveObject(),this.fire("selection:cleared",{e:t}),e&&e.fire("deselected",{e:t}),this},_setActiveGroup:function(t){this._activeGroup=t,t&&t.set("active",!0)},setActiveGroup:function(t,e){return this._setActiveGroup(t),t&&(this.fire("object:selected",{target:t,e:e}),t.fire("selected",{e:e})),this},getActiveGroup:function(){return this._activeGroup},_discardActiveGroup:function(){var t=this.getActiveGroup();t&&t.destroy(),this.setActiveGroup(null)},discardActiveGroup:function(t){var e=this.getActiveGroup();return this.fire("before:selection:cleared",{e:t,target:e}),this._discardActiveGroup(),this.fire("selection:cleared",{e:t}),this},deactivateAll:function(){for(var t=this.getObjects(),e=0,n=t.length;e<n;e++)t[e].set("active",!1);return this._discardActiveGroup(),this._discardActiveObject(),this},deactivateAllWithDispatch:function(t){var e=this.getActiveGroup(),n=this.getActiveObject();return(n||e)&&this.fire("before:selection:cleared",{target:n||e,e:t}),this.deactivateAll(),(n||e)&&(this.fire("selection:cleared",{e:t,target:n}),n&&n.fire("deselected")),this},dispose:function(){this.callSuper("dispose");var t=this.wrapperEl;return this.removeListeners(),t.removeChild(this.upperCanvasEl),t.removeChild(this.lowerCanvasEl),delete this.upperCanvasEl,t.parentNode&&t.parentNode.replaceChild(this.lowerCanvasEl,this.wrapperEl),delete this.wrapperEl,this},clear:function(){return this.discardActiveGroup(),this.discardActiveObject(),this.clearContext(this.contextTop),this.callSuper("clear")},drawControls:function(t){var e=this.getActiveGroup();e?e._renderControls(t):this._drawObjectsControls(t)},_drawObjectsControls:function(t){for(var e=0,n=this._objects.length;e<n;++e)this._objects[e]&&this._objects[e].active&&this._objects[e]._renderControls(t)}});for(var o in fabric.StaticCanvas)"prototype"!==o&&(fabric.Canvas[o]=fabric.StaticCanvas[o]);fabric.isTouchSupported&&(fabric.Canvas.prototype._setCursorFromEvent=function(){}),fabric.Element=fabric.Canvas}(),function(){var t={mt:0,tr:1,mr:2,br:3,mb:4,bl:5,ml:6,tl:7},e=fabric.util.addListener,n=fabric.util.removeListener;fabric.util.object.extend(fabric.Canvas.prototype,{cursorMap:["n-resize","ne-resize","e-resize","se-resize","s-resize","sw-resize","w-resize","nw-resize"],_initEventListeners:function(){this._bindEvents(),e(fabric.window,"resize",this._onResize),e(this.upperCanvasEl,"mousedown",this._onMouseDown),e(this.upperCanvasEl,"mousemove",this._onMouseMove),e(this.upperCanvasEl,"mouseout",this._onMouseOut),e(this.upperCanvasEl,"wheel",this._onMouseWheel),e(this.upperCanvasEl,"touchstart",this._onMouseDown),e(this.upperCanvasEl,"touchmove",this._onMouseMove),"undefined"!=typeof eventjs&&"add"in eventjs&&(eventjs.add(this.upperCanvasEl,"gesture",this._onGesture),eventjs.add(this.upperCanvasEl,"drag",this._onDrag),eventjs.add(this.upperCanvasEl,"orientation",this._onOrientationChange),eventjs.add(this.upperCanvasEl,"shake",this._onShake),eventjs.add(this.upperCanvasEl,"longpress",this._onLongPress))},_bindEvents:function(){this._onMouseDown=this._onMouseDown.bind(this),this._onMouseMove=this._onMouseMove.bind(this),this._onMouseUp=this._onMouseUp.bind(this),this._onResize=this._onResize.bind(this),this._onGesture=this._onGesture.bind(this),this._onDrag=this._onDrag.bind(this),this._onShake=this._onShake.bind(this),this._onLongPress=this._onLongPress.bind(this),this._onOrientationChange=this._onOrientationChange.bind(this),this._onMouseWheel=this._onMouseWheel.bind(this),this._onMouseOut=this._onMouseOut.bind(this)},removeListeners:function(){n(fabric.window,"resize",this._onResize),n(this.upperCanvasEl,"mousedown",this._onMouseDown),n(this.upperCanvasEl,"mousemove",this._onMouseMove),n(this.upperCanvasEl,"mouseout",this._onMouseOut),n(this.upperCanvasEl,"wheel",this._onMouseWheel),n(this.upperCanvasEl,"touchstart",this._onMouseDown),n(this.upperCanvasEl,"touchmove",this._onMouseMove),"undefined"!=typeof eventjs&&"remove"in eventjs&&(eventjs.remove(this.upperCanvasEl,"gesture",this._onGesture),eventjs.remove(this.upperCanvasEl,"drag",this._onDrag),eventjs.remove(this.upperCanvasEl,"orientation",this._onOrientationChange),eventjs.remove(this.upperCanvasEl,"shake",this._onShake),eventjs.remove(this.upperCanvasEl,"longpress",this._onLongPress))},_onGesture:function(t,e){this.__onTransformGesture&&this.__onTransformGesture(t,e)},_onDrag:function(t,e){this.__onDrag&&this.__onDrag(t,e)},_onMouseWheel:function(t){this.__onMouseWheel(t)},_onMouseOut:function(t){var e=this._hoveredTarget;this.fire("mouse:out",{target:e,e:t}),this._hoveredTarget=null,e&&e.fire("mouseout",{e:t})},_onOrientationChange:function(t,e){this.__onOrientationChange&&this.__onOrientationChange(t,e)},_onShake:function(t,e){this.__onShake&&this.__onShake(t,e)},_onLongPress:function(t,e){this.__onLongPress&&this.__onLongPress(t,e)},_onMouseDown:function(t){this.__onMouseDown(t),e(fabric.document,"touchend",this._onMouseUp),e(fabric.document,"touchmove",this._onMouseMove),n(this.upperCanvasEl,"mousemove",this._onMouseMove),n(this.upperCanvasEl,"touchmove",this._onMouseMove),"touchstart"===t.type?n(this.upperCanvasEl,"mousedown",this._onMouseDown):(e(fabric.document,"mouseup",this._onMouseUp),e(fabric.document,"mousemove",this._onMouseMove))},_onMouseUp:function(t){if(this.__onMouseUp(t),n(fabric.document,"mouseup",this._onMouseUp),n(fabric.document,"touchend",this._onMouseUp),n(fabric.document,"mousemove",this._onMouseMove),n(fabric.document,"touchmove",this._onMouseMove),e(this.upperCanvasEl,"mousemove",this._onMouseMove),e(this.upperCanvasEl,"touchmove",this._onMouseMove),"touchend"===t.type){var i=this;setTimeout(function(){e(i.upperCanvasEl,"mousedown",i._onMouseDown)},400)}},_onMouseMove:function(t){!this.allowTouchScrolling&&t.preventDefault&&t.preventDefault(),this.__onMouseMove(t)},_onResize:function(){this.calcOffset()},_shouldRender:function(t,e){var n=this.getActiveGroup()||this.getActiveObject();return!!(t&&(t.isMoving||t!==n)||!t&&n||!t&&!n&&!this._groupSelector||e&&this._previousPointer&&this.selection&&(e.x!==this._previousPointer.x||e.y!==this._previousPointer.y))},__onMouseUp:function(t){var e,n=!0,i=this._currentTransform,r=this._groupSelector,s=!r||0===r.left&&0===r.top;if(this.isDrawingMode&&this._isCurrentlyDrawing)return void this._onMouseUpInDrawingMode(t);i&&(this._finalizeCurrentTransform(),n=!i.actionPerformed),e=n?this.findTarget(t,!0):i.target;var o=this._shouldRender(e,this.getPointer(t));e||!s?this._maybeGroupObjects(t):(this._groupSelector=null,this._currentTransform=null),e&&(e.isMoving=!1),this._handleCursorAndEvent(t,e,"up"),e&&(e.__corner=0),o&&this.renderAll()},_handleCursorAndEvent:function(t,e,n){this._setCursorFromEvent(t,e),this._handleEvent(t,n,e?e:null)},_handleEvent:function(t,e,n){var i=void 0===typeof n?this.findTarget(t):n,r=this.targets||[],s={e:t,target:i,subTargets:r};this.fire("mouse:"+e,s),i&&i.fire("mouse"+e,s);for(var o=0;o<r.length;o++)r[o].fire("mouse"+e,s)},_finalizeCurrentTransform:function(){var t=this._currentTransform,e=t.target;e._scaling&&(e._scaling=!1),e.setCoords(),this._restoreOriginXY(e),(t.actionPerformed||this.stateful&&e.hasStateChanged())&&(this.fire("object:modified",{target:e}),e.fire("modified"))},_restoreOriginXY:function(t){if(this._previousOriginX&&this._previousOriginY){var e=t.translateToOriginPoint(t.getCenterPoint(),this._previousOriginX,this._previousOriginY);t.originX=this._previousOriginX,t.originY=this._previousOriginY,t.left=e.x,t.top=e.y,this._previousOriginX=null,this._previousOriginY=null}},_onMouseDownInDrawingMode:function(t){this._isCurrentlyDrawing=!0,this.discardActiveObject(t).renderAll(),this.clipTo&&fabric.util.clipContext(this,this.contextTop);var e=this.getPointer(t);this.freeDrawingBrush.onMouseDown(e),this._handleEvent(t,"down")},_onMouseMoveInDrawingMode:function(t){if(this._isCurrentlyDrawing){var e=this.getPointer(t);this.freeDrawingBrush.onMouseMove(e)}this.setCursor(this.freeDrawingCursor),this._handleEvent(t,"move")},_onMouseUpInDrawingMode:function(t){this._isCurrentlyDrawing=!1,this.clipTo&&this.contextTop.restore(),this.freeDrawingBrush.onMouseUp(),this._handleEvent(t,"up")},__onMouseDown:function(t){var e="which"in t?1===t.which:0===t.button;if(e||fabric.isTouchSupported){if(this.isDrawingMode)return void this._onMouseDownInDrawingMode(t);if(!this._currentTransform){var n=this.findTarget(t),i=this.getPointer(t,!0);this._previousPointer=i;var r=this._shouldRender(n,i),s=this._shouldGroup(t,n);this._shouldClearSelection(t,n)?this._clearSelection(t,n,i):s&&(this._handleGrouping(t,n),n=this.getActiveGroup()),n&&(!n.selectable||!n.__corner&&s||(this._beforeTransform(t,n),this._setupCurrentTransform(t,n)),n!==this.getActiveGroup()&&n!==this.getActiveObject()&&(this.deactivateAll(),n.selectable&&this.setActiveObject(n,t))),this._handleEvent(t,"down",n?n:null),r&&this.renderAll()}}},_beforeTransform:function(t,e){this.stateful&&e.saveState(),e._findTargetCorner(this.getPointer(t))&&this.onBeforeScaleRotate(e)},_clearSelection:function(t,e,n){this.deactivateAllWithDispatch(t),e&&e.selectable?this.setActiveObject(e,t):this.selection&&(this._groupSelector={ex:n.x,ey:n.y,top:0,left:0})},_setOriginToCenter:function(t){this._previousOriginX=this._currentTransform.target.originX,this._previousOriginY=this._currentTransform.target.originY;var e=t.getCenterPoint();t.originX="center",t.originY="center",t.left=e.x,t.top=e.y,this._currentTransform.left=t.left,this._currentTransform.top=t.top},_setCenterToOrigin:function(t){var e=t.translateToOriginPoint(t.getCenterPoint(),this._previousOriginX,this._previousOriginY);t.originX=this._previousOriginX,t.originY=this._previousOriginY,t.left=e.x,t.top=e.y,this._previousOriginX=null,this._previousOriginY=null},__onMouseMove:function(t){var e,n;if(this.isDrawingMode)return void this._onMouseMoveInDrawingMode(t);if(!("undefined"!=typeof t.touches&&t.touches.length>1)){var i=this._groupSelector;i?(n=this.getPointer(t,!0),i.left=n.x-i.ex,i.top=n.y-i.ey,this.renderTop()):this._currentTransform?this._transformObject(t):(e=this.findTarget(t),this._setCursorFromEvent(t,e)),this._handleEvent(t,"move",e?e:null)}},__onMouseWheel:function(t){this.fire("mouse:wheel",{e:t})},_transformObject:function(t){var e=this.getPointer(t),n=this._currentTransform;n.reset=!1,n.target.isMoving=!0,this._beforeScaleTransform(t,n),this._performTransformAction(t,n,e),n.actionPerformed&&this.renderAll()},_performTransformAction:function(t,e,n){var i=n.x,r=n.y,s=e.target,o=e.action,a=!1;"rotate"===o?(a=this._rotateObject(i,r))&&this._fire("rotating",s,t):"scale"===o?(a=this._onScale(t,e,i,r))&&this._fire("scaling",s,t):"scaleX"===o?(a=this._scaleObject(i,r,"x"))&&this._fire("scaling",s,t):"scaleY"===o?(a=this._scaleObject(i,r,"y"))&&this._fire("scaling",s,t):"skewX"===o?(a=this._skewObject(i,r,"x"))&&this._fire("skewing",s,t):"skewY"===o?(a=this._skewObject(i,r,"y"))&&this._fire("skewing",s,t):(a=this._translateObject(i,r),a&&(this._fire("moving",s,t),this.setCursor(s.moveCursor||this.moveCursor))),e.actionPerformed=a},_fire:function(t,e,n){this.fire("object:"+t,{target:e,e:n}),e.fire(t,{e:n})},_beforeScaleTransform:function(t,e){if("scale"===e.action||"scaleX"===e.action||"scaleY"===e.action){var n=this._shouldCenterTransform(e.target);(n&&("center"!==e.originX||"center"!==e.originY)||!n&&"center"===e.originX&&"center"===e.originY)&&(this._resetCurrentTransform(),e.reset=!0)}},_onScale:function(t,e,n,i){return!t[this.uniScaleKey]&&!this.uniScaleTransform||e.target.get("lockUniScaling")?(e.reset||"scale"!==e.currentAction||this._resetCurrentTransform(),e.currentAction="scaleEqually",this._scaleObject(n,i,"equally")):(e.currentAction="scale",this._scaleObject(n,i))},_setCursorFromEvent:function(t,e){if(!e)return this.setCursor(this.defaultCursor),!1;var n=e.hoverCursor||this.hoverCursor;if(e.selectable){var i=this.getActiveGroup(),r=e._findTargetCorner&&(!i||!i.contains(e))&&e._findTargetCorner(this.getPointer(t,!0));r?this._setCornerCursor(r,e,t):this.setCursor(n)}else this.setCursor(n);return!0},_setCornerCursor:function(e,n,i){if(e in t)this.setCursor(this._getRotatedCornerCursor(e,n,i));else{if("mtr"!==e||!n.hasRotatingPoint)return this.setCursor(this.defaultCursor),!1;this.setCursor(this.rotationCursor)}},_getRotatedCornerCursor:function(e,n,i){var r=Math.round(n.getAngle()%360/45);return r<0&&(r+=8),r+=t[e],i[this.altActionKey]&&t[e]%2===0&&(r+=2),r%=8,this.cursorMap[r]}})}(),function(){var t=Math.min,e=Math.max;fabric.util.object.extend(fabric.Canvas.prototype,{_shouldGroup:function(t,e){var n=this.getActiveObject();return t[this.selectionKey]&&e&&e.selectable&&(this.getActiveGroup()||n&&n!==e)&&this.selection},_handleGrouping:function(t,e){var n=this.getActiveGroup();(e!==n||(e=this.findTarget(t,!0)))&&(n?this._updateActiveGroup(e,t):this._createActiveGroup(e,t),this._activeGroup&&this._activeGroup.saveCoords())},_updateActiveGroup:function(t,e){var n=this.getActiveGroup();if(n.contains(t)){if(n.removeWithUpdate(t),t.set("active",!1),1===n.size())return this.discardActiveGroup(e),void this.setActiveObject(n.item(0))}else n.addWithUpdate(t);this.fire("selection:created",{target:n,e:e}),n.set("active",!0)},_createActiveGroup:function(t,e){if(this._activeObject&&t!==this._activeObject){var n=this._createGroup(t);n.addWithUpdate(),this.setActiveGroup(n),this._activeObject=null,this.fire("selection:created",{target:n,e:e})}t.set("active",!0)},_createGroup:function(t){var e=this.getObjects(),n=e.indexOf(this._activeObject)<e.indexOf(t),i=n?[this._activeObject,t]:[t,this._activeObject];return this._activeObject.isEditing&&this._activeObject.exitEditing(),new fabric.Group(i,{canvas:this})},_groupSelectedObjects:function(t){var e=this._collectObjects();1===e.length?this.setActiveObject(e[0],t):e.length>1&&(e=new fabric.Group(e.reverse(),{canvas:this}),e.addWithUpdate(),this.setActiveGroup(e,t),e.saveCoords(),this.fire("selection:created",{target:e}),this.renderAll())},_collectObjects:function(){for(var n,i=[],r=this._groupSelector.ex,s=this._groupSelector.ey,o=r+this._groupSelector.left,a=s+this._groupSelector.top,c=new fabric.Point(t(r,o),t(s,a)),l=new fabric.Point(e(r,o),e(s,a)),u=r===o&&s===a,h=this._objects.length;h--&&(n=this._objects[h],!(n&&n.selectable&&n.visible&&(n.intersectsWithRect(c,l)||n.isContainedWithinRect(c,l)||n.containsPoint(c)||n.containsPoint(l))&&(n.set("active",!0),i.push(n),u))););return i},_maybeGroupObjects:function(t){this.selection&&this._groupSelector&&this._groupSelectedObjects(t);var e=this.getActiveGroup();e&&(e.setObjectsCoords().setCoords(),e.isMoving=!1,this.setCursor(this.defaultCursor)),this._groupSelector=null,this._currentTransform=null}})}(),fabric.util.object.extend(fabric.StaticCanvas.prototype,{toDataURL:function(t){t||(t={});var e=t.format||"png",n=t.quality||1,i=t.multiplier||1,r={left:t.left,top:t.top,width:t.width,height:t.height};return this._isRetinaScaling()&&(i*=fabric.devicePixelRatio),1!==i?this.__toDataURLWithMultiplier(e,n,r,i):this.__toDataURL(e,n,r)},__toDataURL:function(t,e,n){this.renderAll();var i=this.contextContainer.canvas,r=this.__getCroppedCanvas(i,n);
"jpg"===t&&(t="jpeg");var s=fabric.StaticCanvas.supports("toDataURLWithQuality")?(r||i).toDataURL("image/"+t,e):(r||i).toDataURL("image/"+t);return r&&(r=null),s},__getCroppedCanvas:function(t,e){var n,i,r="left"in e||"top"in e||"width"in e||"height"in e;return r&&(n=fabric.util.createCanvasElement(),i=n.getContext("2d"),n.width=e.width||this.width,n.height=e.height||this.height,i.drawImage(t,-e.left||0,-e.top||0)),n},__toDataURLWithMultiplier:function(t,e,n,i){var r=this.getWidth(),s=this.getHeight(),o=r*i,a=s*i,c=this.getActiveObject(),l=this.getActiveGroup(),u=this.getZoom(),h=u*i/fabric.devicePixelRatio;i>1&&this.setDimensions({width:o,height:a}),this.setZoom(h),n.left&&(n.left*=i),n.top&&(n.top*=i),n.width?n.width*=i:i<1&&(n.width=o),n.height?n.height*=i:i<1&&(n.height=a),l?this._tempRemoveBordersControlsFromGroup(l):c&&this.deactivateAll&&this.deactivateAll();var f=this.__toDataURL(t,e,n);return l?this._restoreBordersControlsOnGroup(l):c&&this.setActiveObject&&this.setActiveObject(c),this.setZoom(u),this.setDimensions({width:r,height:s}),f},toDataURLWithMultiplier:function(t,e,n){return this.toDataURL({format:t,multiplier:e,quality:n})},_tempRemoveBordersControlsFromGroup:function(t){t.origHasControls=t.hasControls,t.origBorderColor=t.borderColor,t.hasControls=!0,t.borderColor="rgba(0,0,0,0)",t.forEachObject(function(t){t.origBorderColor=t.borderColor,t.borderColor="rgba(0,0,0,0)"})},_restoreBordersControlsOnGroup:function(t){t.hideControls=t.origHideControls,t.borderColor=t.origBorderColor,t.forEachObject(function(t){t.borderColor=t.origBorderColor,delete t.origBorderColor})}}),fabric.util.object.extend(fabric.StaticCanvas.prototype,{loadFromDatalessJSON:function(t,e,n){return this.loadFromJSON(t,e,n)},loadFromJSON:function(t,e,n){if(t){var i="string"==typeof t?JSON.parse(t):fabric.util.object.clone(t);this.clear();var r=this;return this._enlivenObjects(i.objects,function(){r._setBgOverlay(i,function(){delete i.objects,delete i.backgroundImage,delete i.overlayImage,delete i.background,delete i.overlay;for(var t in i)r[t]=i[t];e&&e()})},n),this}},_setBgOverlay:function(t,e){var n=this,i={backgroundColor:!1,overlayColor:!1,backgroundImage:!1,overlayImage:!1};if(!(t.backgroundImage||t.overlayImage||t.background||t.overlay))return void(e&&e());var r=function(){i.backgroundImage&&i.overlayImage&&i.backgroundColor&&i.overlayColor&&(n.renderAll(),e&&e())};this.__setBgOverlay("backgroundImage",t.backgroundImage,i,r),this.__setBgOverlay("overlayImage",t.overlayImage,i,r),this.__setBgOverlay("backgroundColor",t.background,i,r),this.__setBgOverlay("overlayColor",t.overlay,i,r),r()},__setBgOverlay:function(t,e,n,i){var r=this;return e?void("backgroundImage"===t||"overlayImage"===t?fabric.Image.fromObject(e,function(e){r[t]=e,n[t]=!0,i&&i()}):this["set"+fabric.util.string.capitalize(t,!0)](e,function(){n[t]=!0,i&&i()})):void(n[t]=!0)},_enlivenObjects:function(t,e,n){var i=this;if(!t||0===t.length)return void(e&&e());var r=this.renderOnAddRemove;this.renderOnAddRemove=!1,fabric.util.enlivenObjects(t,function(t){t.forEach(function(t,e){i.insertAt(t,e)}),i.renderOnAddRemove=r,e&&e()},null,n)},_toDataURL:function(t,e){this.clone(function(n){e(n.toDataURL(t))})},_toDataURLWithMultiplier:function(t,e,n){this.clone(function(i){n(i.toDataURLWithMultiplier(t,e))})},clone:function(t,e){var n=JSON.stringify(this.toJSON(e));this.cloneWithoutData(function(e){e.loadFromJSON(n,function(){t&&t(e)})})},cloneWithoutData:function(t){var e=fabric.document.createElement("canvas");e.width=this.getWidth(),e.height=this.getHeight();var n=new fabric.Canvas(e);n.clipTo=this.clipTo,this.backgroundImage?(n.setBackgroundImage(this.backgroundImage.src,function(){n.renderAll(),t&&t(n)}),n.backgroundImageOpacity=this.backgroundImageOpacity,n.backgroundImageStretch=this.backgroundImageStretch):t&&t(n)}}),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend,i=e.util.toFixed,r=e.util.string.capitalize,s=e.util.degreesToRadians,o=e.StaticCanvas.supports("setLineDash");e.Object||(e.Object=e.util.createClass({type:"object",originX:"left",originY:"top",top:0,left:0,width:0,height:0,scaleX:1,scaleY:1,flipX:!1,flipY:!1,opacity:1,angle:0,skewX:0,skewY:0,cornerSize:13,transparentCorners:!0,hoverCursor:null,moveCursor:null,padding:0,borderColor:"rgba(102,153,255,0.75)",borderDashArray:null,cornerColor:"rgba(102,153,255,0.5)",cornerStrokeColor:null,cornerStyle:"rect",cornerDashArray:null,centeredScaling:!1,centeredRotation:!0,fill:"rgb(0,0,0)",fillRule:"nonzero",globalCompositeOperation:"source-over",backgroundColor:"",selectionBackgroundColor:"",stroke:null,strokeWidth:1,strokeDashArray:null,strokeLineCap:"butt",strokeLineJoin:"miter",strokeMiterLimit:10,shadow:null,borderOpacityWhenMoving:.4,borderScaleFactor:1,transformMatrix:null,minScaleLimit:.01,selectable:!0,evented:!0,visible:!0,hasControls:!0,hasBorders:!0,hasRotatingPoint:!0,rotatingPointOffset:40,perPixelTargetFind:!1,includeDefaultValues:!0,clipTo:null,lockMovementX:!1,lockMovementY:!1,lockRotation:!1,lockScalingX:!1,lockScalingY:!1,lockUniScaling:!1,lockSkewingX:!1,lockSkewingY:!1,lockScalingFlip:!1,excludeFromExport:!1,stateProperties:"top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor alignX alignY meetOrSlice skewX skewY".split(" "),initialize:function(t){t&&this.setOptions(t)},_initGradient:function(t){!t.fill||!t.fill.colorStops||t.fill instanceof e.Gradient||this.set("fill",new e.Gradient(t.fill)),!t.stroke||!t.stroke.colorStops||t.stroke instanceof e.Gradient||this.set("stroke",new e.Gradient(t.stroke))},_initPattern:function(t){!t.fill||!t.fill.source||t.fill instanceof e.Pattern||this.set("fill",new e.Pattern(t.fill)),!t.stroke||!t.stroke.source||t.stroke instanceof e.Pattern||this.set("stroke",new e.Pattern(t.stroke))},_initClipping:function(t){if(t.clipTo&&"string"==typeof t.clipTo){var n=e.util.getFunctionBody(t.clipTo);"undefined"!=typeof n&&(this.clipTo=new Function("ctx",n))}},setOptions:function(t){for(var e in t)this.set(e,t[e]);this._initGradient(t),this._initPattern(t),this._initClipping(t)},transform:function(t,e){this.group&&!this.group._transformDone&&this.group===this.canvas._activeGroup&&this.group.transform(t);var n=e?this._getLeftTopCoords():this.getCenterPoint();t.translate(n.x,n.y),t.rotate(s(this.angle)),t.scale(this.scaleX*(this.flipX?-1:1),this.scaleY*(this.flipY?-1:1)),t.transform(1,0,Math.tan(s(this.skewX)),1,0,0),t.transform(1,Math.tan(s(this.skewY)),0,1,0,0)},toObject:function(t){var n=e.Object.NUM_FRACTION_DIGITS,r={type:this.type,originX:this.originX,originY:this.originY,left:i(this.left,n),top:i(this.top,n),width:i(this.width,n),height:i(this.height,n),fill:this.fill&&this.fill.toObject?this.fill.toObject():this.fill,stroke:this.stroke&&this.stroke.toObject?this.stroke.toObject():this.stroke,strokeWidth:i(this.strokeWidth,n),strokeDashArray:this.strokeDashArray?this.strokeDashArray.concat():this.strokeDashArray,strokeLineCap:this.strokeLineCap,strokeLineJoin:this.strokeLineJoin,strokeMiterLimit:i(this.strokeMiterLimit,n),scaleX:i(this.scaleX,n),scaleY:i(this.scaleY,n),angle:i(this.getAngle(),n),flipX:this.flipX,flipY:this.flipY,opacity:i(this.opacity,n),shadow:this.shadow&&this.shadow.toObject?this.shadow.toObject():this.shadow,visible:this.visible,clipTo:this.clipTo&&String(this.clipTo),backgroundColor:this.backgroundColor,fillRule:this.fillRule,globalCompositeOperation:this.globalCompositeOperation,transformMatrix:this.transformMatrix?this.transformMatrix.concat():this.transformMatrix,skewX:i(this.skewX,n),skewY:i(this.skewY,n)};return this.includeDefaultValues||(r=this._removeDefaultValues(r)),e.util.populateWithProperties(this,r,t),r},toDatalessObject:function(t){return this.toObject(t)},_removeDefaultValues:function(t){var n=e.util.getKlass(t.type).prototype,i=n.stateProperties;return i.forEach(function(e){t[e]===n[e]&&delete t[e];var i="[object Array]"===Object.prototype.toString.call(t[e])&&"[object Array]"===Object.prototype.toString.call(n[e]);i&&0===t[e].length&&0===n[e].length&&delete t[e]}),t},toString:function(){return"#<fabric."+r(this.type)+">"},get:function(t){return this[t]},getObjectScaling:function(){var t=this.scaleX,e=this.scaleY;if(this.group){var n=this.group.getObjectScaling();t*=n.scaleX,e*=n.scaleY}return{scaleX:t,scaleY:e}},_setObject:function(t){for(var e in t)this._set(e,t[e])},set:function(t,e){return"object"==typeof t?this._setObject(t):"function"==typeof e&&"clipTo"!==t?this._set(t,e(this.get(t))):this._set(t,e),this},_set:function(t,n){var i="scaleX"===t||"scaleY"===t;return i&&(n=this._constrainScale(n)),"scaleX"===t&&n<0?(this.flipX=!this.flipX,n*=-1):"scaleY"===t&&n<0?(this.flipY=!this.flipY,n*=-1):"shadow"!==t||!n||n instanceof e.Shadow||(n=new e.Shadow(n)),this[t]=n,"width"!==t&&"height"!==t||(this.minScaleLimit=Math.min(.1,1/Math.max(this.width,this.height))),this},setOnGroup:function(){},toggle:function(t){var e=this.get(t);return"boolean"==typeof e&&this.set(t,!e),this},setSourcePath:function(t){return this.sourcePath=t,this},getViewportTransform:function(){return this.canvas&&this.canvas.viewportTransform?this.canvas.viewportTransform:[1,0,0,1,0,0]},render:function(t,n){0===this.width&&0===this.height||!this.visible||(t.save(),this._setupCompositeOperation(t),this.drawSelectionBackground(t),n||this.transform(t),this._setStrokeStyles(t),this._setFillStyles(t),this.transformMatrix&&t.transform.apply(t,this.transformMatrix),this._setOpacity(t),this._setShadow(t),this.clipTo&&e.util.clipContext(this,t),this._render(t,n),this.clipTo&&t.restore(),t.restore())},_setOpacity:function(t){this.group&&this.group._setOpacity(t),t.globalAlpha*=this.opacity},_setStrokeStyles:function(t){this.stroke&&(t.lineWidth=this.strokeWidth,t.lineCap=this.strokeLineCap,t.lineJoin=this.strokeLineJoin,t.miterLimit=this.strokeMiterLimit,t.strokeStyle=this.stroke.toLive?this.stroke.toLive(t,this):this.stroke)},_setFillStyles:function(t){this.fill&&(t.fillStyle=this.fill.toLive?this.fill.toLive(t,this):this.fill)},_setLineDash:function(t,e,n){e&&(1&e.length&&e.push.apply(e,e),o?t.setLineDash(e):n&&n(t))},_renderControls:function(t,n){if(!(!this.active||n||this.group&&this.group!==this.canvas.getActiveGroup())){var i,r=this.getViewportTransform(),o=this.calcTransformMatrix();o=e.util.multiplyTransformMatrices(r,o),i=e.util.qrDecompose(o),t.save(),t.translate(i.translateX,i.translateY),t.lineWidth=1*this.borderScaleFactor,t.globalAlpha=this.isMoving?this.borderOpacityWhenMoving:1,this.group&&this.group===this.canvas.getActiveGroup()?(t.rotate(s(i.angle)),this.drawBordersInGroup(t,i)):(t.rotate(s(this.angle)),this.drawBorders(t)),this.drawControls(t),t.restore()}},_setShadow:function(t){if(this.shadow){var n=this.canvas&&this.canvas.viewportTransform[0]||1,i=this.canvas&&this.canvas.viewportTransform[3]||1,r=this.getObjectScaling();this.canvas&&this.canvas._isRetinaScaling()&&(n*=e.devicePixelRatio,i*=e.devicePixelRatio),t.shadowColor=this.shadow.color,t.shadowBlur=this.shadow.blur*(n+i)*(r.scaleX+r.scaleY)/4,t.shadowOffsetX=this.shadow.offsetX*n*r.scaleX,t.shadowOffsetY=this.shadow.offsetY*i*r.scaleY}},_removeShadow:function(t){this.shadow&&(t.shadowColor="",t.shadowBlur=t.shadowOffsetX=t.shadowOffsetY=0)},_renderFill:function(t){if(this.fill){if(t.save(),this.fill.gradientTransform){var e=this.fill.gradientTransform;t.transform.apply(t,e)}this.fill.toLive&&t.translate(-this.width/2+this.fill.offsetX||0,-this.height/2+this.fill.offsetY||0),"evenodd"===this.fillRule?t.fill("evenodd"):t.fill(),t.restore()}},_renderStroke:function(t){if(this.stroke&&0!==this.strokeWidth){if(this.shadow&&!this.shadow.affectStroke&&this._removeShadow(t),t.save(),this._setLineDash(t,this.strokeDashArray,this._renderDashedStroke),this.stroke.gradientTransform){var e=this.stroke.gradientTransform;t.transform.apply(t,e)}this.stroke.toLive&&t.translate(-this.width/2+this.stroke.offsetX||0,-this.height/2+this.stroke.offsetY||0),t.stroke(),t.restore()}},clone:function(t,n){return this.constructor.fromObject?this.constructor.fromObject(this.toObject(n),t):new e.Object(this.toObject(n))},cloneAsImage:function(t,n){var i=this.toDataURL(n);return e.util.loadImage(i,function(n){t&&t(new e.Image(n))}),this},toDataURL:function(t){t||(t={});var n=e.util.createCanvasElement(),i=this.getBoundingRect();n.width=i.width,n.height=i.height,e.util.wrapElement(n,"div");var r=new e.StaticCanvas(n,{enableRetinaScaling:t.enableRetinaScaling});"jpg"===t.format&&(t.format="jpeg"),"jpeg"===t.format&&(r.backgroundColor="#fff");var s={active:this.get("active"),left:this.getLeft(),top:this.getTop()};this.set("active",!1),this.setPositionByOrigin(new e.Point(r.getWidth()/2,r.getHeight()/2),"center","center");var o=this.canvas;r.add(this);var a=r.toDataURL(t);return this.set(s).setCoords(),this.canvas=o,r.dispose(),r=null,a},isType:function(t){return this.type===t},complexity:function(){return 0},toJSON:function(t){return this.toObject(t)},setGradient:function(t,n){n||(n={});var i={colorStops:[]};i.type=n.type||(n.r1||n.r2?"radial":"linear"),i.coords={x1:n.x1,y1:n.y1,x2:n.x2,y2:n.y2},(n.r1||n.r2)&&(i.coords.r1=n.r1,i.coords.r2=n.r2),n.gradientTransform&&(i.gradientTransform=n.gradientTransform);for(var r in n.colorStops){var s=new e.Color(n.colorStops[r]);i.colorStops.push({offset:r,color:s.toRgb(),opacity:s.getAlpha()})}return this.set(t,e.Gradient.forObject(this,i))},setPatternFill:function(t){return this.set("fill",new e.Pattern(t))},setShadow:function(t){return this.set("shadow",t?new e.Shadow(t):null)},setColor:function(t){return this.set("fill",t),this},setAngle:function(t){var e=("center"!==this.originX||"center"!==this.originY)&&this.centeredRotation;return e&&this._setOriginToCenter(),this.set("angle",t),e&&this._resetOrigin(),this},centerH:function(){return this.canvas&&this.canvas.centerObjectH(this),this},viewportCenterH:function(){return this.canvas&&this.canvas.viewportCenterObjectH(this),this},centerV:function(){return this.canvas&&this.canvas.centerObjectV(this),this},viewportCenterV:function(){return this.canvas&&this.canvas.viewportCenterObjectV(this),this},center:function(){return this.canvas&&this.canvas.centerObject(this),this},viewportCenter:function(){return this.canvas&&this.canvas.viewportCenterObject(this),this},remove:function(){return this.canvas&&this.canvas.remove(this),this},getLocalPointer:function(t,n){n=n||this.canvas.getPointer(t);var i=new e.Point(n.x,n.y),r=this._getLeftTopCoords();return this.angle&&(i=e.util.rotatePoint(i,r,e.util.degreesToRadians(-this.angle))),{x:i.x-r.x,y:i.y-r.y}},_setupCompositeOperation:function(t){this.globalCompositeOperation&&(t.globalCompositeOperation=this.globalCompositeOperation)}}),e.util.createAccessors(e.Object),e.Object.prototype.rotate=e.Object.prototype.setAngle,n(e.Object.prototype,e.Observable),e.Object.NUM_FRACTION_DIGITS=2,e.Object.__uid=0)}("undefined"!=typeof exports?exports:this),function(){var t=fabric.util.degreesToRadians,e={left:-.5,center:0,right:.5},n={top:-.5,center:0,bottom:.5};fabric.util.object.extend(fabric.Object.prototype,{translateToGivenOrigin:function(t,i,r,s,o){var a,c,l,u=t.x,h=t.y;return"string"==typeof i?i=e[i]:i-=.5,"string"==typeof s?s=e[s]:s-=.5,a=s-i,"string"==typeof r?r=n[r]:r-=.5,"string"==typeof o?o=n[o]:o-=.5,c=o-r,(a||c)&&(l=this._getTransformedDimensions(),u=t.x+a*l.x,h=t.y+c*l.y),new fabric.Point(u,h)},translateToCenterPoint:function(e,n,i){var r=this.translateToGivenOrigin(e,n,i,"center","center");return this.angle?fabric.util.rotatePoint(r,e,t(this.angle)):r},translateToOriginPoint:function(e,n,i){var r=this.translateToGivenOrigin(e,"center","center",n,i);return this.angle?fabric.util.rotatePoint(r,e,t(this.angle)):r},getCenterPoint:function(){var t=new fabric.Point(this.left,this.top);return this.translateToCenterPoint(t,this.originX,this.originY)},getPointByOrigin:function(t,e){var n=this.getCenterPoint();return this.translateToOriginPoint(n,t,e)},toLocalPoint:function(e,n,i){var r,s,o=this.getCenterPoint();return r="undefined"!=typeof n&&"undefined"!=typeof i?this.translateToGivenOrigin(o,"center","center",n,i):new fabric.Point(this.left,this.top),s=new fabric.Point(e.x,e.y),this.angle&&(s=fabric.util.rotatePoint(s,o,-t(this.angle))),s.subtractEquals(r)},setPositionByOrigin:function(t,e,n){var i=this.translateToCenterPoint(t,e,n),r=this.translateToOriginPoint(i,this.originX,this.originY);this.set("left",r.x),this.set("top",r.y)},adjustPosition:function(n){var i,r,s=t(this.angle),o=this.getWidth(),a=Math.cos(s)*o,c=Math.sin(s)*o;i="string"==typeof this.originX?e[this.originX]:this.originX-.5,r="string"==typeof n?e[n]:n-.5,this.left+=a*(r-i),this.top+=c*(r-i),this.setCoords(),this.originX=n},_setOriginToCenter:function(){this._originalOriginX=this.originX,this._originalOriginY=this.originY;var t=this.getCenterPoint();this.originX="center",this.originY="center",this.left=t.x,this.top=t.y},_resetOrigin:function(){var t=this.translateToOriginPoint(this.getCenterPoint(),this._originalOriginX,this._originalOriginY);this.originX=this._originalOriginX,this.originY=this._originalOriginY,this.left=t.x,this.top=t.y,this._originalOriginX=null,this._originalOriginY=null},_getLeftTopCoords:function(){return this.translateToOriginPoint(this.getCenterPoint(),"left","top")}})}(),function(){function t(t){return[new fabric.Point(t.tl.x,t.tl.y),new fabric.Point(t.tr.x,t.tr.y),new fabric.Point(t.br.x,t.br.y),new fabric.Point(t.bl.x,t.bl.y)]}var e=fabric.util.degreesToRadians,n=fabric.util.multiplyTransformMatrices;fabric.util.object.extend(fabric.Object.prototype,{oCoords:null,intersectsWithRect:function(e,n){var i=t(this.oCoords),r=fabric.Intersection.intersectPolygonRectangle(i,e,n);return"Intersection"===r.status},intersectsWithObject:function(e){var n=fabric.Intersection.intersectPolygonPolygon(t(this.oCoords),t(e.oCoords));return"Intersection"===n.status},isContainedWithinObject:function(t){var e=t.getBoundingRect(),n=new fabric.Point(e.left,e.top),i=new fabric.Point(e.left+e.width,e.top+e.height);return this.isContainedWithinRect(n,i)},isContainedWithinRect:function(t,e){var n=this.getBoundingRect();return n.left>=t.x&&n.left+n.width<=e.x&&n.top>=t.y&&n.top+n.height<=e.y},containsPoint:function(t){this.oCoords||this.setCoords();var e=this._getImageLines(this.oCoords),n=this._findCrossPoints(t,e);return 0!==n&&n%2===1},_getImageLines:function(t){return{topline:{o:t.tl,d:t.tr},rightline:{o:t.tr,d:t.br},bottomline:{o:t.br,d:t.bl},leftline:{o:t.bl,d:t.tl}}},_findCrossPoints:function(t,e){var n,i,r,s,o,a,c,l=0;for(var u in e)if(c=e[u],!(c.o.y<t.y&&c.d.y<t.y||c.o.y>=t.y&&c.d.y>=t.y||(c.o.x===c.d.x&&c.o.x>=t.x?(o=c.o.x,a=t.y):(n=0,i=(c.d.y-c.o.y)/(c.d.x-c.o.x),r=t.y-n*t.x,s=c.o.y-i*c.o.x,o=-(r-s)/(n-i),a=r+n*o),o>=t.x&&(l+=1),2!==l)))break;return l},getBoundingRectWidth:function(){return this.getBoundingRect().width},getBoundingRectHeight:function(){return this.getBoundingRect().height},getBoundingRect:function(){return this.oCoords||this.setCoords(),fabric.util.makeBoundingBoxFromPoints([this.oCoords.tl,this.oCoords.tr,this.oCoords.br,this.oCoords.bl])},getWidth:function(){return this._getTransformedDimensions().x},getHeight:function(){return this._getTransformedDimensions().y},_constrainScale:function(t){return Math.abs(t)<this.minScaleLimit?t<0?-this.minScaleLimit:this.minScaleLimit:t},scale:function(t){return t=this._constrainScale(t),t<0&&(this.flipX=!this.flipX,this.flipY=!this.flipY,t*=-1),this.scaleX=t,this.scaleY=t,this.setCoords(),this},scaleToWidth:function(t){var e=this.getBoundingRect().width/this.getWidth();return this.scale(t/this.width/e)},scaleToHeight:function(t){var e=this.getBoundingRect().height/this.getHeight();return this.scale(t/this.height/e)},setCoords:function(){var t=e(this.angle),n=this.getViewportTransform(),i=this._calculateCurrentDimensions(),r=i.x,s=i.y;r<0&&(r=Math.abs(r));var o=Math.sin(t),a=Math.cos(t),c=r>0?Math.atan(s/r):0,l=r/Math.cos(c)/2,u=Math.cos(c+t)*l,h=Math.sin(c+t)*l,f=fabric.util.transformPoint(this.getCenterPoint(),n),d=new fabric.Point(f.x-u,f.y-h),p=new fabric.Point(d.x+r*a,d.y+r*o),g=new fabric.Point(d.x-s*o,d.y+s*a),v=new fabric.Point(f.x+u,f.y+h),m=new fabric.Point((d.x+g.x)/2,(d.y+g.y)/2),y=new fabric.Point((p.x+d.x)/2,(p.y+d.y)/2),b=new fabric.Point((v.x+p.x)/2,(v.y+p.y)/2),x=new fabric.Point((v.x+g.x)/2,(v.y+g.y)/2),$=new fabric.Point(y.x+o*this.rotatingPointOffset,y.y-a*this.rotatingPointOffset);return this.oCoords={tl:d,tr:p,br:v,bl:g,ml:m,mt:y,mr:b,mb:x,mtr:$},this._setCornerCoords&&this._setCornerCoords(),this},_calcRotateMatrix:function(){if(this.angle){var t=e(this.angle),n=Math.cos(t),i=Math.sin(t);return[n,i,-i,n,0,0]}return[1,0,0,1,0,0]},calcTransformMatrix:function(){var t=this.getCenterPoint(),e=[1,0,0,1,t.x,t.y],i=this._calcRotateMatrix(),r=this._calcDimensionsTransformMatrix(this.skewX,this.skewY,!0),s=this.group?this.group.calcTransformMatrix():[1,0,0,1,0,0];return s=n(s,e),s=n(s,i),s=n(s,r)},_calcDimensionsTransformMatrix:function(t,i,r){var s=[1,0,Math.tan(e(t)),1],o=[1,Math.tan(e(i)),0,1],a=this.scaleX*(r&&this.flipX?-1:1),c=this.scaleY*(r&&this.flipY?-1:1),l=[a,0,0,c],u=n(l,s,!0);return n(u,o,!0)}})}(),fabric.util.object.extend(fabric.Object.prototype,{sendToBack:function(){return this.group?fabric.StaticCanvas.prototype.sendToBack.call(this.group,this):this.canvas.sendToBack(this),this},bringToFront:function(){return this.group?fabric.StaticCanvas.prototype.bringToFront.call(this.group,this):this.canvas.bringToFront(this),this},sendBackwards:function(t){return this.group?fabric.StaticCanvas.prototype.sendBackwards.call(this.group,this,t):this.canvas.sendBackwards(this,t),this},bringForward:function(t){return this.group?fabric.StaticCanvas.prototype.bringForward.call(this.group,this,t):this.canvas.bringForward(this,t),this},moveTo:function(t){return this.group?fabric.StaticCanvas.prototype.moveTo.call(this.group,this,t):this.canvas.moveTo(this,t),this}}),function(){function t(t,e){if(e){if(e.toLive)return t+": url(#SVGID_"+e.id+"); ";var n=new fabric.Color(e),i=t+": "+n.toRgb()+"; ",r=n.getAlpha();return 1!==r&&(i+=t+"-opacity: "+r.toString()+"; "),i}return t+": none; "}fabric.util.object.extend(fabric.Object.prototype,{getSvgStyles:function(e){var n=this.fillRule,i=this.strokeWidth?this.strokeWidth:"0",r=this.strokeDashArray?this.strokeDashArray.join(" "):"none",s=this.strokeLineCap?this.strokeLineCap:"butt",o=this.strokeLineJoin?this.strokeLineJoin:"miter",a=this.strokeMiterLimit?this.strokeMiterLimit:"4",c="undefined"!=typeof this.opacity?this.opacity:"1",l=this.visible?"":" visibility: hidden;",u=e?"":this.getSvgFilter(),h=t("fill",this.fill),f=t("stroke",this.stroke);return[f,"stroke-width: ",i,"; ","stroke-dasharray: ",r,"; ","stroke-linecap: ",s,"; ","stroke-linejoin: ",o,"; ","stroke-miterlimit: ",a,"; ",h,"fill-rule: ",n,"; ","opacity: ",c,";",u,l].join("")},getSvgFilter:function(){return this.shadow?"filter: url(#SVGID_"+this.shadow.id+");":""},getSvgId:function(){return this.id?'id="'+this.id+'" ':""},getSvgTransform:function(){if(this.group&&"path-group"===this.group.type)return"";var t=fabric.util.toFixed,e=this.getAngle(),n=this.getSkewX()%360,i=this.getSkewY()%360,r=this.getCenterPoint(),s=fabric.Object.NUM_FRACTION_DIGITS,o="path-group"===this.type?"":"translate("+t(r.x,s)+" "+t(r.y,s)+")",a=0!==e?" rotate("+t(e,s)+")":"",c=1===this.scaleX&&1===this.scaleY?"":" scale("+t(this.scaleX,s)+" "+t(this.scaleY,s)+")",l=0!==n?" skewX("+t(n,s)+")":"",u=0!==i?" skewY("+t(i,s)+")":"",h="path-group"===this.type?this.width:0,f=this.flipX?" matrix(-1 0 0 1 "+h+" 0) ":"",d="path-group"===this.type?this.height:0,p=this.flipY?" matrix(1 0 0 -1 0 "+d+")":"";return[o,a,c,f,p,l,u].join("")},getSvgTransformMatrix:function(){return this.transformMatrix?" matrix("+this.transformMatrix.join(" ")+") ":""},_createBaseSVGMarkup:function(){var t=[];return this.fill&&this.fill.toLive&&t.push(this.fill.toSVG(this,!1)),this.stroke&&this.stroke.toLive&&t.push(this.stroke.toSVG(this,!1)),this.shadow&&t.push(this.shadow.toSVG(this)),t}})}(),fabric.util.object.extend(fabric.Object.prototype,{hasStateChanged:function(){return this.stateProperties.some(function(t){return this.get(t)!==this.originalState[t]},this)},saveState:function(t){return this.stateProperties.forEach(function(t){this.originalState[t]=this.get(t)},this),t&&t.stateProperties&&t.stateProperties.forEach(function(t){this.originalState[t]=this.get(t)},this),this},setupState:function(){return this.originalState={},this.saveState(),this}}),function(){var t=fabric.util.degreesToRadians,e=function(){return"undefined"!=typeof G_vmlCanvasManager};fabric.util.object.extend(fabric.Object.prototype,{_controlsVisibility:null,_findTargetCorner:function(t){if(!this.hasControls||!this.active)return!1;var e,n,i=t.x,r=t.y;this.__corner=0;for(var s in this.oCoords)if(this.isControlVisible(s)&&("mtr"!==s||this.hasRotatingPoint)&&(!this.get("lockUniScaling")||"mt"!==s&&"mr"!==s&&"mb"!==s&&"ml"!==s)&&(n=this._getImageLines(this.oCoords[s].corner),e=this._findCrossPoints({x:i,y:r},n),0!==e&&e%2===1))return this.__corner=s,s;return!1},_setCornerCoords:function(){var e,n,i=this.oCoords,r=t(45-this.angle),s=.707106*this.cornerSize,o=s*Math.cos(r),a=s*Math.sin(r);for(var c in i)e=i[c].x,n=i[c].y,i[c].corner={tl:{x:e-a,y:n-o},tr:{x:e+o,y:n-a},bl:{x:e-o,y:n+a},br:{x:e+a,y:n+o}}},_getNonTransformedDimensions:function(){var t=this.strokeWidth,e=this.width,n=this.height,i=!0,r=!0;return"line"===this.type&&"butt"===this.strokeLineCap&&(r=e,i=n),r&&(n+=n<0?-t:t),i&&(e+=e<0?-t:t),{x:e,y:n}},_getTransformedDimensions:function(t,e){"undefined"==typeof t&&(t=this.skewX),"undefined"==typeof e&&(e=this.skewY);var n,i,r=this._getNonTransformedDimensions(),s=r.x/2,o=r.y/2,a=[{x:-s,y:-o},{x:s,y:-o},{x:-s,y:o},{x:s,y:o}],c=this._calcDimensionsTransformMatrix(t,e,!1);for(n=0;n<a.length;n++)a[n]=fabric.util.transformPoint(a[n],c);return i=fabric.util.makeBoundingBoxFromPoints(a),{x:i.width,y:i.height}},_calculateCurrentDimensions:function(){var t=this.getViewportTransform(),e=this._getTransformedDimensions(),n=e.x,i=e.y,r=fabric.util.transformPoint(new fabric.Point(n,i),t,!0);return r.scalarAdd(2*this.padding)},drawSelectionBackground:function(e){if(!this.selectionBackgroundColor||this.group||this!==this.canvas.getActiveObject())return this;e.save();var n=this.getCenterPoint(),i=this._calculateCurrentDimensions(),r=this.canvas.viewportTransform;return e.translate(n.x,n.y),e.scale(1/r[0],1/r[3]),e.rotate(t(this.angle)),e.fillStyle=this.selectionBackgroundColor,e.fillRect(-i.x/2,-i.y/2,i.x,i.y),e.restore(),this},drawBorders:function(t){if(!this.hasBorders)return this;var e=this._calculateCurrentDimensions(),n=1/this.borderScaleFactor,i=e.x+n,r=e.y+n;if(t.save(),t.strokeStyle=this.borderColor,this._setLineDash(t,this.borderDashArray,null),t.strokeRect(-i/2,-r/2,i,r),this.hasRotatingPoint&&this.isControlVisible("mtr")&&!this.get("lockRotation")&&this.hasControls){var s=-r/2;t.beginPath(),t.moveTo(0,s),t.lineTo(0,s-this.rotatingPointOffset),t.closePath(),t.stroke()}return t.restore(),this},drawBordersInGroup:function(t,e){if(!this.hasBorders)return this;var n=this._getNonTransformedDimensions(),i=fabric.util.customTransformMatrix(e.scaleX,e.scaleY,e.skewX),r=fabric.util.transformPoint(n,i),s=1/this.borderScaleFactor,o=r.x+s+2*this.padding,a=r.y+s+2*this.padding;return t.save(),this._setLineDash(t,this.borderDashArray,null),t.strokeStyle=this.borderColor,t.strokeRect(-o/2,-a/2,o,a),t.restore(),this},drawControls:function(t){if(!this.hasControls)return this;var e=this._calculateCurrentDimensions(),n=e.x,i=e.y,r=this.cornerSize,s=-(n+r)/2,o=-(i+r)/2,a=this.transparentCorners?"stroke":"fill";return t.save(),t.strokeStyle=t.fillStyle=this.cornerColor,this.transparentCorners||(t.strokeStyle=this.cornerStrokeColor),this._setLineDash(t,this.cornerDashArray,null),this._drawControl("tl",t,a,s,o),this._drawControl("tr",t,a,s+n,o),this._drawControl("bl",t,a,s,o+i),this._drawControl("br",t,a,s+n,o+i),this.get("lockUniScaling")||(this._drawControl("mt",t,a,s+n/2,o),this._drawControl("mb",t,a,s+n/2,o+i),this._drawControl("mr",t,a,s+n,o+i/2),this._drawControl("ml",t,a,s,o+i/2)),this.hasRotatingPoint&&this._drawControl("mtr",t,a,s+n/2,o-this.rotatingPointOffset),t.restore(),this},_drawControl:function(t,n,i,r,s){if(this.isControlVisible(t)){var o=this.cornerSize,a=!this.transparentCorners&&this.cornerStrokeColor;switch(this.cornerStyle){case"circle":n.beginPath(),n.arc(r+o/2,s+o/2,o/2,0,2*Math.PI,!1),n[i](),a&&n.stroke();break;default:e()||this.transparentCorners||n.clearRect(r,s,o,o),n[i+"Rect"](r,s,o,o),a&&n.strokeRect(r,s,o,o)}}},isControlVisible:function(t){return this._getControlsVisibility()[t]},setControlVisible:function(t,e){return this._getControlsVisibility()[t]=e,this},setControlsVisibility:function(t){t||(t={});for(var e in t)this.setControlVisible(e,t[e]);return this},_getControlsVisibility:function(){return this._controlsVisibility||(this._controlsVisibility={tl:!0,tr:!0,br:!0,bl:!0,ml:!0,mt:!0,mr:!0,mb:!0,mtr:!0}),this._controlsVisibility}})}(),fabric.util.object.extend(fabric.StaticCanvas.prototype,{FX_DURATION:500,fxCenterObjectH:function(t,e){e=e||{};var n=function(){},i=e.onComplete||n,r=e.onChange||n,s=this;return fabric.util.animate({startValue:t.get("left"),endValue:this.getCenter().left,duration:this.FX_DURATION,onChange:function(e){t.set("left",e),s.renderAll(),r()},onComplete:function(){t.setCoords(),i()}}),this},fxCenterObjectV:function(t,e){e=e||{};var n=function(){},i=e.onComplete||n,r=e.onChange||n,s=this;return fabric.util.animate({startValue:t.get("top"),endValue:this.getCenter().top,duration:this.FX_DURATION,onChange:function(e){t.set("top",e),s.renderAll(),r()},onComplete:function(){t.setCoords(),i()}}),this},fxRemove:function(t,e){e=e||{};var n=function(){},i=e.onComplete||n,r=e.onChange||n,s=this;return fabric.util.animate({startValue:t.get("opacity"),endValue:0,duration:this.FX_DURATION,onStart:function(){t.set("active",!1)},onChange:function(e){t.set("opacity",e),s.renderAll(),r()},onComplete:function(){s.remove(t),i()}}),this}}),fabric.util.object.extend(fabric.Object.prototype,{animate:function(){if(arguments[0]&&"object"==typeof arguments[0]){var t,e,n=[];for(t in arguments[0])n.push(t);for(var i=0,r=n.length;i<r;i++)t=n[i],e=i!==r-1,this._animate(t,arguments[0][t],arguments[1],e)}else this._animate.apply(this,arguments);return this},_animate:function(t,e,n,i){var r,s=this;e=e.toString(),n=n?fabric.util.object.clone(n):{},~t.indexOf(".")&&(r=t.split("."));var o=r?this.get(r[0])[r[1]]:this.get(t);"from"in n||(n.from=o),e=~e.indexOf("=")?o+parseFloat(e.replace("=","")):parseFloat(e),fabric.util.animate({startValue:n.from,endValue:e,byValue:n.by,easing:n.easing,duration:n.duration,abort:n.abort&&function(){return n.abort.call(s)},onChange:function(e){r?s[r[0]][r[1]]=e:s.set(t,e),i||n.onChange&&n.onChange()},onComplete:function(){i||(s.setCoords(),n.onComplete&&n.onComplete())}})}}),function(t){"use strict";function e(t,e){var n=t.origin,i=t.axis1,r=t.axis2,s=t.dimension,o=e.nearest,a=e.center,c=e.farthest;return function(){switch(this.get(n)){case o:return Math.min(this.get(i),this.get(r));case a:return Math.min(this.get(i),this.get(r))+.5*this.get(s);case c:return Math.max(this.get(i),this.get(r))}}}var n=t.fabric||(t.fabric={}),i=n.util.object.extend,r={x1:1,x2:1,y1:1,y2:1},s=n.StaticCanvas.supports("setLineDash");return n.Line?void n.warn("fabric.Line is already defined"):(n.Line=n.util.createClass(n.Object,{type:"line",x1:0,y1:0,x2:0,y2:0,initialize:function(t,e){e=e||{},t||(t=[0,0,0,0]),this.callSuper("initialize",e),this.set("x1",t[0]),this.set("y1",t[1]),this.set("x2",t[2]),this.set("y2",t[3]),this._setWidthHeight(e)},_setWidthHeight:function(t){t||(t={}),this.width=Math.abs(this.x2-this.x1),this.height=Math.abs(this.y2-this.y1),this.left="left"in t?t.left:this._getLeftToOriginX(),
this.top="top"in t?t.top:this._getTopToOriginY()},_set:function(t,e){return this.callSuper("_set",t,e),"undefined"!=typeof r[t]&&this._setWidthHeight(),this},_getLeftToOriginX:e({origin:"originX",axis1:"x1",axis2:"x2",dimension:"width"},{nearest:"left",center:"center",farthest:"right"}),_getTopToOriginY:e({origin:"originY",axis1:"y1",axis2:"y2",dimension:"height"},{nearest:"top",center:"center",farthest:"bottom"}),_render:function(t,e){if(t.beginPath(),e){var n=this.getCenterPoint();t.translate(n.x-this.strokeWidth/2,n.y-this.strokeWidth/2)}if(!this.strokeDashArray||this.strokeDashArray&&s){var i=this.calcLinePoints();t.moveTo(i.x1,i.y1),t.lineTo(i.x2,i.y2)}t.lineWidth=this.strokeWidth;var r=t.strokeStyle;t.strokeStyle=this.stroke||t.fillStyle,this.stroke&&this._renderStroke(t),t.strokeStyle=r},_renderDashedStroke:function(t){var e=this.calcLinePoints();t.beginPath(),n.util.drawDashedLine(t,e.x1,e.y1,e.x2,e.y2,this.strokeDashArray),t.closePath()},toObject:function(t){return i(this.callSuper("toObject",t),this.calcLinePoints())},calcLinePoints:function(){var t=this.x1<=this.x2?-1:1,e=this.y1<=this.y2?-1:1,n=t*this.width*.5,i=e*this.height*.5,r=t*this.width*-.5,s=e*this.height*-.5;return{x1:n,x2:r,y1:i,y2:s}},toSVG:function(t){var e=this._createBaseSVGMarkup(),n={x1:this.x1,x2:this.x2,y1:this.y1,y2:this.y2};return this.group&&"path-group"===this.group.type||(n=this.calcLinePoints()),e.push("<line ",this.getSvgId(),'x1="',n.x1,'" y1="',n.y1,'" x2="',n.x2,'" y2="',n.y2,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n'),t?t(e.join("")):e.join("")},complexity:function(){return 1}}),n.Line.ATTRIBUTE_NAMES=n.SHARED_ATTRIBUTES.concat("x1 y1 x2 y2".split(" ")),n.Line.fromElement=function(t,e){var r=n.parseAttributes(t,n.Line.ATTRIBUTE_NAMES),s=[r.x1||0,r.y1||0,r.x2||0,r.y2||0];return new n.Line(s,i(r,e))},void(n.Line.fromObject=function(t){var e=[t.x1,t.y1,t.x2,t.y2];return new n.Line(e,t)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";function e(t){return"radius"in t&&t.radius>=0}var n=t.fabric||(t.fabric={}),i=Math.PI,r=n.util.object.extend;return n.Circle?void n.warn("fabric.Circle is already defined."):(n.Circle=n.util.createClass(n.Object,{type:"circle",radius:0,startAngle:0,endAngle:2*i,initialize:function(t){t=t||{},this.callSuper("initialize",t),this.set("radius",t.radius||0),this.startAngle=t.startAngle||this.startAngle,this.endAngle=t.endAngle||this.endAngle},_set:function(t,e){return this.callSuper("_set",t,e),"radius"===t&&this.setRadius(e),this},toObject:function(t){return r(this.callSuper("toObject",t),{radius:this.get("radius"),startAngle:this.startAngle,endAngle:this.endAngle})},toSVG:function(t){var e=this._createBaseSVGMarkup(),n=0,r=0,s=(this.endAngle-this.startAngle)%(2*i);if(0===s)this.group&&"path-group"===this.group.type&&(n=this.left+this.radius,r=this.top+this.radius),e.push("<circle ",this.getSvgId(),'cx="'+n+'" cy="'+r+'" ','r="',this.radius,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform()," ",this.getSvgTransformMatrix(),'"/>\n');else{var o=Math.cos(this.startAngle)*this.radius,a=Math.sin(this.startAngle)*this.radius,c=Math.cos(this.endAngle)*this.radius,l=Math.sin(this.endAngle)*this.radius,u=s>i?"1":"0";e.push('<path d="M '+o+" "+a," A "+this.radius+" "+this.radius," 0 ",+u+" 1"," "+c+" "+l,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform()," ",this.getSvgTransformMatrix(),'"/>\n')}return t?t(e.join("")):e.join("")},_render:function(t,e){t.beginPath(),t.arc(e?this.left+this.radius:0,e?this.top+this.radius:0,this.radius,this.startAngle,this.endAngle,!1),this._renderFill(t),this._renderStroke(t)},getRadiusX:function(){return this.get("radius")*this.get("scaleX")},getRadiusY:function(){return this.get("radius")*this.get("scaleY")},setRadius:function(t){return this.radius=t,this.set("width",2*t).set("height",2*t)},complexity:function(){return 1}}),n.Circle.ATTRIBUTE_NAMES=n.SHARED_ATTRIBUTES.concat("cx cy r".split(" ")),n.Circle.fromElement=function(t,i){i||(i={});var s=n.parseAttributes(t,n.Circle.ATTRIBUTE_NAMES);if(!e(s))throw new Error("value of `r` attribute is required and can not be negative");s.left=s.left||0,s.top=s.top||0;var o=new n.Circle(r(s,i));return o.left-=o.radius,o.top-=o.radius,o},void(n.Circle.fromObject=function(t){return new n.Circle(t)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});return e.Triangle?void e.warn("fabric.Triangle is already defined"):(e.Triangle=e.util.createClass(e.Object,{type:"triangle",initialize:function(t){t=t||{},this.callSuper("initialize",t),this.set("width",t.width||100).set("height",t.height||100)},_render:function(t){var e=this.width/2,n=this.height/2;t.beginPath(),t.moveTo(-e,n),t.lineTo(0,-n),t.lineTo(e,n),t.closePath(),this._renderFill(t),this._renderStroke(t)},_renderDashedStroke:function(t){var n=this.width/2,i=this.height/2;t.beginPath(),e.util.drawDashedLine(t,-n,i,0,-i,this.strokeDashArray),e.util.drawDashedLine(t,0,-i,n,i,this.strokeDashArray),e.util.drawDashedLine(t,n,i,-n,i,this.strokeDashArray),t.closePath()},toSVG:function(t){var e=this._createBaseSVGMarkup(),n=this.width/2,i=this.height/2,r=[-n+" "+i,"0 "+-i,n+" "+i].join(",");return e.push("<polygon ",this.getSvgId(),'points="',r,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),'"/>'),t?t(e.join("")):e.join("")},complexity:function(){return 1}}),void(e.Triangle.fromObject=function(t){return new e.Triangle(t)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=2*Math.PI,i=e.util.object.extend;return e.Ellipse?void e.warn("fabric.Ellipse is already defined."):(e.Ellipse=e.util.createClass(e.Object,{type:"ellipse",rx:0,ry:0,initialize:function(t){t=t||{},this.callSuper("initialize",t),this.set("rx",t.rx||0),this.set("ry",t.ry||0)},_set:function(t,e){switch(this.callSuper("_set",t,e),t){case"rx":this.rx=e,this.set("width",2*e);break;case"ry":this.ry=e,this.set("height",2*e)}return this},getRx:function(){return this.get("rx")*this.get("scaleX")},getRy:function(){return this.get("ry")*this.get("scaleY")},toObject:function(t){return i(this.callSuper("toObject",t),{rx:this.get("rx"),ry:this.get("ry")})},toSVG:function(t){var e=this._createBaseSVGMarkup(),n=0,i=0;return this.group&&"path-group"===this.group.type&&(n=this.left+this.rx,i=this.top+this.ry),e.push("<ellipse ",this.getSvgId(),'cx="',n,'" cy="',i,'" ','rx="',this.rx,'" ry="',this.ry,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n'),t?t(e.join("")):e.join("")},_render:function(t,e){t.beginPath(),t.save(),t.transform(1,0,0,this.ry/this.rx,0,0),t.arc(e?this.left+this.rx:0,e?(this.top+this.ry)*this.rx/this.ry:0,this.rx,0,n,!1),t.restore(),this._renderFill(t),this._renderStroke(t)},complexity:function(){return 1}}),e.Ellipse.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat("cx cy rx ry".split(" ")),e.Ellipse.fromElement=function(t,n){n||(n={});var r=e.parseAttributes(t,e.Ellipse.ATTRIBUTE_NAMES);r.left=r.left||0,r.top=r.top||0;var s=new e.Ellipse(i(r,n));return s.top-=s.ry,s.left-=s.rx,s},void(e.Ellipse.fromObject=function(t){return new e.Ellipse(t)}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;if(e.Rect)return void e.warn("fabric.Rect is already defined");var i=e.Object.prototype.stateProperties.concat();i.push("rx","ry","x","y"),e.Rect=e.util.createClass(e.Object,{stateProperties:i,type:"rect",rx:0,ry:0,strokeDashArray:null,initialize:function(t){t=t||{},this.callSuper("initialize",t),this._initRxRy()},_initRxRy:function(){this.rx&&!this.ry?this.ry=this.rx:this.ry&&!this.rx&&(this.rx=this.ry)},_render:function(t,e){if(1===this.width&&1===this.height)return void t.fillRect(-.5,-.5,1,1);var n=this.rx?Math.min(this.rx,this.width/2):0,i=this.ry?Math.min(this.ry,this.height/2):0,r=this.width,s=this.height,o=e?this.left:-this.width/2,a=e?this.top:-this.height/2,c=0!==n||0!==i,l=.4477152502;t.beginPath(),t.moveTo(o+n,a),t.lineTo(o+r-n,a),c&&t.bezierCurveTo(o+r-l*n,a,o+r,a+l*i,o+r,a+i),t.lineTo(o+r,a+s-i),c&&t.bezierCurveTo(o+r,a+s-l*i,o+r-l*n,a+s,o+r-n,a+s),t.lineTo(o+n,a+s),c&&t.bezierCurveTo(o+l*n,a+s,o,a+s-l*i,o,a+s-i),t.lineTo(o,a+i),c&&t.bezierCurveTo(o,a+l*i,o+l*n,a,o+n,a),t.closePath(),this._renderFill(t),this._renderStroke(t)},_renderDashedStroke:function(t){var n=-this.width/2,i=-this.height/2,r=this.width,s=this.height;t.beginPath(),e.util.drawDashedLine(t,n,i,n+r,i,this.strokeDashArray),e.util.drawDashedLine(t,n+r,i,n+r,i+s,this.strokeDashArray),e.util.drawDashedLine(t,n+r,i+s,n,i+s,this.strokeDashArray),e.util.drawDashedLine(t,n,i+s,n,i,this.strokeDashArray),t.closePath()},toObject:function(t){var e=n(this.callSuper("toObject",t),{rx:this.get("rx")||0,ry:this.get("ry")||0});return this.includeDefaultValues||this._removeDefaultValues(e),e},toSVG:function(t){var e=this._createBaseSVGMarkup(),n=this.left,i=this.top;return this.group&&"path-group"===this.group.type||(n=-this.width/2,i=-this.height/2),e.push("<rect ",this.getSvgId(),'x="',n,'" y="',i,'" rx="',this.get("rx"),'" ry="',this.get("ry"),'" width="',this.width,'" height="',this.height,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n'),t?t(e.join("")):e.join("")},complexity:function(){return 1}}),e.Rect.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat("x y rx ry width height".split(" ")),e.Rect.fromElement=function(t,i){if(!t)return null;i=i||{};var r=e.parseAttributes(t,e.Rect.ATTRIBUTE_NAMES);r.left=r.left||0,r.top=r.top||0;var s=new e.Rect(n(i?e.util.object.clone(i):{},r));return s.visible=s.visible&&s.width>0&&s.height>0,s},e.Rect.fromObject=function(t){return new e.Rect(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});return e.Polyline?void e.warn("fabric.Polyline is already defined"):(e.Polyline=e.util.createClass(e.Object,{type:"polyline",points:null,minX:0,minY:0,initialize:function(t,n){return e.Polygon.prototype.initialize.call(this,t,n)},_calcDimensions:function(){return e.Polygon.prototype._calcDimensions.call(this)},toObject:function(t){return e.Polygon.prototype.toObject.call(this,t)},toSVG:function(t){return e.Polygon.prototype.toSVG.call(this,t)},_render:function(t,n){e.Polygon.prototype.commonRender.call(this,t,n)&&(this._renderFill(t),this._renderStroke(t))},_renderDashedStroke:function(t){var n,i;t.beginPath();for(var r=0,s=this.points.length;r<s;r++)n=this.points[r],i=this.points[r+1]||n,e.util.drawDashedLine(t,n.x,n.y,i.x,i.y,this.strokeDashArray)},complexity:function(){return this.get("points").length}}),e.Polyline.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat(),e.Polyline.fromElement=function(t,n){if(!t)return null;n||(n={});var i=e.parsePointsAttribute(t.getAttribute("points")),r=e.parseAttributes(t,e.Polyline.ATTRIBUTE_NAMES);return new e.Polyline(i,e.util.object.extend(r,n))},void(e.Polyline.fromObject=function(t){var n=t.points;return new e.Polyline(n,t,(!0))}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend,i=e.util.array.min,r=e.util.array.max,s=e.util.toFixed;return e.Polygon?void e.warn("fabric.Polygon is already defined"):(e.Polygon=e.util.createClass(e.Object,{type:"polygon",points:null,minX:0,minY:0,initialize:function(t,e){e=e||{},this.points=t||[],this.callSuper("initialize",e),this._calcDimensions(),"top"in e||(this.top=this.minY),"left"in e||(this.left=this.minX),this.pathOffset={x:this.minX+this.width/2,y:this.minY+this.height/2}},_calcDimensions:function(){var t=this.points,e=i(t,"x"),n=i(t,"y"),s=r(t,"x"),o=r(t,"y");this.width=s-e||0,this.height=o-n||0,this.minX=e||0,this.minY=n||0},toObject:function(t){return n(this.callSuper("toObject",t),{points:this.points.concat()})},toSVG:function(t){for(var e,n=[],i=this._createBaseSVGMarkup(),r=0,o=this.points.length;r<o;r++)n.push(s(this.points[r].x,2),",",s(this.points[r].y,2)," ");return this.group&&"path-group"===this.group.type||(e=" translate("+-this.pathOffset.x+", "+-this.pathOffset.y+") "),i.push("<",this.type," ",this.getSvgId(),'points="',n.join(""),'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),e," ",this.getSvgTransformMatrix(),'"/>\n'),t?t(i.join("")):i.join("")},_render:function(t,e){this.commonRender(t,e)&&(this._renderFill(t),(this.stroke||this.strokeDashArray)&&(t.closePath(),this._renderStroke(t)))},commonRender:function(t,e){var n,i=this.points.length;if(!i||isNaN(this.points[i-1].y))return!1;e||t.translate(-this.pathOffset.x,-this.pathOffset.y),t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y);for(var r=0;r<i;r++)n=this.points[r],t.lineTo(n.x,n.y);return!0},_renderDashedStroke:function(t){e.Polyline.prototype._renderDashedStroke.call(this,t),t.closePath()},complexity:function(){return this.points.length}}),e.Polygon.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat(),e.Polygon.fromElement=function(t,i){if(!t)return null;i||(i={});var r=e.parsePointsAttribute(t.getAttribute("points")),s=e.parseAttributes(t,e.Polygon.ATTRIBUTE_NAMES);return new e.Polygon(r,n(s,i))},void(e.Polygon.fromObject=function(t){return new e.Polygon(t.points,t,(!0))}))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.array.min,i=e.util.array.max,r=e.util.object.extend,s=Object.prototype.toString,o=e.util.drawArc,a={m:2,l:2,h:1,v:1,c:6,s:4,q:4,t:2,a:7},c={m:"l",M:"L"};return e.Path?void e.warn("fabric.Path is already defined"):(e.Path=e.util.createClass(e.Object,{type:"path",path:null,minX:0,minY:0,initialize:function(t,e){e=e||{},this.setOptions(e),t||(t=[]);var n="[object Array]"===s.call(t);this.path=n?t:t.match&&t.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi),this.path&&(n||(this.path=this._parsePath()),this._setPositionDimensions(e),e.sourcePath&&this.setSourcePath(e.sourcePath))},_setPositionDimensions:function(t){var e=this._parseDimensions();this.minX=e.left,this.minY=e.top,this.width=e.width,this.height=e.height,"undefined"==typeof t.left&&(this.left=e.left+("center"===this.originX?this.width/2:"right"===this.originX?this.width:0)),"undefined"==typeof t.top&&(this.top=e.top+("center"===this.originY?this.height/2:"bottom"===this.originY?this.height:0)),this.pathOffset=this.pathOffset||{x:this.minX+this.width/2,y:this.minY+this.height/2}},_renderPathCommands:function(t){var e,n,i,r=null,s=0,a=0,c=0,l=0,u=0,h=0,f=-this.pathOffset.x,d=-this.pathOffset.y;this.group&&"path-group"===this.group.type&&(f=0,d=0),t.beginPath();for(var p=0,g=this.path.length;p<g;++p){switch(e=this.path[p],e[0]){case"l":c+=e[1],l+=e[2],t.lineTo(c+f,l+d);break;case"L":c=e[1],l=e[2],t.lineTo(c+f,l+d);break;case"h":c+=e[1],t.lineTo(c+f,l+d);break;case"H":c=e[1],t.lineTo(c+f,l+d);break;case"v":l+=e[1],t.lineTo(c+f,l+d);break;case"V":l=e[1],t.lineTo(c+f,l+d);break;case"m":c+=e[1],l+=e[2],s=c,a=l,t.moveTo(c+f,l+d);break;case"M":c=e[1],l=e[2],s=c,a=l,t.moveTo(c+f,l+d);break;case"c":n=c+e[5],i=l+e[6],u=c+e[3],h=l+e[4],t.bezierCurveTo(c+e[1]+f,l+e[2]+d,u+f,h+d,n+f,i+d),c=n,l=i;break;case"C":c=e[5],l=e[6],u=e[3],h=e[4],t.bezierCurveTo(e[1]+f,e[2]+d,u+f,h+d,c+f,l+d);break;case"s":n=c+e[3],i=l+e[4],null===r[0].match(/[CcSs]/)?(u=c,h=l):(u=2*c-u,h=2*l-h),t.bezierCurveTo(u+f,h+d,c+e[1]+f,l+e[2]+d,n+f,i+d),u=c+e[1],h=l+e[2],c=n,l=i;break;case"S":n=e[3],i=e[4],null===r[0].match(/[CcSs]/)?(u=c,h=l):(u=2*c-u,h=2*l-h),t.bezierCurveTo(u+f,h+d,e[1]+f,e[2]+d,n+f,i+d),c=n,l=i,u=e[1],h=e[2];break;case"q":n=c+e[3],i=l+e[4],u=c+e[1],h=l+e[2],t.quadraticCurveTo(u+f,h+d,n+f,i+d),c=n,l=i;break;case"Q":n=e[3],i=e[4],t.quadraticCurveTo(e[1]+f,e[2]+d,n+f,i+d),c=n,l=i,u=e[1],h=e[2];break;case"t":n=c+e[1],i=l+e[2],null===r[0].match(/[QqTt]/)?(u=c,h=l):(u=2*c-u,h=2*l-h),t.quadraticCurveTo(u+f,h+d,n+f,i+d),c=n,l=i;break;case"T":n=e[1],i=e[2],null===r[0].match(/[QqTt]/)?(u=c,h=l):(u=2*c-u,h=2*l-h),t.quadraticCurveTo(u+f,h+d,n+f,i+d),c=n,l=i;break;case"a":o(t,c+f,l+d,[e[1],e[2],e[3],e[4],e[5],e[6]+c+f,e[7]+l+d]),c+=e[6],l+=e[7];break;case"A":o(t,c+f,l+d,[e[1],e[2],e[3],e[4],e[5],e[6]+f,e[7]+d]),c=e[6],l=e[7];break;case"z":case"Z":c=s,l=a,t.closePath()}r=e}},_render:function(t){this._renderPathCommands(t),this._renderFill(t),this._renderStroke(t)},toString:function(){return"#<fabric.Path ("+this.complexity()+'): { "top": '+this.top+', "left": '+this.left+" }>"},toObject:function(t){var e=r(this.callSuper("toObject",t),{path:this.path.map(function(t){return t.slice()}),pathOffset:this.pathOffset});return this.sourcePath&&(e.sourcePath=this.sourcePath),this.transformMatrix&&(e.transformMatrix=this.transformMatrix),e},toDatalessObject:function(t){var e=this.toObject(t);return this.sourcePath&&(e.path=this.sourcePath),delete e.sourcePath,e},toSVG:function(t){for(var e=[],n=this._createBaseSVGMarkup(),i="",r=0,s=this.path.length;r<s;r++)e.push(this.path[r].join(" "));var o=e.join(" ");return this.group&&"path-group"===this.group.type||(i=" translate("+-this.pathOffset.x+", "+-this.pathOffset.y+") "),n.push("<path ",this.getSvgId(),'d="',o,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),i,this.getSvgTransformMatrix(),'" stroke-linecap="round" ',"/>\n"),t?t(n.join("")):n.join("")},complexity:function(){return this.path.length},_parsePath:function(){for(var t,e,n,i,r,s=[],o=[],l=/([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:e[-+]?\d+)?)/gi,u=0,h=this.path.length;u<h;u++){for(t=this.path[u],i=t.slice(1).trim(),o.length=0;n=l.exec(i);)o.push(n[0]);r=[t.charAt(0)];for(var f=0,d=o.length;f<d;f++)e=parseFloat(o[f]),isNaN(e)||r.push(e);var p=r[0],g=a[p.toLowerCase()],v=c[p]||p;if(r.length-1>g)for(var m=1,y=r.length;m<y;m+=g)s.push([p].concat(r.slice(m,m+g))),p=v;else s.push(r)}return s},_parseDimensions:function(){for(var t,r,s,o,a=[],c=[],l=null,u=0,h=0,f=0,d=0,p=0,g=0,v=0,m=this.path.length;v<m;++v){switch(t=this.path[v],t[0]){case"l":f+=t[1],d+=t[2],o=[];break;case"L":f=t[1],d=t[2],o=[];break;case"h":f+=t[1],o=[];break;case"H":f=t[1],o=[];break;case"v":d+=t[1],o=[];break;case"V":d=t[1],o=[];break;case"m":f+=t[1],d+=t[2],u=f,h=d,o=[];break;case"M":f=t[1],d=t[2],u=f,h=d,o=[];break;case"c":r=f+t[5],s=d+t[6],p=f+t[3],g=d+t[4],o=e.util.getBoundsOfCurve(f,d,f+t[1],d+t[2],p,g,r,s),f=r,d=s;break;case"C":f=t[5],d=t[6],p=t[3],g=t[4],o=e.util.getBoundsOfCurve(f,d,t[1],t[2],p,g,f,d);break;case"s":r=f+t[3],s=d+t[4],null===l[0].match(/[CcSs]/)?(p=f,g=d):(p=2*f-p,g=2*d-g),o=e.util.getBoundsOfCurve(f,d,p,g,f+t[1],d+t[2],r,s),p=f+t[1],g=d+t[2],f=r,d=s;break;case"S":r=t[3],s=t[4],null===l[0].match(/[CcSs]/)?(p=f,g=d):(p=2*f-p,g=2*d-g),o=e.util.getBoundsOfCurve(f,d,p,g,t[1],t[2],r,s),f=r,d=s,p=t[1],g=t[2];break;case"q":r=f+t[3],s=d+t[4],p=f+t[1],g=d+t[2],o=e.util.getBoundsOfCurve(f,d,p,g,p,g,r,s),f=r,d=s;break;case"Q":p=t[1],g=t[2],o=e.util.getBoundsOfCurve(f,d,p,g,p,g,t[3],t[4]),f=t[3],d=t[4];break;case"t":r=f+t[1],s=d+t[2],null===l[0].match(/[QqTt]/)?(p=f,g=d):(p=2*f-p,g=2*d-g),o=e.util.getBoundsOfCurve(f,d,p,g,p,g,r,s),f=r,d=s;break;case"T":r=t[1],s=t[2],null===l[0].match(/[QqTt]/)?(p=f,g=d):(p=2*f-p,g=2*d-g),o=e.util.getBoundsOfCurve(f,d,p,g,p,g,r,s),f=r,d=s;break;case"a":o=e.util.getBoundsOfArc(f,d,t[1],t[2],t[3],t[4],t[5],t[6]+f,t[7]+d),f+=t[6],d+=t[7];break;case"A":o=e.util.getBoundsOfArc(f,d,t[1],t[2],t[3],t[4],t[5],t[6],t[7]),f=t[6],d=t[7];break;case"z":case"Z":f=u,d=h}l=t,o.forEach(function(t){a.push(t.x),c.push(t.y)}),a.push(f),c.push(d)}var y=n(a)||0,b=n(c)||0,x=i(a)||0,$=i(c)||0,_=x-y,w=$-b,C={left:y,top:b,width:_,height:w};return C}}),e.Path.fromObject=function(t,n){"string"==typeof t.path?e.loadSVGFromURL(t.path,function(i){var r=i[0],s=t.path;delete t.path,e.util.object.extend(r,t),r.setSourcePath(s),n(r)}):n(new e.Path(t.path,t))},e.Path.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat(["d"]),e.Path.fromElement=function(t,n,i){var s=e.parseAttributes(t,e.Path.ATTRIBUTE_NAMES);n&&n(new e.Path(s.d,r(s,i)))},void(e.Path.async=!0))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend,i=e.util.array.invoke,r=e.Object.prototype.toObject;return e.PathGroup?void e.warn("fabric.PathGroup is already defined"):(e.PathGroup=e.util.createClass(e.Path,{type:"path-group",fill:"",initialize:function(t,e){e=e||{},this.paths=t||[];for(var n=this.paths.length;n--;)this.paths[n].group=this;e.toBeParsed&&(this.parseDimensionsFromPaths(e),delete e.toBeParsed),this.setOptions(e),this.setCoords(),e.sourcePath&&this.setSourcePath(e.sourcePath)},parseDimensionsFromPaths:function(t){for(var n,i,r,s,o,a,c=[],l=[],u=this.paths.length;u--;){r=this.paths[u],s=r.height+r.strokeWidth,o=r.width+r.strokeWidth,n=[{x:r.left,y:r.top},{x:r.left+o,y:r.top},{x:r.left,y:r.top+s},{x:r.left+o,y:r.top+s}],a=this.paths[u].transformMatrix;for(var h=0;h<n.length;h++)i=n[h],a&&(i=e.util.transformPoint(i,a,!1)),c.push(i.x),l.push(i.y)}t.width=Math.max.apply(null,c),t.height=Math.max.apply(null,l)},render:function(t){if(this.visible){t.save(),this.transformMatrix&&t.transform.apply(t,this.transformMatrix),this.transform(t),this._setShadow(t),this.clipTo&&e.util.clipContext(this,t),t.translate(-this.width/2,-this.height/2);for(var n=0,i=this.paths.length;n<i;++n)this.paths[n].render(t,!0);this.clipTo&&t.restore(),t.restore()}},_set:function(t,e){if("fill"===t&&e&&this.isSameColor())for(var n=this.paths.length;n--;)this.paths[n]._set(t,e);return this.callSuper("_set",t,e)},toObject:function(t){var e=n(r.call(this,t),{paths:i(this.getObjects(),"toObject",t)});return this.sourcePath&&(e.sourcePath=this.sourcePath),e},toDatalessObject:function(t){var e=this.toObject(t);return this.sourcePath&&(e.paths=this.sourcePath),e},toSVG:function(t){var e=this.getObjects(),n=this.getPointByOrigin("left","top"),i="translate("+n.x+" "+n.y+")",r=this._createBaseSVGMarkup();r.push("<g ",this.getSvgId(),'style="',this.getSvgStyles(),'" ','transform="',this.getSvgTransformMatrix(),i,this.getSvgTransform(),'" ',">\n");for(var s=0,o=e.length;s<o;s++)r.push("\t",e[s].toSVG(t));return r.push("</g>\n"),t?t(r.join("")):r.join("")},toString:function(){return"#<fabric.PathGroup ("+this.complexity()+"): { top: "+this.top+", left: "+this.left+" }>"},isSameColor:function(){var t=this.getObjects()[0].get("fill")||"";return"string"==typeof t&&(t=t.toLowerCase(),this.getObjects().every(function(e){var n=e.get("fill")||"";return"string"==typeof n&&n.toLowerCase()===t}))},complexity:function(){return this.paths.reduce(function(t,e){return t+(e&&e.complexity?e.complexity():0)},0)},getObjects:function(){return this.paths}}),e.PathGroup.fromObject=function(t,n){"string"==typeof t.paths?e.loadSVGFromURL(t.paths,function(i){var r=t.paths;delete t.paths;var s=e.util.groupSVGElements(i,t,r);n(s)}):e.util.enlivenObjects(t.paths,function(i){delete t.paths,n(new e.PathGroup(i,t))})},void(e.PathGroup.async=!0))}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend,i=e.util.array.min,r=e.util.array.max,s=e.util.array.invoke;if(!e.Group){var o={lockMovementX:!0,lockMovementY:!0,lockRotation:!0,lockScalingX:!0,lockScalingY:!0,lockUniScaling:!0};e.Group=e.util.createClass(e.Object,e.Collection,{type:"group",strokeWidth:0,subTargetCheck:!1,initialize:function(t,e,n){e=e||{},this._objects=[],n&&this.callSuper("initialize",e),this._objects=t||[];for(var i=this._objects.length;i--;)this._objects[i].group=this;this.originalState={},e.originX&&(this.originX=e.originX),e.originY&&(this.originY=e.originY),n?this._updateObjectsCoords(!0):(this._calcBounds(),this._updateObjectsCoords(),this.callSuper("initialize",e)),this.setCoords(),this.saveCoords()},_updateObjectsCoords:function(t){for(var e=this._objects.length;e--;)this._updateObjectCoords(this._objects[e],t)},_updateObjectCoords:function(t,e){if(t.__origHasControls=t.hasControls,t.hasControls=!1,!e){var n=t.getLeft(),i=t.getTop(),r=this.getCenterPoint();t.set({originalLeft:n,originalTop:i,left:n-r.x,top:i-r.y}),t.setCoords()}},toString:function(){return"#<fabric.Group: ("+this.complexity()+")>"},addWithUpdate:function(t){return this._restoreObjectsState(),e.util.resetObjectTransform(this),t&&(this._objects.push(t),t.group=this,t._set("canvas",this.canvas)),this.forEachObject(this._setObjectActive,this),this._calcBounds(),this._updateObjectsCoords(),this},_setObjectActive:function(t){t.set("active",!0),t.group=this},removeWithUpdate:function(t){return this._restoreObjectsState(),e.util.resetObjectTransform(this),this.forEachObject(this._setObjectActive,this),this.remove(t),this._calcBounds(),this._updateObjectsCoords(),this},_onObjectAdded:function(t){t.group=this,t._set("canvas",this.canvas)},_onObjectRemoved:function(t){delete t.group,t.set("active",!1)},delegatedProperties:{fill:!0,stroke:!0,strokeWidth:!0,fontFamily:!0,fontWeight:!0,fontSize:!0,fontStyle:!0,lineHeight:!0,textDecoration:!0,textAlign:!0,backgroundColor:!0},_set:function(t,e){var n=this._objects.length;if(this.delegatedProperties[t]||"canvas"===t)for(;n--;)this._objects[n].set(t,e);else for(;n--;)this._objects[n].setOnGroup(t,e);this.callSuper("_set",t,e)},toObject:function(t){return n(this.callSuper("toObject",t),{objects:s(this._objects,"toObject",t)})},render:function(t){if(this.visible){t.save(),this.transformMatrix&&t.transform.apply(t,this.transformMatrix),this.transform(t),this._setShadow(t),this.clipTo&&e.util.clipContext(this,t),this._transformDone=!0;for(var n=0,i=this._objects.length;n<i;n++)this._renderObject(this._objects[n],t);this.clipTo&&t.restore(),t.restore(),this._transformDone=!1}},_renderControls:function(t,e){this.callSuper("_renderControls",t,e);for(var n=0,i=this._objects.length;n<i;n++)this._objects[n]._renderControls(t)},_renderObject:function(t,e){if(t.visible){var n=t.hasRotatingPoint;t.hasRotatingPoint=!1,t.render(e),t.hasRotatingPoint=n}},_restoreObjectsState:function(){return this._objects.forEach(this._restoreObjectState,this),this},realizeTransform:function(t){var n=t.calcTransformMatrix(),i=e.util.qrDecompose(n),r=new e.Point(i.translateX,i.translateY);return t.scaleX=i.scaleX,t.scaleY=i.scaleY,t.skewX=i.skewX,t.skewY=i.skewY,t.angle=i.angle,t.flipX=!1,t.flipY=!1,t.setPositionByOrigin(r,"center","center"),t},_restoreObjectState:function(t){return this.realizeTransform(t),t.setCoords(),t.hasControls=t.__origHasControls,delete t.__origHasControls,t.set("active",!1),delete t.group,this},destroy:function(){return this._restoreObjectsState()},saveCoords:function(){return this._originalLeft=this.get("left"),this._originalTop=this.get("top"),this},hasMoved:function(){return this._originalLeft!==this.get("left")||this._originalTop!==this.get("top")},setObjectsCoords:function(){return this.forEachObject(function(t){t.setCoords()}),this},_calcBounds:function(t){for(var e,n,i,r=[],s=[],o=["tr","br","bl","tl"],a=0,c=this._objects.length,l=o.length;a<c;++a)for(e=this._objects[a],e.setCoords(),i=0;i<l;i++)n=o[i],r.push(e.oCoords[n].x),s.push(e.oCoords[n].y);this.set(this._getBounds(r,s,t))},_getBounds:function(t,n,s){var o=e.util.invertTransform(this.getViewportTransform()),a=e.util.transformPoint(new e.Point(i(t),i(n)),o),c=e.util.transformPoint(new e.Point(r(t),r(n)),o),l={width:c.x-a.x||0,height:c.y-a.y||0};return s||(l.left=a.x||0,l.top=a.y||0,"center"===this.originX&&(l.left+=l.width/2),"right"===this.originX&&(l.left+=l.width),"center"===this.originY&&(l.top+=l.height/2),"bottom"===this.originY&&(l.top+=l.height)),l},toSVG:function(t){var e=this._createBaseSVGMarkup();e.push("<g ",this.getSvgId(),'transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'" style="',this.getSvgFilter(),'">\n');for(var n=0,i=this._objects.length;n<i;n++)e.push("\t",this._objects[n].toSVG(t));return e.push("</g>\n"),t?t(e.join("")):e.join("")},get:function(t){if(t in o){if(this[t])return this[t];for(var e=0,n=this._objects.length;e<n;e++)if(this._objects[e][t])return!0;return!1}return t in this.delegatedProperties?this._objects[0]&&this._objects[0].get(t):this[t]}}),e.Group.fromObject=function(t,n){e.util.enlivenObjects(t.objects,function(i){delete t.objects,n&&n(new e.Group(i,t,(!0)))})},e.Group.async=!0}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=fabric.util.object.extend;return t.fabric||(t.fabric={}),t.fabric.Image?void fabric.warn("fabric.Image is already defined."):(fabric.Image=fabric.util.createClass(fabric.Object,{type:"image",crossOrigin:"",alignX:"none",alignY:"none",meetOrSlice:"meet",strokeWidth:0,_lastScaleX:1,_lastScaleY:1,minimumScaleTrigger:.5,initialize:function(t,e,n){e||(e={}),this.filters=[],this.resizeFilters=[],this.callSuper("initialize",e),this._initElement(t,e,n)},getElement:function(){return this._element},setElement:function(t,e,n){var i,r;return this._element=t,this._originalElement=t,this._initConfig(n),0===this.resizeFilters.length?i=e:(r=this,i=function(){r.applyFilters(e,r.resizeFilters,r._filteredEl||r._originalElement,!0)}),0!==this.filters.length?this.applyFilters(i):i&&i(this),this},setCrossOrigin:function(t){return this.crossOrigin=t,this._element.crossOrigin=t,this},getOriginalSize:function(){var t=this.getElement();return{width:t.width,height:t.height}},_stroke:function(t){if(this.stroke&&0!==this.strokeWidth){var e=this.width/2,n=this.height/2;t.beginPath(),t.moveTo(-e,-n),t.lineTo(e,-n),t.lineTo(e,n),t.lineTo(-e,n),t.lineTo(-e,-n),t.closePath()}},_renderDashedStroke:function(t){var e=-this.width/2,n=-this.height/2,i=this.width,r=this.height;t.save(),this._setStrokeStyles(t),t.beginPath(),fabric.util.drawDashedLine(t,e,n,e+i,n,this.strokeDashArray),fabric.util.drawDashedLine(t,e+i,n,e+i,n+r,this.strokeDashArray),fabric.util.drawDashedLine(t,e+i,n+r,e,n+r,this.strokeDashArray),fabric.util.drawDashedLine(t,e,n+r,e,n,this.strokeDashArray),t.closePath(),t.restore()},toObject:function(t){var n=[],i=[],r=1,s=1;this.filters.forEach(function(t){t&&("Resize"===t.type&&(r*=t.scaleX,s*=t.scaleY),n.push(t.toObject()))}),this.resizeFilters.forEach(function(t){t&&i.push(t.toObject())});var o=e(this.callSuper("toObject",t),{src:this.getSrc(),filters:n,resizeFilters:i,crossOrigin:this.crossOrigin,alignX:this.alignX,alignY:this.alignY,meetOrSlice:this.meetOrSlice});return o.width/=r,o.height/=s,this.includeDefaultValues||this._removeDefaultValues(o),o},toSVG:function(t){var e=this._createBaseSVGMarkup(),n=-this.width/2,i=-this.height/2,r="none";if(this.group&&"path-group"===this.group.type&&(n=this.left,i=this.top),"none"!==this.alignX&&"none"!==this.alignY&&(r="x"+this.alignX+"Y"+this.alignY+" "+this.meetOrSlice),e.push('<g transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'">\n',"<image ",this.getSvgId(),'xlink:href="',this.getSvgSrc(),'" x="',n,'" y="',i,'" style="',this.getSvgStyles(),'" width="',this.width,'" height="',this.height,'" preserveAspectRatio="',r,'"',"></image>\n"),this.stroke||this.strokeDashArray){var s=this.fill;this.fill=null,e.push("<rect ",'x="',n,'" y="',i,'" width="',this.width,'" height="',this.height,'" style="',this.getSvgStyles(),'"/>\n'),this.fill=s}return e.push("</g>\n"),t?t(e.join("")):e.join("")},getSrc:function(){var t=this._originalElement;return t?fabric.isLikelyNode?t._src:t.src:this.src||""},setSrc:function(t,e,n){fabric.util.loadImage(t,function(t){return this.setElement(t,e,n)},this,n&&n.crossOrigin)},toString:function(){return'#<fabric.Image: { src: "'+this.getSrc()+'" }>'},clone:function(t,e){this.constructor.fromObject(this.toObject(e),t)},applyFilters:function(t,e,n,i){if(e=e||this.filters,n=n||this._originalElement){var r,s,o=fabric.util.createImage(),a=this.canvas?this.canvas.getRetinaScaling():fabric.devicePixelRatio,c=this.minimumScaleTrigger/a,l=this;if(0===e.length)return this._element=n,t&&t(this),n;var u=fabric.util.createCanvasElement();return u.width=n.width,u.height=n.height,u.getContext("2d").drawImage(n,0,0,n.width,n.height),e.forEach(function(t){i?(r=l.scaleX<c?l.scaleX:1,s=l.scaleY<c?l.scaleY:1,r*a<1&&(r*=a),s*a<1&&(s*=a)):(r=t.scaleX,
s=t.scaleY),t&&t.applyTo(u,r,s),!i&&t&&"Resize"===t.type&&(l.width*=t.scaleX,l.height*=t.scaleY)}),o.width=u.width,o.height=u.height,fabric.isLikelyNode?(o.src=u.toBuffer(void 0,fabric.Image.pngCompression),l._element=o,t&&t(l)):(o.onload=function(){l._element=o,!i&&(l._filteredEl=o),t&&t(l),o.onload=u=null},o.src=u.toDataURL("image/png")),u}},_render:function(t,e){var n,i,r,s=this._findMargins();n=e?this.left:-this.width/2,i=e?this.top:-this.height/2,"slice"===this.meetOrSlice&&(t.beginPath(),t.rect(n,i,this.width,this.height),t.clip()),this.isMoving===!1&&this.resizeFilters.length&&this._needsResize()?(this._lastScaleX=this.scaleX,this._lastScaleY=this.scaleY,r=this.applyFilters(null,this.resizeFilters,this._filteredEl||this._originalElement,!0)):r=this._element,r&&t.drawImage(r,n+s.marginX,i+s.marginY,s.width,s.height),this._stroke(t),this._renderStroke(t)},_needsResize:function(){return this.scaleX!==this._lastScaleX||this.scaleY!==this._lastScaleY},_findMargins:function(){var t,e,n=this.width,i=this.height,r=0,s=0;return"none"===this.alignX&&"none"===this.alignY||(t=[this.width/this._element.width,this.height/this._element.height],e="meet"===this.meetOrSlice?Math.min.apply(null,t):Math.max.apply(null,t),n=this._element.width*e,i=this._element.height*e,"Mid"===this.alignX&&(r=(this.width-n)/2),"Max"===this.alignX&&(r=this.width-n),"Mid"===this.alignY&&(s=(this.height-i)/2),"Max"===this.alignY&&(s=this.height-i)),{width:n,height:i,marginX:r,marginY:s}},_resetWidthHeight:function(){var t=this.getElement();this.set("width",t.width),this.set("height",t.height)},_initElement:function(t,e,n){this.setElement(fabric.util.getById(t),n,e),fabric.util.addClass(this.getElement(),fabric.Image.CSS_CANVAS)},_initConfig:function(t){t||(t={}),this.setOptions(t),this._setWidthHeight(t),this._element&&this.crossOrigin&&(this._element.crossOrigin=this.crossOrigin)},_initFilters:function(t,e){t&&t.length?fabric.util.enlivenObjects(t,function(t){e&&e(t)},"fabric.Image.filters"):e&&e()},_setWidthHeight:function(t){this.width="width"in t?t.width:this.getElement()?this.getElement().width||0:0,this.height="height"in t?t.height:this.getElement()?this.getElement().height||0:0},complexity:function(){return 1}}),fabric.Image.CSS_CANVAS="canvas-img",fabric.Image.prototype.getSvgSrc=fabric.Image.prototype.getSrc,fabric.Image.fromObject=function(t,e){fabric.util.loadImage(t.src,function(n){fabric.Image.prototype._initFilters.call(t,t.filters,function(i){t.filters=i||[],fabric.Image.prototype._initFilters.call(t,t.resizeFilters,function(i){return t.resizeFilters=i||[],new fabric.Image(n,t,e)})})},null,t.crossOrigin)},fabric.Image.fromURL=function(t,e,n){fabric.util.loadImage(t,function(t){e&&e(new fabric.Image(t,n))},null,n&&n.crossOrigin)},fabric.Image.ATTRIBUTE_NAMES=fabric.SHARED_ATTRIBUTES.concat("x y width height preserveAspectRatio xlink:href".split(" ")),fabric.Image.fromElement=function(t,n,i){var r,s=fabric.parseAttributes(t,fabric.Image.ATTRIBUTE_NAMES);s.preserveAspectRatio&&(r=fabric.util.parsePreserveAspectRatioAttribute(s.preserveAspectRatio),e(s,r)),fabric.Image.fromURL(s["xlink:href"],n,e(i?fabric.util.object.clone(i):{},s))},fabric.Image.async=!0,void(fabric.Image.pngCompression=1))}("undefined"!=typeof exports?exports:this),fabric.util.object.extend(fabric.Object.prototype,{_getAngleValueForStraighten:function(){var t=this.getAngle()%360;return t>0?90*Math.round((t-1)/90):90*Math.round(t/90)},straighten:function(){return this.setAngle(this._getAngleValueForStraighten()),this},fxStraighten:function(t){t=t||{};var e=function(){},n=t.onComplete||e,i=t.onChange||e,r=this;return fabric.util.animate({startValue:this.get("angle"),endValue:this._getAngleValueForStraighten(),duration:this.FX_DURATION,onChange:function(t){r.setAngle(t),i()},onComplete:function(){r.setCoords(),n()},onStart:function(){r.set("active",!1)}}),this}}),fabric.util.object.extend(fabric.StaticCanvas.prototype,{straightenObject:function(t){return t.straighten(),this.renderAll(),this},fxStraightenObject:function(t){return t.fxStraighten({onChange:this.renderAll.bind(this)}),this}}),fabric.Image.filters=fabric.Image.filters||{},fabric.Image.filters.BaseFilter=fabric.util.createClass({type:"BaseFilter",initialize:function(t){t&&this.setOptions(t)},setOptions:function(t){for(var e in t)this[e]=t[e]},toObject:function(){return{type:this.type}},toJSON:function(){return this.toObject()}}),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.Brightness=e.util.createClass(e.Image.filters.BaseFilter,{type:"Brightness",initialize:function(t){t=t||{},this.brightness=t.brightness||0},applyTo:function(t){for(var e=t.getContext("2d"),n=e.getImageData(0,0,t.width,t.height),i=n.data,r=this.brightness,s=0,o=i.length;s<o;s+=4)i[s]+=r,i[s+1]+=r,i[s+2]+=r;e.putImageData(n,0,0)},toObject:function(){return n(this.callSuper("toObject"),{brightness:this.brightness})}}),e.Image.filters.Brightness.fromObject=function(t){return new e.Image.filters.Brightness(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.Convolute=e.util.createClass(e.Image.filters.BaseFilter,{type:"Convolute",initialize:function(t){t=t||{},this.opaque=t.opaque,this.matrix=t.matrix||[0,0,0,0,1,0,0,0,0]},applyTo:function(t){for(var e,n,i,r,s,o,a,c,l,u=this.matrix,h=t.getContext("2d"),f=h.getImageData(0,0,t.width,t.height),d=Math.round(Math.sqrt(u.length)),p=Math.floor(d/2),g=f.data,v=f.width,m=f.height,y=h.createImageData(v,m),b=y.data,x=this.opaque?1:0,$=0;$<m;$++)for(var _=0;_<v;_++){s=4*($*v+_),e=0,n=0,i=0,r=0;for(var w=0;w<d;w++)for(var C=0;C<d;C++)a=$+w-p,o=_+C-p,a<0||a>m||o<0||o>v||(c=4*(a*v+o),l=u[w*d+C],e+=g[c]*l,n+=g[c+1]*l,i+=g[c+2]*l,r+=g[c+3]*l);b[s]=e,b[s+1]=n,b[s+2]=i,b[s+3]=r+x*(255-r)}h.putImageData(y,0,0)},toObject:function(){return n(this.callSuper("toObject"),{opaque:this.opaque,matrix:this.matrix})}}),e.Image.filters.Convolute.fromObject=function(t){return new e.Image.filters.Convolute(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.GradientTransparency=e.util.createClass(e.Image.filters.BaseFilter,{type:"GradientTransparency",initialize:function(t){t=t||{},this.threshold=t.threshold||100},applyTo:function(t){for(var e=t.getContext("2d"),n=e.getImageData(0,0,t.width,t.height),i=n.data,r=this.threshold,s=i.length,o=0,a=i.length;o<a;o+=4)i[o+3]=r+255*(s-o)/s;e.putImageData(n,0,0)},toObject:function(){return n(this.callSuper("toObject"),{threshold:this.threshold})}}),e.Image.filters.GradientTransparency.fromObject=function(t){return new e.Image.filters.GradientTransparency(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});e.Image.filters.Grayscale=e.util.createClass(e.Image.filters.BaseFilter,{type:"Grayscale",applyTo:function(t){for(var e,n=t.getContext("2d"),i=n.getImageData(0,0,t.width,t.height),r=i.data,s=i.width*i.height*4,o=0;o<s;)e=(r[o]+r[o+1]+r[o+2])/3,r[o]=e,r[o+1]=e,r[o+2]=e,o+=4;n.putImageData(i,0,0)}}),e.Image.filters.Grayscale.fromObject=function(){return new e.Image.filters.Grayscale}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});e.Image.filters.Invert=e.util.createClass(e.Image.filters.BaseFilter,{type:"Invert",applyTo:function(t){var e,n=t.getContext("2d"),i=n.getImageData(0,0,t.width,t.height),r=i.data,s=r.length;for(e=0;e<s;e+=4)r[e]=255-r[e],r[e+1]=255-r[e+1],r[e+2]=255-r[e+2];n.putImageData(i,0,0)}}),e.Image.filters.Invert.fromObject=function(){return new e.Image.filters.Invert}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.Mask=e.util.createClass(e.Image.filters.BaseFilter,{type:"Mask",initialize:function(t){t=t||{},this.mask=t.mask,this.channel=[0,1,2,3].indexOf(t.channel)>-1?t.channel:0},applyTo:function(t){if(this.mask){var n,i=t.getContext("2d"),r=i.getImageData(0,0,t.width,t.height),s=r.data,o=this.mask.getElement(),a=e.util.createCanvasElement(),c=this.channel,l=r.width*r.height*4;a.width=t.width,a.height=t.height,a.getContext("2d").drawImage(o,0,0,t.width,t.height);var u=a.getContext("2d").getImageData(0,0,t.width,t.height),h=u.data;for(n=0;n<l;n+=4)s[n+3]=h[n+c];i.putImageData(r,0,0)}},toObject:function(){return n(this.callSuper("toObject"),{mask:this.mask.toObject(),channel:this.channel})}}),e.Image.filters.Mask.fromObject=function(t,n){e.util.loadImage(t.mask.src,function(i){t.mask=new e.Image(i,t.mask),n&&n(new e.Image.filters.Mask(t))})},e.Image.filters.Mask.async=!0}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.Noise=e.util.createClass(e.Image.filters.BaseFilter,{type:"Noise",initialize:function(t){t=t||{},this.noise=t.noise||0},applyTo:function(t){for(var e,n=t.getContext("2d"),i=n.getImageData(0,0,t.width,t.height),r=i.data,s=this.noise,o=0,a=r.length;o<a;o+=4)e=(.5-Math.random())*s,r[o]+=e,r[o+1]+=e,r[o+2]+=e;n.putImageData(i,0,0)},toObject:function(){return n(this.callSuper("toObject"),{noise:this.noise})}}),e.Image.filters.Noise.fromObject=function(t){return new e.Image.filters.Noise(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.Pixelate=e.util.createClass(e.Image.filters.BaseFilter,{type:"Pixelate",initialize:function(t){t=t||{},this.blocksize=t.blocksize||4},applyTo:function(t){var e,n,i,r,s,o,a,c=t.getContext("2d"),l=c.getImageData(0,0,t.width,t.height),u=l.data,h=l.height,f=l.width;for(n=0;n<h;n+=this.blocksize)for(i=0;i<f;i+=this.blocksize){e=4*n*f+4*i,r=u[e],s=u[e+1],o=u[e+2],a=u[e+3];for(var d=n,p=n+this.blocksize;d<p;d++)for(var g=i,v=i+this.blocksize;g<v;g++)e=4*d*f+4*g,u[e]=r,u[e+1]=s,u[e+2]=o,u[e+3]=a}c.putImageData(l,0,0)},toObject:function(){return n(this.callSuper("toObject"),{blocksize:this.blocksize})}}),e.Image.filters.Pixelate.fromObject=function(t){return new e.Image.filters.Pixelate(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.RemoveWhite=e.util.createClass(e.Image.filters.BaseFilter,{type:"RemoveWhite",initialize:function(t){t=t||{},this.threshold=t.threshold||30,this.distance=t.distance||20},applyTo:function(t){for(var e,n,i,r=t.getContext("2d"),s=r.getImageData(0,0,t.width,t.height),o=s.data,a=this.threshold,c=this.distance,l=255-a,u=Math.abs,h=0,f=o.length;h<f;h+=4)e=o[h],n=o[h+1],i=o[h+2],e>l&&n>l&&i>l&&u(e-n)<c&&u(e-i)<c&&u(n-i)<c&&(o[h+3]=0);r.putImageData(s,0,0)},toObject:function(){return n(this.callSuper("toObject"),{threshold:this.threshold,distance:this.distance})}}),e.Image.filters.RemoveWhite.fromObject=function(t){return new e.Image.filters.RemoveWhite(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});e.Image.filters.Sepia=e.util.createClass(e.Image.filters.BaseFilter,{type:"Sepia",applyTo:function(t){var e,n,i=t.getContext("2d"),r=i.getImageData(0,0,t.width,t.height),s=r.data,o=s.length;for(e=0;e<o;e+=4)n=.3*s[e]+.59*s[e+1]+.11*s[e+2],s[e]=n+100,s[e+1]=n+50,s[e+2]=n+255;i.putImageData(r,0,0)}}),e.Image.filters.Sepia.fromObject=function(){return new e.Image.filters.Sepia}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={});e.Image.filters.Sepia2=e.util.createClass(e.Image.filters.BaseFilter,{type:"Sepia2",applyTo:function(t){var e,n,i,r,s=t.getContext("2d"),o=s.getImageData(0,0,t.width,t.height),a=o.data,c=a.length;for(e=0;e<c;e+=4)n=a[e],i=a[e+1],r=a[e+2],a[e]=(.393*n+.769*i+.189*r)/1.351,a[e+1]=(.349*n+.686*i+.168*r)/1.203,a[e+2]=(.272*n+.534*i+.131*r)/2.14;s.putImageData(o,0,0)}}),e.Image.filters.Sepia2.fromObject=function(){return new e.Image.filters.Sepia2}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.Tint=e.util.createClass(e.Image.filters.BaseFilter,{type:"Tint",initialize:function(t){t=t||{},this.color=t.color||"#000000",this.opacity="undefined"!=typeof t.opacity?t.opacity:new e.Color(this.color).getAlpha()},applyTo:function(t){var n,i,r,s,o,a,c,l,u,h=t.getContext("2d"),f=h.getImageData(0,0,t.width,t.height),d=f.data,p=d.length;for(u=new e.Color(this.color).getSource(),i=u[0]*this.opacity,r=u[1]*this.opacity,s=u[2]*this.opacity,l=1-this.opacity,n=0;n<p;n+=4)o=d[n],a=d[n+1],c=d[n+2],d[n]=i+o*l,d[n+1]=r+a*l,d[n+2]=s+c*l;h.putImageData(f,0,0)},toObject:function(){return n(this.callSuper("toObject"),{color:this.color,opacity:this.opacity})}}),e.Image.filters.Tint.fromObject=function(t){return new e.Image.filters.Tint(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.Multiply=e.util.createClass(e.Image.filters.BaseFilter,{type:"Multiply",initialize:function(t){t=t||{},this.color=t.color||"#000000"},applyTo:function(t){var n,i,r=t.getContext("2d"),s=r.getImageData(0,0,t.width,t.height),o=s.data,a=o.length;for(i=new e.Color(this.color).getSource(),n=0;n<a;n+=4)o[n]*=i[0]/255,o[n+1]*=i[1]/255,o[n+2]*=i[2]/255;r.putImageData(s,0,0)},toObject:function(){return n(this.callSuper("toObject"),{color:this.color})}}),e.Image.filters.Multiply.fromObject=function(t){return new e.Image.filters.Multiply(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric;e.Image.filters.Blend=e.util.createClass(e.Image.filters.BaseFilter,{type:"Blend",initialize:function(t){t=t||{},this.color=t.color||"#000",this.image=t.image||!1,this.mode=t.mode||"multiply",this.alpha=t.alpha||1},applyTo:function(t){var n,i,r,s,o,a,c,l,u,h,f=t.getContext("2d"),d=f.getImageData(0,0,t.width,t.height),p=d.data,g=!1;if(this.image){g=!0;var v=e.util.createCanvasElement();v.width=this.image.width,v.height=this.image.height;var m=new e.StaticCanvas(v);m.add(this.image);var y=m.getContext("2d");h=y.getImageData(0,0,m.width,m.height).data}else h=new e.Color(this.color).getSource(),n=h[0]*this.alpha,i=h[1]*this.alpha,r=h[2]*this.alpha;for(var b=0,x=p.length;b<x;b+=4)switch(s=p[b],o=p[b+1],a=p[b+2],g&&(n=h[b]*this.alpha,i=h[b+1]*this.alpha,r=h[b+2]*this.alpha),this.mode){case"multiply":p[b]=s*n/255,p[b+1]=o*i/255,p[b+2]=a*r/255;break;case"screen":p[b]=1-(1-s)*(1-n),p[b+1]=1-(1-o)*(1-i),p[b+2]=1-(1-a)*(1-r);break;case"add":p[b]=Math.min(255,s+n),p[b+1]=Math.min(255,o+i),p[b+2]=Math.min(255,a+r);break;case"diff":case"difference":p[b]=Math.abs(s-n),p[b+1]=Math.abs(o-i),p[b+2]=Math.abs(a-r);break;case"subtract":c=s-n,l=o-i,u=a-r,p[b]=c<0?0:c,p[b+1]=l<0?0:l,p[b+2]=u<0?0:u;break;case"darken":p[b]=Math.min(s,n),p[b+1]=Math.min(o,i),p[b+2]=Math.min(a,r);break;case"lighten":p[b]=Math.max(s,n),p[b+1]=Math.max(o,i),p[b+2]=Math.max(a,r)}f.putImageData(d,0,0)},toObject:function(){return{color:this.color,image:this.image,mode:this.mode,alpha:this.alpha}}}),e.Image.filters.Blend.fromObject=function(t){return new e.Image.filters.Blend(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=Math.pow,i=Math.floor,r=Math.sqrt,s=Math.abs,o=Math.max,a=Math.round,c=Math.sin,l=Math.ceil;e.Image.filters.Resize=e.util.createClass(e.Image.filters.BaseFilter,{type:"Resize",resizeType:"hermite",scaleX:0,scaleY:0,lanczosLobes:3,applyTo:function(t,e,n){if(1!==e||1!==n){this.rcpScaleX=1/e,this.rcpScaleY=1/n;var i,r=t.width,s=t.height,o=a(r*e),c=a(s*n);"sliceHack"===this.resizeType&&(i=this.sliceByTwo(t,r,s,o,c)),"hermite"===this.resizeType&&(i=this.hermiteFastResize(t,r,s,o,c)),"bilinear"===this.resizeType&&(i=this.bilinearFiltering(t,r,s,o,c)),"lanczos"===this.resizeType&&(i=this.lanczosResize(t,r,s,o,c)),t.width=o,t.height=c,t.getContext("2d").putImageData(i,0,0)}},sliceByTwo:function(t,n,r,s,a){var c,l=t.getContext("2d"),u=.5,h=.5,f=1,d=1,p=!1,g=!1,v=n,m=r,y=e.util.createCanvasElement(),b=y.getContext("2d");for(s=i(s),a=i(a),y.width=o(s,n),y.height=o(a,r),s>n&&(u=2,f=-1),a>r&&(h=2,d=-1),c=l.getImageData(0,0,n,r),t.width=o(s,n),t.height=o(a,r),l.putImageData(c,0,0);!p||!g;)n=v,r=m,s*f<i(v*u*f)?v=i(v*u):(v=s,p=!0),a*d<i(m*h*d)?m=i(m*h):(m=a,g=!0),c=l.getImageData(0,0,n,r),b.putImageData(c,0,0),l.clearRect(0,0,v,m),l.drawImage(y,0,0,n,r,0,0,v,m);return l.getImageData(0,0,s,a)},lanczosResize:function(t,e,o,a,u){function h(t){return function(e){if(e>t)return 0;if(e*=Math.PI,s(e)<1e-16)return 1;var n=e/t;return c(e)*c(n)/e/n}}function f(t){var c,l,h,d,p,k,A,E,j,M,D;for(T.x=(t+.5)*b,O.x=i(T.x),c=0;c<u;c++){for(T.y=(c+.5)*x,O.y=i(T.y),p=0,k=0,A=0,E=0,j=0,l=O.x-w;l<=O.x+w;l++)if(!(l<0||l>=e)){M=i(1e3*s(l-T.x)),S[M]||(S[M]={});for(var P=O.y-C;P<=O.y+C;P++)P<0||P>=o||(D=i(1e3*s(P-T.y)),S[M][D]||(S[M][D]=y(r(n(M*$,2)+n(D*_,2))/1e3)),h=S[M][D],h>0&&(d=4*(P*e+l),p+=h,k+=h*v[d],A+=h*v[d+1],E+=h*v[d+2],j+=h*v[d+3]))}d=4*(c*a+t),m[d]=k/p,m[d+1]=A/p,m[d+2]=E/p,m[d+3]=j/p}return++t<a?f(t):g}var d=t.getContext("2d"),p=d.getImageData(0,0,e,o),g=d.getImageData(0,0,a,u),v=p.data,m=g.data,y=h(this.lanczosLobes),b=this.rcpScaleX,x=this.rcpScaleY,$=2/this.rcpScaleX,_=2/this.rcpScaleY,w=l(b*this.lanczosLobes/2),C=l(x*this.lanczosLobes/2),S={},T={},O={};return f(0)},bilinearFiltering:function(t,e,n,r,s){var o,a,c,l,u,h,f,d,p,g,v,m,y,b=0,x=this.rcpScaleX,$=this.rcpScaleY,_=t.getContext("2d"),w=4*(e-1),C=_.getImageData(0,0,e,n),S=C.data,T=_.getImageData(0,0,r,s),O=T.data;for(f=0;f<s;f++)for(d=0;d<r;d++)for(u=i(x*d),h=i($*f),p=x*d-u,g=$*f-h,y=4*(h*e+u),v=0;v<4;v++)o=S[y+v],a=S[y+4+v],c=S[y+w+v],l=S[y+w+4+v],m=o*(1-p)*(1-g)+a*p*(1-g)+c*g*(1-p)+l*p*g,O[b++]=m;return T},hermiteFastResize:function(t,e,n,o,a){for(var c=this.rcpScaleX,u=this.rcpScaleY,h=l(c/2),f=l(u/2),d=t.getContext("2d"),p=d.getImageData(0,0,e,n),g=p.data,v=d.getImageData(0,0,o,a),m=v.data,y=0;y<a;y++)for(var b=0;b<o;b++){for(var x=4*(b+y*o),$=0,_=0,w=0,C=0,S=0,T=0,O=0,k=(y+.5)*u,A=i(y*u);A<(y+1)*u;A++)for(var E=s(k-(A+.5))/f,j=(b+.5)*c,M=E*E,D=i(b*c);D<(b+1)*c;D++){var P=s(j-(D+.5))/h,I=r(M+P*P);I>1&&I<-1||($=2*I*I*I-3*I*I+1,$>0&&(P=4*(D+A*e),O+=$*g[P+3],w+=$,g[P+3]<255&&($=$*g[P+3]/250),C+=$*g[P],S+=$*g[P+1],T+=$*g[P+2],_+=$))}m[x]=C/_,m[x+1]=S/_,m[x+2]=T/_,m[x+3]=O/w}return v},toObject:function(){return{type:this.type,scaleX:this.scaleX,scaleY:this.scaleY,resizeType:this.resizeType,lanczosLobes:this.lanczosLobes}}}),e.Image.filters.Resize.fromObject=function(t){return new e.Image.filters.Resize(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend;e.Image.filters.ColorMatrix=e.util.createClass(e.Image.filters.BaseFilter,{type:"ColorMatrix",initialize:function(t){t||(t={}),this.matrix=t.matrix||[1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0]},applyTo:function(t){var e,n,i,r,s,o=t.getContext("2d"),a=o.getImageData(0,0,t.width,t.height),c=a.data,l=c.length,u=this.matrix;for(e=0;e<l;e+=4)n=c[e],i=c[e+1],r=c[e+2],s=c[e+3],c[e]=n*u[0]+i*u[1]+r*u[2]+s*u[3]+u[4],c[e+1]=n*u[5]+i*u[6]+r*u[7]+s*u[8]+u[9],c[e+2]=n*u[10]+i*u[11]+r*u[12]+s*u[13]+u[14],c[e+3]=n*u[15]+i*u[16]+r*u[17]+s*u[18]+u[19];o.putImageData(a,0,0)},toObject:function(){return n(this.callSuper("toObject"),{type:this.type,matrix:this.matrix})}}),e.Image.filters.ColorMatrix.fromObject=function(t){return new e.Image.filters.ColorMatrix(t)}}("undefined"!=typeof exports?exports:this),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.extend,i=e.util.object.clone,r=e.util.toFixed,s=e.Object.NUM_FRACTION_DIGITS;if(e.Text)return void e.warn("fabric.Text is already defined");var o=e.Object.prototype.stateProperties.concat();o.push("fontFamily","fontWeight","fontSize","text","textDecoration","textAlign","fontStyle","lineHeight","textBackgroundColor"),e.Text=e.util.createClass(e.Object,{_dimensionAffectingProps:{fontSize:!0,fontWeight:!0,fontFamily:!0,fontStyle:!0,lineHeight:!0,text:!0,charSpacing:!0,textAlign:!0,stroke:!1,strokeWidth:!1},_reNewline:/\r?\n/,_reSpacesAndTabs:/[ \t\r]+/g,type:"text",fontSize:40,fontWeight:"normal",fontFamily:"Times New Roman",textDecoration:"",textAlign:"left",fontStyle:"",lineHeight:1.16,textBackgroundColor:"",stateProperties:o,stroke:null,shadow:null,_fontSizeFraction:.25,_fontSizeMult:1.13,charSpacing:0,initialize:function(t,e){e=e||{},this.text=t,this.__skipDimension=!0,this.setOptions(e),this.__skipDimension=!1,this._initDimensions()},_initDimensions:function(t){this.__skipDimension||(t||(t=e.util.createCanvasElement().getContext("2d"),this._setTextStyles(t)),this._textLines=this._splitTextIntoLines(),this._clearCache(),this.width=this._getTextWidth(t),this.height=this._getTextHeight(t))},toString:function(){return"#<fabric.Text ("+this.complexity()+'): { "text": "'+this.text+'", "fontFamily": "'+this.fontFamily+'" }>'},_render:function(t){this.clipTo&&e.util.clipContext(this,t),this._setOpacity(t),this._setShadow(t),this._setupCompositeOperation(t),this._renderTextBackground(t),this._setStrokeStyles(t),this._setFillStyles(t),this._renderText(t),this._renderTextDecoration(t),this.clipTo&&t.restore()},_renderText:function(t){this._renderTextFill(t),this._renderTextStroke(t)},_setTextStyles:function(t){t.textBaseline="alphabetic",t.font=this._getFontDeclaration()},_getTextHeight:function(){return this._getHeightOfSingleLine()+(this._textLines.length-1)*this._getHeightOfLine()},_getTextWidth:function(t){for(var e=this._getLineWidth(t,0),n=1,i=this._textLines.length;n<i;n++){var r=this._getLineWidth(t,n);r>e&&(e=r)}return e},_getNonTransformedDimensions:function(){return{x:this.width,y:this.height}},_renderChars:function(t,e,n,i,r){var s,o,a=t.slice(0,-4);if(this[a].toLive){var c=-this.width/2+this[a].offsetX||0,l=-this.height/2+this[a].offsetY||0;e.save(),e.translate(c,l),i-=c,r-=l}if(0!==this.charSpacing){var u=this._getWidthOfCharSpacing();n=n.split("");for(var h=0,f=n.length;h<f;h++)s=n[h],o=e.measureText(s).width+u,e[t](s,i,r),i+=o}else e[t](n,i,r);this[a].toLive&&e.restore()},_renderTextLine:function(t,e,n,i,r,s){r-=this.fontSize*this._fontSizeFraction;var o=this._getLineWidth(e,s);if("justify"!==this.textAlign||this.width<o)return void this._renderChars(t,e,n,i,r,s);for(var a,c=n.split(/\s+/),l=0,u=this._getWidthOfWords(e,c.join(""),s,0),h=this.width-u,f=c.length-1,d=f>0?h/f:0,p=0,g=0,v=c.length;g<v;g++){for(;" "===n[l]&&l<n.length;)l++;a=c[g],this._renderChars(t,e,a,i+p,r,s,l),p+=this._getWidthOfWords(e,a,s,l)+d,l+=a.length}},_getWidthOfWords:function(t,e){var n,i,r=t.measureText(e).width;return 0!==this.charSpacing&&(n=e.split("").length,i=n*this._getWidthOfCharSpacing(),r+=i),r},_getLeftOffset:function(){return-this.width/2},_getTopOffset:function(){return-this.height/2},isEmptyStyles:function(){return!0},_renderTextCommon:function(t,e){for(var n=0,i=this._getLeftOffset(),r=this._getTopOffset(),s=0,o=this._textLines.length;s<o;s++){var a=this._getHeightOfLine(t,s),c=a/this.lineHeight,l=this._getLineWidth(t,s),u=this._getLineLeftOffset(l);this._renderTextLine(e,t,this._textLines[s],i+u,r+n+c,s),n+=a}},_renderTextFill:function(t){!this.fill&&this.isEmptyStyles()||this._renderTextCommon(t,"fillText")},_renderTextStroke:function(t){(this.stroke&&0!==this.strokeWidth||!this.isEmptyStyles())&&(this.shadow&&!this.shadow.affectStroke&&this._removeShadow(t),t.save(),this._setLineDash(t,this.strokedashArray),t.beginPath(),this._renderTextCommon(t,"strokeText"),t.closePath(),t.restore())},_getHeightOfLine:function(){return this._getHeightOfSingleLine()*this.lineHeight},_getHeightOfSingleLine:function(){return this.fontSize*this._fontSizeMult},_renderTextBackground:function(t){this._renderTextBoxBackground(t),this._renderTextLinesBackground(t)},_renderTextBoxBackground:function(t){this.backgroundColor&&(t.fillStyle=this.backgroundColor,t.fillRect(this._getLeftOffset(),this._getTopOffset(),this.width,this.height),this._removeShadow(t))},_renderTextLinesBackground:function(t){if(this.textBackgroundColor){var e,n,i,r=0;t.fillStyle=this.textBackgroundColor;for(var s=0,o=this._textLines.length;s<o;s++)e=this._getHeightOfLine(t,s),n=this._getLineWidth(t,s),n>0&&(i=this._getLineLeftOffset(n),t.fillRect(this._getLeftOffset()+i,this._getTopOffset()+r,n,e/this.lineHeight)),r+=e;this._removeShadow(t)}},_getLineLeftOffset:function(t){return"center"===this.textAlign?(this.width-t)/2:"right"===this.textAlign?this.width-t:0},_clearCache:function(){this.__lineWidths=[],this.__lineHeights=[]},_shouldClearCache:function(){var t=!1;if(this._forceClearCache)return this._forceClearCache=!1,!0;for(var e in this._dimensionAffectingProps)this["__"+e]!==this[e]&&(this["__"+e]=this[e],t=!0);return t},_getLineWidth:function(t,e){if(this.__lineWidths[e])return this.__lineWidths[e]===-1?this.width:this.__lineWidths[e];var n,i,r=this._textLines[e];return n=""===r?0:this._measureLine(t,e),this.__lineWidths[e]=n,n&&"justify"===this.textAlign&&(i=r.split(/\s+/),i.length>1&&(this.__lineWidths[e]=-1)),n},_getWidthOfCharSpacing:function(){return 0!==this.charSpacing?this.fontSize*this.charSpacing/1e3:0},_measureLine:function(t,e){var n,i=this._textLines[e],r=t.measureText(i).width,s=0;return 0!==this.charSpacing&&(n=i.split("").length,s=(n-1)*this._getWidthOfCharSpacing()),r+s},_renderTextDecoration:function(t){function e(e){var r,s,o,a,c,l,u,h=0;for(r=0,s=i._textLines.length;r<s;r++){for(c=i._getLineWidth(t,r),l=i._getLineLeftOffset(c),u=i._getHeightOfLine(t,r),o=0,a=e.length;o<a;o++)t.fillRect(i._getLeftOffset()+l,h+(i._fontSizeMult-1+e[o])*i.fontSize-n,c,i.fontSize/15);h+=u}}if(this.textDecoration){var n=this.height/2,i=this,r=[];this.textDecoration.indexOf("underline")>-1&&r.push(.85),this.textDecoration.indexOf("line-through")>-1&&r.push(.43),this.textDecoration.indexOf("overline")>-1&&r.push(-.12),r.length>0&&e(r)}},_getFontDeclaration:function(){return[e.isLikelyNode?this.fontWeight:this.fontStyle,e.isLikelyNode?this.fontStyle:this.fontWeight,this.fontSize+"px",'"'+this.fontFamily+'"'].join(" ")},render:function(t,e){this.visible&&(t.save(),this._setTextStyles(t),this._shouldClearCache()&&this._initDimensions(t),this.drawSelectionBackground(t),e||this.transform(t),this.transformMatrix&&t.transform.apply(t,this.transformMatrix),this.group&&"path-group"===this.group.type&&t.translate(this.left,this.top),this._render(t),t.restore())},_splitTextIntoLines:function(){return this.text.split(this._reNewline)},toObject:function(t){var e=n(this.callSuper("toObject",t),{text:this.text,fontSize:this.fontSize,fontWeight:this.fontWeight,fontFamily:this.fontFamily,fontStyle:this.fontStyle,lineHeight:this.lineHeight,textDecoration:this.textDecoration,textAlign:this.textAlign,textBackgroundColor:this.textBackgroundColor,charSpacing:this.charSpacing});return this.includeDefaultValues||this._removeDefaultValues(e),e},toSVG:function(t){var e=this._createBaseSVGMarkup(),n=this._getSVGLeftTopOffsets(this.ctx),i=this._getSVGTextAndBg(n.textTop,n.textLeft);return this._wrapSVGTextAndBg(e,i),t?t(e.join("")):e.join("")},_getSVGLeftTopOffsets:function(t){var e=this._getHeightOfLine(t,0),n=-this.width/2,i=0;return{textLeft:n+(this.group&&"path-group"===this.group.type?this.left:0),textTop:i+(this.group&&"path-group"===this.group.type?-this.top:0),lineTop:e}},_wrapSVGTextAndBg:function(t,e){var n=!0,i=this.getSvgFilter(),r=""===i?"":' style="'+i+'"';t.push("\t<g ",this.getSvgId(),'transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"',r,">\n",e.textBgRects.join(""),"\t\t<text ",this.fontFamily?'font-family="'+this.fontFamily.replace(/"/g,"'")+'" ':"",this.fontSize?'font-size="'+this.fontSize+'" ':"",this.fontStyle?'font-style="'+this.fontStyle+'" ':"",this.fontWeight?'font-weight="'+this.fontWeight+'" ':"",this.textDecoration?'text-decoration="'+this.textDecoration+'" ':"",'style="',this.getSvgStyles(n),'" >\n',e.textSpans.join(""),"\t\t</text>\n","\t</g>\n")},_getSVGTextAndBg:function(t,e){var n=[],i=[],r=0;this._setSVGBg(i);for(var s=0,o=this._textLines.length;s<o;s++)this.textBackgroundColor&&this._setSVGTextLineBg(i,s,e,t,r),this._setSVGTextLineText(s,n,r,e,t,i),r+=this._getHeightOfLine(this.ctx,s);return{textSpans:n,textBgRects:i}},_setSVGTextLineText:function(t,n,i,o,a){var c=this.fontSize*(this._fontSizeMult-this._fontSizeFraction)-a+i-this.height/2;return"justify"===this.textAlign?void this._setSVGTextLineJustifed(t,n,c,o):void n.push('\t\t\t<tspan x="',r(o+this._getLineLeftOffset(this._getLineWidth(this.ctx,t)),s),'" ','y="',r(c,s),'" ',this._getFillAttributes(this.fill),">",e.util.string.escapeXml(this._textLines[t]),"</tspan>\n")},_setSVGTextLineJustifed:function(t,n,i,o){var a=e.util.createCanvasElement().getContext("2d");this._setTextStyles(a);var c,l,u=this._textLines[t],h=u.split(/\s+/),f=this._getWidthOfWords(a,h.join("")),d=this.width-f,p=h.length-1,g=p>0?d/p:0,v=this._getFillAttributes(this.fill);for(o+=this._getLineLeftOffset(this._getLineWidth(a,t)),t=0,l=h.length;t<l;t++)c=h[t],n.push('\t\t\t<tspan x="',r(o,s),'" ','y="',r(i,s),'" ',v,">",e.util.string.escapeXml(c),"</tspan>\n"),o+=this._getWidthOfWords(a,c)+g},_setSVGTextLineBg:function(t,e,n,i,o){t.push("\t\t<rect ",this._getFillAttributes(this.textBackgroundColor),' x="',r(n+this._getLineLeftOffset(this._getLineWidth(this.ctx,e)),s),'" y="',r(o-this.height/2,s),'" width="',r(this._getLineWidth(this.ctx,e),s),'" height="',r(this._getHeightOfLine(this.ctx,e)/this.lineHeight,s),'"></rect>\n')},_setSVGBg:function(t){this.backgroundColor&&t.push("\t\t<rect ",this._getFillAttributes(this.backgroundColor),' x="',r(-this.width/2,s),'" y="',r(-this.height/2,s),'" width="',r(this.width,s),'" height="',r(this.height,s),'"></rect>\n')},_getFillAttributes:function(t){var n=t&&"string"==typeof t?new e.Color(t):"";return n&&n.getSource()&&1!==n.getAlpha()?'opacity="'+n.getAlpha()+'" fill="'+n.setAlpha(1).toRgb()+'"':'fill="'+t+'"'},_set:function(t,e){this.callSuper("_set",t,e),t in this._dimensionAffectingProps&&(this._initDimensions(),this.setCoords())},complexity:function(){return 1}}),e.Text.ATTRIBUTE_NAMES=e.SHARED_ATTRIBUTES.concat("x y dx dy font-family font-style font-weight font-size text-decoration text-anchor".split(" ")),e.Text.DEFAULT_SVG_FONT_SIZE=16,e.Text.fromElement=function(t,n){if(!t)return null;var i=e.parseAttributes(t,e.Text.ATTRIBUTE_NAMES);n=e.util.object.extend(n?e.util.object.clone(n):{},i),n.top=n.top||0,n.left=n.left||0,"dx"in i&&(n.left+=i.dx),"dy"in i&&(n.top+=i.dy),"fontSize"in n||(n.fontSize=e.Text.DEFAULT_SVG_FONT_SIZE),n.originX||(n.originX="left");var r="";"textContent"in t?r=t.textContent:"firstChild"in t&&null!==t.firstChild&&"data"in t.firstChild&&null!==t.firstChild.data&&(r=t.firstChild.data),r=r.replace(/^\s+|\s+$|\n+/g,"").replace(/\s+/g," ");var s=new e.Text(r,n),o=s.getHeight()/s.height,a=(s.height+s.strokeWidth)*s.lineHeight-s.height,c=a*o,l=s.getHeight()+c,u=0;return"left"===s.originX&&(u=s.getWidth()/2),"right"===s.originX&&(u=-s.getWidth()/2),s.set({left:s.getLeft()+u,top:s.getTop()-l/2+s.fontSize*(.18+s._fontSizeFraction)/s.lineHeight}),s},e.Text.fromObject=function(t){return new e.Text(t.text,i(t))},e.util.createAccessors(e.Text)}("undefined"!=typeof exports?exports:this),function(){var t=fabric.util.object.clone;fabric.IText=fabric.util.createClass(fabric.Text,fabric.Observable,{type:"i-text",selectionStart:0,selectionEnd:0,selectionColor:"rgba(17,119,255,0.3)",isEditing:!1,editable:!0,editingBorderColor:"rgba(102,153,255,0.25)",cursorWidth:2,cursorColor:"#333",cursorDelay:1e3,cursorDuration:600,styles:null,caching:!0,_reSpace:/\s|\n/,_currentCursorOpacity:0,_selectionDirection:null,_abortCursorAnimation:!1,__widthOfSpace:[],initialize:function(t,e){this.styles=e?e.styles||{}:{},this.callSuper("initialize",t,e),this.initBehavior()},_clearCache:function(){this.callSuper("_clearCache"),this.__widthOfSpace=[]},isEmptyStyles:function(){if(!this.styles)return!0;var t=this.styles;for(var e in t)for(var n in t[e])for(var i in t[e][n])return!1;return!0},setSelectionStart:function(t){
t=Math.max(t,0),this._updateAndFire("selectionStart",t)},setSelectionEnd:function(t){t=Math.min(t,this.text.length),this._updateAndFire("selectionEnd",t)},_updateAndFire:function(t,e){this[t]!==e&&(this._fireSelectionChanged(),this[t]=e),this._updateTextarea()},_fireSelectionChanged:function(){this.fire("selection:changed"),this.canvas&&this.canvas.fire("text:selection:changed",{target:this})},getSelectionStyles:function(t,e){if(2===arguments.length){for(var n=[],i=t;i<e;i++)n.push(this.getSelectionStyles(i));return n}var r=this.get2DCursorLocation(t),s=this._getStyleDeclaration(r.lineIndex,r.charIndex);return s||{}},setSelectionStyles:function(t){if(this.selectionStart===this.selectionEnd)this._extendStyles(this.selectionStart,t);else for(var e=this.selectionStart;e<this.selectionEnd;e++)this._extendStyles(e,t);return this._forceClearCache=!0,this},_extendStyles:function(t,e){var n=this.get2DCursorLocation(t);this._getLineStyle(n.lineIndex)||this._setLineStyle(n.lineIndex,{}),this._getStyleDeclaration(n.lineIndex,n.charIndex)||this._setStyleDeclaration(n.lineIndex,n.charIndex,{}),fabric.util.object.extend(this._getStyleDeclaration(n.lineIndex,n.charIndex),e)},_render:function(t){this.oldWidth=this.width,this.oldHeight=this.height,this.callSuper("_render",t),this.ctx=t,this.cursorOffsetCache={},this.renderCursorOrSelection()},renderCursorOrSelection:function(){if(this.active&&this.isEditing){var t,e,n=this.text.split("");this.canvas.contextTop?(e=this.canvas.contextTop,e.save(),e.transform.apply(e,this.canvas.viewportTransform),this.transform(e),this.transformMatrix&&e.transform.apply(e,this.transformMatrix),this._clearTextArea(e)):(e=this.ctx,e.save()),this.selectionStart===this.selectionEnd?(t=this._getCursorBoundaries(n,"cursor"),this.renderCursor(t,e)):(t=this._getCursorBoundaries(n,"selection"),this.renderSelection(n,t,e)),e.restore()}},_clearTextArea:function(t){var e=this.oldWidth+4,n=this.oldHeight+4;t.clearRect(-e/2,-n/2,e,n)},get2DCursorLocation:function(t){"undefined"==typeof t&&(t=this.selectionStart);for(var e=this._textLines.length,n=0;n<e;n++){if(t<=this._textLines[n].length)return{lineIndex:n,charIndex:t};t-=this._textLines[n].length+1}return{lineIndex:n-1,charIndex:this._textLines[n-1].length<t?this._textLines[n-1].length:t}},getCurrentCharStyle:function(t,e){var n=this._getStyleDeclaration(t,0===e?0:e-1);return{fontSize:n&&n.fontSize||this.fontSize,fill:n&&n.fill||this.fill,textBackgroundColor:n&&n.textBackgroundColor||this.textBackgroundColor,textDecoration:n&&n.textDecoration||this.textDecoration,fontFamily:n&&n.fontFamily||this.fontFamily,fontWeight:n&&n.fontWeight||this.fontWeight,fontStyle:n&&n.fontStyle||this.fontStyle,stroke:n&&n.stroke||this.stroke,strokeWidth:n&&n.strokeWidth||this.strokeWidth}},getCurrentCharFontSize:function(t,e){var n=this._getStyleDeclaration(t,0===e?0:e-1);return n&&n.fontSize?n.fontSize:this.fontSize},getCurrentCharColor:function(t,e){var n=this._getStyleDeclaration(t,0===e?0:e-1);return n&&n.fill?n.fill:this.cursorColor},_getCursorBoundaries:function(t,e){var n=Math.round(this._getLeftOffset()),i=this._getTopOffset(),r=this._getCursorBoundariesOffsets(t,e);return{left:n,top:i,leftOffset:r.left+r.lineLeft,topOffset:r.top}},_getCursorBoundariesOffsets:function(t,e){if(this.cursorOffsetCache&&"top"in this.cursorOffsetCache)return this.cursorOffsetCache;for(var n,i=0,r=0,s=0,o=0,a=0,c=0;c<this.selectionStart;c++)"\n"===t[c]?(a=0,o+=this._getHeightOfLine(this.ctx,r),r++,s=0):(a+=this._getWidthOfChar(this.ctx,t[c],r,s),s++),i=this._getLineLeftOffset(this._getLineWidth(this.ctx,r));return"cursor"===e&&(o+=(1-this._fontSizeFraction)*this._getHeightOfLine(this.ctx,r)/this.lineHeight-this.getCurrentCharFontSize(r,s)*(1-this._fontSizeFraction)),0!==this.charSpacing&&s===this._textLines[r].length&&(a-=this._getWidthOfCharSpacing()),n={top:o,left:a,lineLeft:i},this.cursorOffsetCache=n,this.cursorOffsetCache},renderCursor:function(t,e){var n=this.get2DCursorLocation(),i=n.lineIndex,r=n.charIndex,s=this.getCurrentCharFontSize(i,r),o=0===i&&0===r?this._getLineLeftOffset(this._getLineWidth(e,i)):t.leftOffset,a=this.scaleX*this.canvas.getZoom(),c=this.cursorWidth/a;e.fillStyle=this.getCurrentCharColor(i,r),e.globalAlpha=this.__isMousedown?1:this._currentCursorOpacity,e.fillRect(t.left+o-c/2,t.top+t.topOffset,c,s)},renderSelection:function(t,e,n){n.fillStyle=this.selectionColor;for(var i=this.get2DCursorLocation(this.selectionStart),r=this.get2DCursorLocation(this.selectionEnd),s=i.lineIndex,o=r.lineIndex,a=s;a<=o;a++){var c=this._getLineLeftOffset(this._getLineWidth(n,a))||0,l=this._getHeightOfLine(this.ctx,a),u=0,h=0,f=this._textLines[a];if(a===s){for(var d=0,p=f.length;d<p;d++)d>=i.charIndex&&(a!==o||d<r.charIndex)&&(h+=this._getWidthOfChar(n,f[d],a,d)),d<i.charIndex&&(c+=this._getWidthOfChar(n,f[d],a,d));d===f.length&&(h-=this._getWidthOfCharSpacing())}else if(a>s&&a<o)h+=this._getLineWidth(n,a)||5;else if(a===o){for(var g=0,v=r.charIndex;g<v;g++)h+=this._getWidthOfChar(n,f[g],a,g);r.charIndex===f.length&&(h-=this._getWidthOfCharSpacing())}u=l,(this.lineHeight<1||a===o&&this.lineHeight>1)&&(l/=this.lineHeight),n.fillRect(e.left+c,e.top+e.topOffset,h,l),e.topOffset+=u}},_renderChars:function(t,e,n,i,r,s,o){if(this.isEmptyStyles())return this._renderCharsFast(t,e,n,i,r);o=o||0;var a,c,l=this._getHeightOfLine(e,s),u="";e.save(),r-=l/this.lineHeight*this._fontSizeFraction;for(var h=o,f=n.length+o;h<=f;h++)a=a||this.getCurrentCharStyle(s,h),c=this.getCurrentCharStyle(s,h+1),(this._hasStyleChanged(a,c)||h===f)&&(this._renderChar(t,e,s,h-1,u,i,r,l),u="",a=c),u+=n[h-o];e.restore()},_renderCharsFast:function(t,e,n,i,r){"fillText"===t&&this.fill&&this.callSuper("_renderChars",t,e,n,i,r),"strokeText"===t&&(this.stroke&&this.strokeWidth>0||this.skipFillStrokeCheck)&&this.callSuper("_renderChars",t,e,n,i,r)},_renderChar:function(t,e,n,i,r,s,o,a){var c,l,u,h,f,d,p,g=this._getStyleDeclaration(n,i);if(g?(l=this._getHeightOfChar(e,r,n,i),h=g.stroke,u=g.fill,d=g.textDecoration):l=this.fontSize,h=(h||this.stroke)&&"strokeText"===t,u=(u||this.fill)&&"fillText"===t,g&&e.save(),c=this._applyCharStylesGetWidth(e,r,n,i,g||null),d=d||this.textDecoration,g&&g.textBackgroundColor&&this._removeShadow(e),0!==this.charSpacing){p=r.split(""),c=0;for(var v,m=0,y=p.length;m<y;m++)v=p[m],u&&e.fillText(v,s+c,o),h&&e.strokeText(v,s+c,o),c+=e.measureText(v).width+this._getWidthOfCharSpacing()}else u&&e.fillText(r,s,o),h&&e.strokeText(r,s,o);(d||""!==d)&&(f=this._fontSizeFraction*a/this.lineHeight,this._renderCharDecoration(e,d,s,o,f,c,l)),g&&e.restore(),e.translate(c,0)},_hasStyleChanged:function(t,e){return t.fill!==e.fill||t.fontSize!==e.fontSize||t.textBackgroundColor!==e.textBackgroundColor||t.textDecoration!==e.textDecoration||t.fontFamily!==e.fontFamily||t.fontWeight!==e.fontWeight||t.fontStyle!==e.fontStyle||t.stroke!==e.stroke||t.strokeWidth!==e.strokeWidth},_renderCharDecoration:function(t,e,n,i,r,s,o){if(e){var a,c,l=o/15,u={underline:i+o/10,"line-through":i-o*(this._fontSizeFraction+this._fontSizeMult-1)+l,overline:i-(this._fontSizeMult-this._fontSizeFraction)*o},h=["underline","line-through","overline"];for(a=0;a<h.length;a++)c=h[a],e.indexOf(c)>-1&&t.fillRect(n,u[c],s,l)}},_renderTextLine:function(t,e,n,i,r,s){this.isEmptyStyles()||(r+=this.fontSize*(this._fontSizeFraction+.03)),this.callSuper("_renderTextLine",t,e,n,i,r,s)},_renderTextDecoration:function(t){if(this.isEmptyStyles())return this.callSuper("_renderTextDecoration",t)},_renderTextLinesBackground:function(t){this.callSuper("_renderTextLinesBackground",t);for(var e,n,i,r,s,o,a=0,c=this._getLeftOffset(),l=this._getTopOffset(),u=0,h=this._textLines.length;u<h;u++)if(e=this._getHeightOfLine(t,u),r=this._textLines[u],""!==r&&this.styles&&this._getLineStyle(u)){n=this._getLineWidth(t,u),i=this._getLineLeftOffset(n);for(var f=0,d=r.length;f<d;f++)o=this._getStyleDeclaration(u,f),o&&o.textBackgroundColor&&(s=r[f],t.fillStyle=o.textBackgroundColor,t.fillRect(c+i+this._getWidthOfCharsAt(t,u,f),l+a,this._getWidthOfChar(t,s,u,f)+1,e/this.lineHeight));a+=e}else a+=e},_getCacheProp:function(t,e){return t+e.fontSize+e.fontWeight+e.fontStyle},_getFontCache:function(t){return fabric.charWidthsCache[t]||(fabric.charWidthsCache[t]={}),fabric.charWidthsCache[t]},_applyCharStylesGetWidth:function(e,n,i,r,s){var o,a,c,l=s||this._getStyleDeclaration(i,r),u=t(l);if(this._applyFontStyles(u),c=this._getFontCache(u.fontFamily),a=this._getCacheProp(n,u),!l&&c[a]&&this.caching)return c[a];"string"==typeof u.shadow&&(u.shadow=new fabric.Shadow(u.shadow));var h=u.fill||this.fill;return e.fillStyle=h.toLive?h.toLive(e,this):h,u.stroke&&(e.strokeStyle=u.stroke&&u.stroke.toLive?u.stroke.toLive(e,this):u.stroke),e.lineWidth=u.strokeWidth||this.strokeWidth,e.font=this._getFontDeclaration.call(u),u.shadow&&(u.scaleX=this.scaleX,u.scaleY=this.scaleY,u.canvas=this.canvas,this._setShadow.call(u,e)),this.caching&&c[a]?c[a]:(o=e.measureText(n).width,this.caching&&(c[a]=o),o)},_applyFontStyles:function(t){t.fontFamily||(t.fontFamily=this.fontFamily),t.fontSize||(t.fontSize=this.fontSize),t.fontWeight||(t.fontWeight=this.fontWeight),t.fontStyle||(t.fontStyle=this.fontStyle)},_getStyleDeclaration:function(e,n,i){return i?this.styles[e]&&this.styles[e][n]?t(this.styles[e][n]):{}:this.styles[e]&&this.styles[e][n]?this.styles[e][n]:null},_setStyleDeclaration:function(t,e,n){this.styles[t][e]=n},_deleteStyleDeclaration:function(t,e){delete this.styles[t][e]},_getLineStyle:function(t){return this.styles[t]},_setLineStyle:function(t,e){this.styles[t]=e},_deleteLineStyle:function(t){delete this.styles[t]},_getWidthOfChar:function(t,e,n,i){if(!this._isMeasuring&&"justify"===this.textAlign&&this._reSpacesAndTabs.test(e))return this._getWidthOfSpace(t,n);t.save();var r=this._applyCharStylesGetWidth(t,e,n,i);return 0!==this.charSpacing&&(r+=this._getWidthOfCharSpacing()),t.restore(),r},_getHeightOfChar:function(t,e,n){var i=this._getStyleDeclaration(e,n);return i&&i.fontSize?i.fontSize:this.fontSize},_getWidthOfCharsAt:function(t,e,n){var i,r,s=0;for(i=0;i<n;i++)r=this._textLines[e][i],s+=this._getWidthOfChar(t,r,e,i);return s},_measureLine:function(t,e){this._isMeasuring=!0;var n=this._getWidthOfCharsAt(t,e,this._textLines[e].length);return 0!==this.charSpacing&&(n-=this._getWidthOfCharSpacing()),this._isMeasuring=!1,n},_getWidthOfSpace:function(t,e){if(this.__widthOfSpace[e])return this.__widthOfSpace[e];var n=this._textLines[e],i=this._getWidthOfWords(t,n,e,0),r=this.width-i,s=n.length-n.replace(this._reSpacesAndTabs,"").length,o=Math.max(r/s,t.measureText(" ").width);return this.__widthOfSpace[e]=o,o},_getWidthOfWords:function(t,e,n,i){for(var r=0,s=0;s<e.length;s++){var o=e[s];o.match(/\s/)||(r+=this._getWidthOfChar(t,o,n,s+i))}return r},_getHeightOfLine:function(t,e){if(this.__lineHeights[e])return this.__lineHeights[e];for(var n=this._textLines[e],i=this._getHeightOfChar(t,e,0),r=1,s=n.length;r<s;r++){var o=this._getHeightOfChar(t,e,r);o>i&&(i=o)}return this.__lineHeights[e]=i*this.lineHeight*this._fontSizeMult,this.__lineHeights[e]},_getTextHeight:function(t){for(var e,n=0,i=0,r=this._textLines.length;i<r;i++)e=this._getHeightOfLine(t,i),n+=i===r-1?e/this.lineHeight:e;return n},toObject:function(e){var n,i,r,s={};for(n in this.styles){r=this.styles[n],s[n]={};for(i in r)s[n][i]=t(r[i])}return fabric.util.object.extend(this.callSuper("toObject",e),{styles:s})}}),fabric.IText.fromObject=function(e){return new fabric.IText(e.text,t(e))}}(),function(){var t=fabric.util.object.clone;fabric.util.object.extend(fabric.IText.prototype,{initBehavior:function(){this.initAddedHandler(),this.initRemovedHandler(),this.initCursorSelectionHandlers(),this.initDoubleClickSimulation()},initSelectedHandler:function(){this.on("selected",function(){var t=this;setTimeout(function(){t.selected=!0},100)})},initAddedHandler:function(){var t=this;this.on("added",function(){this.canvas&&!this.canvas._hasITextHandlers&&(this.canvas._hasITextHandlers=!0,this._initCanvasHandlers()),t.canvas&&(t.canvas._iTextInstances=t.canvas._iTextInstances||[],t.canvas._iTextInstances.push(t))})},initRemovedHandler:function(){var t=this;this.on("removed",function(){t.canvas&&(t.canvas._iTextInstances=t.canvas._iTextInstances||[],fabric.util.removeFromArray(t.canvas._iTextInstances,t))})},_initCanvasHandlers:function(){var t=this;this.canvas.on("selection:cleared",function(){fabric.IText.prototype.exitEditingOnOthers(t.canvas)}),this.canvas.on("mouse:up",function(){t.canvas._iTextInstances&&t.canvas._iTextInstances.forEach(function(t){t.__isMousedown=!1})}),this.canvas.on("object:selected",function(){fabric.IText.prototype.exitEditingOnOthers(t.canvas)})},_tick:function(){this._currentTickState=this._animateCursor(this,1,this.cursorDuration,"_onTickComplete")},_animateCursor:function(t,e,n,i){var r;return r={isAborted:!1,abort:function(){this.isAborted=!0}},t.animate("_currentCursorOpacity",e,{duration:n,onComplete:function(){r.isAborted||t[i]()},onChange:function(){t.canvas&&t.selectionStart===t.selectionEnd&&t.renderCursorOrSelection()},abort:function(){return r.isAborted}}),r},_onTickComplete:function(){var t=this;this._cursorTimeout1&&clearTimeout(this._cursorTimeout1),this._cursorTimeout1=setTimeout(function(){t._currentTickCompleteState=t._animateCursor(t,0,this.cursorDuration/2,"_tick")},100)},initDelayedCursor:function(t){var e=this,n=t?0:this.cursorDelay;this.abortCursorAnimation(),this._currentCursorOpacity=1,this._cursorTimeout2=setTimeout(function(){e._tick()},n)},abortCursorAnimation:function(){var t=this._currentTickState||this._currentTickCompleteState;this._currentTickState&&this._currentTickState.abort(),this._currentTickCompleteState&&this._currentTickCompleteState.abort(),clearTimeout(this._cursorTimeout1),clearTimeout(this._cursorTimeout2),this._currentCursorOpacity=0,t&&this.canvas&&this.canvas.clearContext(this.canvas.contextTop||this.ctx)},selectAll:function(){this.selectionStart=0,this.selectionEnd=this.text.length,this._fireSelectionChanged(),this._updateTextarea()},getSelectedText:function(){return this.text.slice(this.selectionStart,this.selectionEnd)},findWordBoundaryLeft:function(t){var e=0,n=t-1;if(this._reSpace.test(this.text.charAt(n)))for(;this._reSpace.test(this.text.charAt(n));)e++,n--;for(;/\S/.test(this.text.charAt(n))&&n>-1;)e++,n--;return t-e},findWordBoundaryRight:function(t){var e=0,n=t;if(this._reSpace.test(this.text.charAt(n)))for(;this._reSpace.test(this.text.charAt(n));)e++,n++;for(;/\S/.test(this.text.charAt(n))&&n<this.text.length;)e++,n++;return t+e},findLineBoundaryLeft:function(t){for(var e=0,n=t-1;!/\n/.test(this.text.charAt(n))&&n>-1;)e++,n--;return t-e},findLineBoundaryRight:function(t){for(var e=0,n=t;!/\n/.test(this.text.charAt(n))&&n<this.text.length;)e++,n++;return t+e},getNumNewLinesInSelectedText:function(){for(var t=this.getSelectedText(),e=0,n=0,i=t.length;n<i;n++)"\n"===t[n]&&e++;return e},searchWordBoundary:function(t,e){for(var n=this._reSpace.test(this.text.charAt(t))?t-1:t,i=this.text.charAt(n),r=/[ \n\.,;!\?\-]/;!r.test(i)&&n>0&&n<this.text.length;)n+=e,i=this.text.charAt(n);return r.test(i)&&"\n"!==i&&(n+=1===e?0:1),n},selectWord:function(t){t=t||this.selectionStart;var e=this.searchWordBoundary(t,-1),n=this.searchWordBoundary(t,1);this.selectionStart=e,this.selectionEnd=n,this._fireSelectionChanged(),this._updateTextarea(),this.renderCursorOrSelection()},selectLine:function(t){t=t||this.selectionStart;var e=this.findLineBoundaryLeft(t),n=this.findLineBoundaryRight(t);this.selectionStart=e,this.selectionEnd=n,this._fireSelectionChanged(),this._updateTextarea()},enterEditing:function(t){if(!this.isEditing&&this.editable)return this.canvas&&this.exitEditingOnOthers(this.canvas),this.isEditing=!0,this.initHiddenTextarea(t),this.hiddenTextarea.focus(),this._updateTextarea(),this._saveEditingProps(),this._setEditingProps(),this._textBeforeEdit=this.text,this._tick(),this.fire("editing:entered"),this.canvas?(this.canvas.fire("text:editing:entered",{target:this}),this.canvas.renderAll(),this.initMouseMoveHandler(),this):this},exitEditingOnOthers:function(t){t._iTextInstances&&t._iTextInstances.forEach(function(t){t.selected=!1,t.isEditing&&t.exitEditing()})},initMouseMoveHandler:function(){this.canvas.on("mouse:move",this.mouseMoveHandler.bind(this))},mouseMoveHandler:function(t){if(this.__isMousedown&&this.isEditing){var e=this.getSelectionStartFromPointer(t.e),n=this.selectionStart,i=this.selectionEnd;e!==this.__selectionStartOnMouseDown&&(e>this.__selectionStartOnMouseDown?(this.selectionStart=this.__selectionStartOnMouseDown,this.selectionEnd=e):(this.selectionStart=e,this.selectionEnd=this.__selectionStartOnMouseDown),this.selectionStart===n&&this.selectionEnd===i||(this._fireSelectionChanged(),this._updateTextarea(),this.renderCursorOrSelection()))}},_setEditingProps:function(){this.hoverCursor="text",this.canvas&&(this.canvas.defaultCursor=this.canvas.moveCursor="text"),this.borderColor=this.editingBorderColor,this.hasControls=this.selectable=!1,this.lockMovementX=this.lockMovementY=!0},_updateTextarea:function(){if(this.hiddenTextarea&&!this.inCompositionMode&&(this.cursorOffsetCache={},this.hiddenTextarea.value=this.text,this.hiddenTextarea.selectionStart=this.selectionStart,this.hiddenTextarea.selectionEnd=this.selectionEnd,this.selectionStart===this.selectionEnd)){var t=this._calcTextareaPosition();this.hiddenTextarea.style.left=t.left,this.hiddenTextarea.style.top=t.top,this.hiddenTextarea.style.fontSize=t.fontSize}},_calcTextareaPosition:function(){if(!this.canvas)return{x:1,y:1};var t=this.text.split(""),e=this._getCursorBoundaries(t,"cursor"),n=this.get2DCursorLocation(),i=n.lineIndex,r=n.charIndex,s=this.getCurrentCharFontSize(i,r),o=0===i&&0===r?this._getLineLeftOffset(this._getLineWidth(this.ctx,i)):e.leftOffset,a=this.calcTransformMatrix(),c={x:e.left+o,y:e.top+e.topOffset+s},l=this.canvas.upperCanvasEl,u=l.width-s,h=l.height-s;return c=fabric.util.transformPoint(c,a),c=fabric.util.transformPoint(c,this.canvas.viewportTransform),c.x<0&&(c.x=0),c.x>u&&(c.x=u),c.y<0&&(c.y=0),c.y>h&&(c.y=h),{left:c.x+"px",top:c.y+"px",fontSize:s}},_saveEditingProps:function(){this._savedProps={hasControls:this.hasControls,borderColor:this.borderColor,lockMovementX:this.lockMovementX,lockMovementY:this.lockMovementY,hoverCursor:this.hoverCursor,defaultCursor:this.canvas&&this.canvas.defaultCursor,moveCursor:this.canvas&&this.canvas.moveCursor}},_restoreEditingProps:function(){this._savedProps&&(this.hoverCursor=this._savedProps.overCursor,this.hasControls=this._savedProps.hasControls,this.borderColor=this._savedProps.borderColor,this.lockMovementX=this._savedProps.lockMovementX,this.lockMovementY=this._savedProps.lockMovementY,this.canvas&&(this.canvas.defaultCursor=this._savedProps.defaultCursor,this.canvas.moveCursor=this._savedProps.moveCursor))},exitEditing:function(){var t=this._textBeforeEdit!==this.text;return this.selected=!1,this.isEditing=!1,this.selectable=!0,this.selectionEnd=this.selectionStart,this.hiddenTextarea&&this.canvas&&this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea),this.hiddenTextarea=null,this.abortCursorAnimation(),this._restoreEditingProps(),this._currentCursorOpacity=0,this.fire("editing:exited"),t&&this.fire("modified"),this.canvas&&(this.canvas.off("mouse:move",this.mouseMoveHandler),this.canvas.fire("text:editing:exited",{target:this}),t&&this.canvas.fire("object:modified",{target:this})),this},_removeExtraneousStyles:function(){for(var t in this.styles)this._textLines[t]||delete this.styles[t]},_removeCharsFromTo:function(t,e){for(;e!==t;)this._removeSingleCharAndStyle(t+1),e--;this.selectionStart=t,this.selectionEnd=t},_removeSingleCharAndStyle:function(t){var e="\n"===this.text[t-1],n=e?t:t-1;this.removeStyleObject(e,n),this.text=this.text.slice(0,t-1)+this.text.slice(t),this._textLines=this._splitTextIntoLines()},insertChars:function(t,e){var n;if(this.selectionEnd-this.selectionStart>1&&this._removeCharsFromTo(this.selectionStart,this.selectionEnd),!e&&this.isEmptyStyles())return void this.insertChar(t,!1);for(var i=0,r=t.length;i<r;i++)e&&(n=fabric.copiedTextStyle[i]),this.insertChar(t[i],i<r-1,n)},insertChar:function(t,e,n){var i="\n"===this.text[this.selectionStart];this.text=this.text.slice(0,this.selectionStart)+t+this.text.slice(this.selectionEnd),this._textLines=this._splitTextIntoLines(),this.insertStyleObjects(t,i,n),this.selectionStart+=t.length,this.selectionEnd=this.selectionStart,e||(this._updateTextarea(),this.setCoords(),this._fireSelectionChanged(),this.fire("changed"),this.canvas&&this.canvas.fire("text:changed",{target:this}),this.canvas&&this.canvas.renderAll())},insertNewlineStyleObject:function(e,n,i){this.shiftLineStyles(e,1),this.styles[e+1]||(this.styles[e+1]={});var r={},s={};if(this.styles[e]&&this.styles[e][n-1]&&(r=this.styles[e][n-1]),i)s[0]=t(r),this.styles[e+1]=s;else{for(var o in this.styles[e])parseInt(o,10)>=n&&(s[parseInt(o,10)-n]=this.styles[e][o],delete this.styles[e][o]);this.styles[e+1]=s}this._forceClearCache=!0},insertCharStyleObject:function(e,n,i){var r=this.styles[e],s=t(r);0!==n||i||(n=1);for(var o in s){var a=parseInt(o,10);a>=n&&(r[a+1]=s[a],s[a-1]||delete r[a])}this.styles[e][n]=i||t(r[n-1]),this._forceClearCache=!0},insertStyleObjects:function(t,e,n){var i=this.get2DCursorLocation(),r=i.lineIndex,s=i.charIndex;this._getLineStyle(r)||this._setLineStyle(r,{}),"\n"===t?this.insertNewlineStyleObject(r,s,e):this.insertCharStyleObject(r,s,n)},shiftLineStyles:function(e,n){var i=t(this.styles);for(var r in this.styles){var s=parseInt(r,10);s>e&&(this.styles[s+n]=i[s],i[s-n]||delete this.styles[s])}},removeStyleObject:function(t,e){var n=this.get2DCursorLocation(e),i=n.lineIndex,r=n.charIndex;this._removeStyleObject(t,n,i,r)},_getTextOnPreviousLine:function(t){return this._textLines[t-1]},_removeStyleObject:function(e,n,i,r){if(e){var s=this._getTextOnPreviousLine(n.lineIndex),o=s?s.length:0;this.styles[i-1]||(this.styles[i-1]={});for(r in this.styles[i])this.styles[i-1][parseInt(r,10)+o]=this.styles[i][r];this.shiftLineStyles(n.lineIndex,-1)}else{var a=this.styles[i];a&&delete a[r];var c=t(a);for(var l in c){var u=parseInt(l,10);u>=r&&0!==u&&(a[u-1]=c[u],delete a[u])}}},insertNewline:function(){this.insertChars("\n")}})}(),fabric.util.object.extend(fabric.IText.prototype,{initDoubleClickSimulation:function(){this.__lastClickTime=+new Date,this.__lastLastClickTime=+new Date,this.__lastPointer={},this.on("mousedown",this.onMouseDown.bind(this))},onMouseDown:function(t){this.__newClickTime=+new Date;var e=this.canvas.getPointer(t.e);this.isTripleClick(e)?(this.fire("tripleclick",t),this._stopEvent(t.e)):this.isDoubleClick(e)&&(this.fire("dblclick",t),this._stopEvent(t.e)),this.__lastLastClickTime=this.__lastClickTime,this.__lastClickTime=this.__newClickTime,this.__lastPointer=e,this.__lastIsEditing=this.isEditing,this.__lastSelected=this.selected},isDoubleClick:function(t){return this.__newClickTime-this.__lastClickTime<500&&this.__lastPointer.x===t.x&&this.__lastPointer.y===t.y&&this.__lastIsEditing},isTripleClick:function(t){return this.__newClickTime-this.__lastClickTime<500&&this.__lastClickTime-this.__lastLastClickTime<500&&this.__lastPointer.x===t.x&&this.__lastPointer.y===t.y},_stopEvent:function(t){t.preventDefault&&t.preventDefault(),t.stopPropagation&&t.stopPropagation()},initCursorSelectionHandlers:function(){this.initSelectedHandler(),this.initMousedownHandler(),this.initMouseupHandler(),this.initClicks()},initClicks:function(){this.on("dblclick",function(t){this.selectWord(this.getSelectionStartFromPointer(t.e))}),this.on("tripleclick",function(t){this.selectLine(this.getSelectionStartFromPointer(t.e))})},initMousedownHandler:function(){this.on("mousedown",function(t){if(this.editable){var e=this.canvas.getPointer(t.e);this.__mousedownX=e.x,this.__mousedownY=e.y,this.__isMousedown=!0,this.selected&&this.setCursorByClick(t.e),this.isEditing&&(this.__selectionStartOnMouseDown=this.selectionStart,this.selectionStart===this.selectionEnd&&this.abortCursorAnimation(),this.renderCursorOrSelection())}})},_isObjectMoved:function(t){var e=this.canvas.getPointer(t);return this.__mousedownX!==e.x||this.__mousedownY!==e.y},initMouseupHandler:function(){this.on("mouseup",function(t){this.__isMousedown=!1,this.editable&&!this._isObjectMoved(t.e)&&(this.__lastSelected&&!this.__corner&&(this.enterEditing(t.e),this.selectionStart===this.selectionEnd?this.initDelayedCursor(!0):this.renderCursorOrSelection()),this.selected=!0)})},setCursorByClick:function(t){var e=this.getSelectionStartFromPointer(t);t.shiftKey?e<this.selectionStart?(this.selectionEnd=this.selectionStart,this.selectionStart=e):this.selectionEnd=e:(this.selectionStart=e,this.selectionEnd=e),this._fireSelectionChanged(),this._updateTextarea()},getSelectionStartFromPointer:function(t){for(var e,n,i=this.getLocalPointer(t),r=0,s=0,o=0,a=0,c=0,l=this._textLines.length;c<l;c++){n=this._textLines[c],o+=this._getHeightOfLine(this.ctx,c)*this.scaleY;var u=this._getLineWidth(this.ctx,c),h=this._getLineLeftOffset(u);s=h*this.scaleX;for(var f=0,d=n.length;f<d;f++){if(r=s,s+=this._getWidthOfChar(this.ctx,n[f],c,this.flipX?d-f:f)*this.scaleX,!(o<=i.y||s<=i.x))return this._getNewSelectionStartFromOffset(i,r,s,a+c,d);a++}if(i.y<o)return this._getNewSelectionStartFromOffset(i,r,s,a+c-1,d)}if("undefined"==typeof e)return this.text.length},_getNewSelectionStartFromOffset:function(t,e,n,i,r){var s=t.x-e,o=n-t.x,a=o>s?0:1,c=i+a;return this.flipX&&(c=r-c),c>this.text.length&&(c=this.text.length),c}}),fabric.util.object.extend(fabric.IText.prototype,{initHiddenTextarea:function(){this.hiddenTextarea=fabric.document.createElement("textarea"),this.hiddenTextarea.setAttribute("autocapitalize","off");var t=this._calcTextareaPosition();this.hiddenTextarea.style.cssText="position: absolute; top: "+t.top+"; left: "+t.left+"; opacity: 0; width: 0px; height: 0px; z-index: -999;",fabric.document.body.appendChild(this.hiddenTextarea),fabric.util.addListener(this.hiddenTextarea,"keydown",this.onKeyDown.bind(this)),fabric.util.addListener(this.hiddenTextarea,"keyup",this.onKeyUp.bind(this)),fabric.util.addListener(this.hiddenTextarea,"input",this.onInput.bind(this)),fabric.util.addListener(this.hiddenTextarea,"copy",this.copy.bind(this)),fabric.util.addListener(this.hiddenTextarea,"cut",this.cut.bind(this)),fabric.util.addListener(this.hiddenTextarea,"paste",this.paste.bind(this)),fabric.util.addListener(this.hiddenTextarea,"compositionstart",this.onCompositionStart.bind(this)),fabric.util.addListener(this.hiddenTextarea,"compositionupdate",this.onCompositionUpdate.bind(this)),fabric.util.addListener(this.hiddenTextarea,"compositionend",this.onCompositionEnd.bind(this)),!this._clickHandlerInitialized&&this.canvas&&(fabric.util.addListener(this.canvas.upperCanvasEl,"click",this.onClick.bind(this)),this._clickHandlerInitialized=!0)},_keysMap:{8:"removeChars",9:"exitEditing",27:"exitEditing",13:"insertNewline",33:"moveCursorUp",34:"moveCursorDown",35:"moveCursorRight",36:"moveCursorLeft",37:"moveCursorLeft",38:"moveCursorUp",39:"moveCursorRight",40:"moveCursorDown",46:"forwardDelete"},_ctrlKeysMapUp:{67:"copy",88:"cut"},_ctrlKeysMapDown:{65:"selectAll"},onClick:function(){this.hiddenTextarea&&this.hiddenTextarea.focus()},onKeyDown:function(t){if(this.isEditing){if(t.keyCode in this._keysMap)this[this._keysMap[t.keyCode]](t);else{if(!(t.keyCode in this._ctrlKeysMapDown&&(t.ctrlKey||t.metaKey)))return;this[this._ctrlKeysMapDown[t.keyCode]](t)}t.stopImmediatePropagation(),t.preventDefault(),this.canvas&&this.canvas.renderAll()}},onKeyUp:function(t){return!this.isEditing||this._copyDone?void(this._copyDone=!1):void(t.keyCode in this._ctrlKeysMapUp&&(t.ctrlKey||t.metaKey)&&(this[this._ctrlKeysMapUp[t.keyCode]](t),t.stopImmediatePropagation(),t.preventDefault(),this.canvas&&this.canvas.renderAll()))},onInput:function(t){if(this.isEditing&&!this.inCompositionMode){var e,n,i,r=this.selectionStart||0,s=this.selectionEnd||0,o=this.text.length,a=this.hiddenTextarea.value.length;a>o?(i="left"===this._selectionDirection?s:r,e=a-o,n=this.hiddenTextarea.value.slice(i,i+e)):(e=a-o+s-r,n=this.hiddenTextarea.value.slice(r,r+e)),this.insertChars(n),t.stopPropagation()}},onCompositionStart:function(){this.inCompositionMode=!0,this.prevCompositionLength=0,this.compositionStart=this.selectionStart},onCompositionEnd:function(){this.inCompositionMode=!1},onCompositionUpdate:function(t){var e=t.data;this.selectionStart=this.compositionStart,this.selectionEnd=this.selectionEnd===this.selectionStart?this.compositionStart+this.prevCompositionLength:this.selectionEnd,this.insertChars(e,!1),this.prevCompositionLength=e.length},forwardDelete:function(t){if(this.selectionStart===this.selectionEnd){if(this.selectionStart===this.text.length)return;this.moveCursorRight(t)}this.removeChars(t)},copy:function(t){if(this.selectionStart!==this.selectionEnd){var e=this.getSelectedText(),n=this._getClipboardData(t);n&&n.setData("text",e),fabric.copiedText=e,fabric.copiedTextStyle=this.getSelectionStyles(this.selectionStart,this.selectionEnd),t.stopImmediatePropagation(),t.preventDefault(),this._copyDone=!0}},paste:function(t){var e=null,n=this._getClipboardData(t),i=!0;n?(e=n.getData("text").replace(/\r/g,""),fabric.copiedTextStyle&&fabric.copiedText===e||(i=!1)):e=fabric.copiedText,e&&this.insertChars(e,i),t.stopImmediatePropagation(),t.preventDefault()},cut:function(t){this.selectionStart!==this.selectionEnd&&(this.copy(t),this.removeChars(t))},_getClipboardData:function(t){return t&&t.clipboardData||fabric.window.clipboardData},getDownCursorOffset:function(t,e){var n,i,r=e?this.selectionEnd:this.selectionStart,s=this.get2DCursorLocation(r),o=s.lineIndex,a=this._textLines[o].slice(0,s.charIndex),c=this._textLines[o].slice(s.charIndex),l=this._textLines[o+1]||"";if(o===this._textLines.length-1||t.metaKey||34===t.keyCode)return this.text.length-r;var u=this._getLineWidth(this.ctx,o);i=this._getLineLeftOffset(u);for(var h=i,f=0,d=a.length;f<d;f++)n=a[f],h+=this._getWidthOfChar(this.ctx,n,o,f);var p=this._getIndexOnNextLine(s,l,h);return c.length+1+p},_getIndexOnNextLine:function(t,e,n){for(var i,r=t.lineIndex+1,s=this._getLineWidth(this.ctx,r),o=this._getLineLeftOffset(s),a=o,c=0,l=0,u=e.length;l<u;l++){var h=e[l],f=this._getWidthOfChar(this.ctx,h,r,l);if(a+=f,a>n){i=!0;var d=a-f,p=a,g=Math.abs(d-n),v=Math.abs(p-n);c=v<g?l+1:l;break}}return i||(c=e.length),c},moveCursorDown:function(t){this.selectionStart>=this.text.length&&this.selectionEnd>=this.text.length||this._moveCursorUpOrDown("Down",t)},moveCursorDownWithoutShift:function(t){return this._selectionDirection="right",this.selectionEnd=this.selectionEnd+t,this.selectionStart=this.selectionEnd,0!==t},swapSelectionPoints:function(){var t=this.selectionEnd;this.selectionEnd=this.selectionStart,this.selectionStart=t},moveCursorDownWithShift:function(t){return this.selectionEnd===this.selectionStart&&(this._selectionDirection="right"),"right"===this._selectionDirection?this.selectionEnd+=t:this.selectionStart+=t,this.selectionEnd<this.selectionStart&&"left"===this._selectionDirection&&(this.swapSelectionPoints(),this._selectionDirection="right"),this.selectionEnd>this.text.length&&(this.selectionEnd=this.text.length),0!==t},getUpCursorOffset:function(t,e){var n=e?this.selectionEnd:this.selectionStart,i=this.get2DCursorLocation(n),r=i.lineIndex;if(0===r||t.metaKey||33===t.keyCode)return n;for(var s,o=this._textLines[r].slice(0,i.charIndex),a=this._textLines[r-1]||"",c=this._getLineWidth(this.ctx,i.lineIndex),l=this._getLineLeftOffset(c),u=l,h=0,f=o.length;h<f;h++)s=o[h],u+=this._getWidthOfChar(this.ctx,s,r,h);var d=this._getIndexOnPrevLine(i,a,u);return a.length-d+o.length},_getIndexOnPrevLine:function(t,e,n){for(var i,r=t.lineIndex-1,s=this._getLineWidth(this.ctx,r),o=this._getLineLeftOffset(s),a=o,c=0,l=0,u=e.length;l<u;l++){var h=e[l],f=this._getWidthOfChar(this.ctx,h,r,l);if(a+=f,a>n){i=!0;var d=a-f,p=a,g=Math.abs(d-n),v=Math.abs(p-n);
c=v<g?l:l-1;break}}return i||(c=e.length-1),c},moveCursorUp:function(t){0===this.selectionStart&&0===this.selectionEnd||this._moveCursorUpOrDown("Up",t)},_moveCursorUpOrDown:function(t,e){var n="get"+t+"CursorOffset",i="moveCursor"+t,r=this[n](e,"right"===this._selectionDirection);i+=e.shiftKey?"WithShift":"WithoutShift",this[i](r)&&(this.abortCursorAnimation(),this._currentCursorOpacity=1,this.initDelayedCursor(),this._fireSelectionChanged(),this._updateTextarea())},moveCursorUpWithShift:function(t){return this.selectionEnd===this.selectionStart&&(this._selectionDirection="left"),"right"===this._selectionDirection?this.selectionEnd-=t:this.selectionStart-=t,this.selectionEnd<this.selectionStart&&"right"===this._selectionDirection&&(this.swapSelectionPoints(),this._selectionDirection="left"),0!==t},moveCursorUpWithoutShift:function(t){return this._selectionDirection="left",this.selectionStart-=t,this.selectionEnd=this.selectionStart,0!==t},moveCursorLeft:function(t){0===this.selectionStart&&0===this.selectionEnd||this._moveCursorLeftOrRight("Left",t)},_move:function(t,e,n){var i;if(t.altKey)i=this["findWordBoundary"+n](this[e]);else{if(!t.metaKey&&35!==t.keyCode&&36!==t.keyCode)return this[e]+="Left"===n?-1:1,!0;i=this["findLineBoundary"+n](this[e])}if(void 0!==typeof i&&this[e]!==i)return this[e]=i,!0},_moveLeft:function(t,e){return this._move(t,e,"Left")},_moveRight:function(t,e){return this._move(t,e,"Right")},moveCursorLeftWithoutShift:function(t){var e=!0;return this._selectionDirection="left",this.selectionEnd===this.selectionStart&&0!==this.selectionStart&&(e=this._moveLeft(t,"selectionStart")),this.selectionEnd=this.selectionStart,e},moveCursorLeftWithShift:function(t){return"right"===this._selectionDirection&&this.selectionStart!==this.selectionEnd?this._moveLeft(t,"selectionEnd"):0!==this.selectionStart?(this._selectionDirection="left",this._moveLeft(t,"selectionStart")):void 0},moveCursorRight:function(t){this.selectionStart>=this.text.length&&this.selectionEnd>=this.text.length||this._moveCursorLeftOrRight("Right",t)},_moveCursorLeftOrRight:function(t,e){var n="moveCursor"+t+"With";this._currentCursorOpacity=1,n+=e.shiftKey?"Shift":"outShift",this[n](e)&&(this.abortCursorAnimation(),this.initDelayedCursor(),this._fireSelectionChanged(),this._updateTextarea())},moveCursorRightWithShift:function(t){return"left"===this._selectionDirection&&this.selectionStart!==this.selectionEnd?this._moveRight(t,"selectionStart"):this.selectionEnd!==this.text.length?(this._selectionDirection="right",this._moveRight(t,"selectionEnd")):void 0},moveCursorRightWithoutShift:function(t){var e=!0;return this._selectionDirection="right",this.selectionStart===this.selectionEnd?(e=this._moveRight(t,"selectionStart"),this.selectionEnd=this.selectionStart):this.selectionStart=this.selectionEnd,e},removeChars:function(t){this.selectionStart===this.selectionEnd?this._removeCharsNearCursor(t):this._removeCharsFromTo(this.selectionStart,this.selectionEnd),this.setSelectionEnd(this.selectionStart),this._removeExtraneousStyles(),this.canvas&&this.canvas.renderAll(),this.setCoords(),this.fire("changed"),this.canvas&&this.canvas.fire("text:changed",{target:this})},_removeCharsNearCursor:function(t){if(0!==this.selectionStart)if(t.metaKey){var e=this.findLineBoundaryLeft(this.selectionStart);this._removeCharsFromTo(e,this.selectionStart),this.setSelectionStart(e)}else if(t.altKey){var n=this.findWordBoundaryLeft(this.selectionStart);this._removeCharsFromTo(n,this.selectionStart),this.setSelectionStart(n)}else this._removeSingleCharAndStyle(this.selectionStart),this.setSelectionStart(this.selectionStart-1)}}),function(){var t=fabric.util.toFixed,e=fabric.Object.NUM_FRACTION_DIGITS;fabric.util.object.extend(fabric.IText.prototype,{_setSVGTextLineText:function(t,e,n,i,r,s){this._getLineStyle(t)?this._setSVGTextLineChars(t,e,n,i,s):fabric.Text.prototype._setSVGTextLineText.call(this,t,e,n,i,r)},_setSVGTextLineChars:function(t,e,n,i,r){for(var s=this._textLines[t],o=0,a=this._getLineLeftOffset(this._getLineWidth(this.ctx,t))-this.width/2,c=this._getSVGLineTopOffset(t),l=this._getHeightOfLine(this.ctx,t),u=0,h=s.length;u<h;u++){var f=this._getStyleDeclaration(t,u)||{};e.push(this._createTextCharSpan(s[u],f,a,c.lineTop+c.offset,o));var d=this._getWidthOfChar(this.ctx,s[u],t,u);f.textBackgroundColor&&r.push(this._createTextCharBg(f,a,c.lineTop,l,d,o)),o+=d}},_getSVGLineTopOffset:function(t){for(var e=0,n=0,i=0;i<t;i++)e+=this._getHeightOfLine(this.ctx,i);return n=this._getHeightOfLine(this.ctx,i),{lineTop:e,offset:(this._fontSizeMult-this._fontSizeFraction)*n/(this.lineHeight*this._fontSizeMult)}},_createTextCharBg:function(n,i,r,s,o,a){return['\t\t<rect fill="',n.textBackgroundColor,'" x="',t(i+a,e),'" y="',t(r-this.height/2,e),'" width="',t(o,e),'" height="',t(s/this.lineHeight,e),'"></rect>\n'].join("")},_createTextCharSpan:function(n,i,r,s,o){var a=this.getSvgStyles.call(fabric.util.object.extend({visible:!0,fill:this.fill,stroke:this.stroke,type:"text",getSvgFilter:fabric.Object.prototype.getSvgFilter},i));return['\t\t\t<tspan x="',t(r+o,e),'" y="',t(s-this.height/2,e),'" ',i.fontFamily?'font-family="'+i.fontFamily.replace(/"/g,"'")+'" ':"",i.fontSize?'font-size="'+i.fontSize+'" ':"",i.fontStyle?'font-style="'+i.fontStyle+'" ':"",i.fontWeight?'font-weight="'+i.fontWeight+'" ':"",i.textDecoration?'text-decoration="'+i.textDecoration+'" ':"",'style="',a,'">',fabric.util.string.escapeXml(n),"</tspan>\n"].join("")}})}(),function(t){"use strict";var e=t.fabric||(t.fabric={}),n=e.util.object.clone;e.Textbox=e.util.createClass(e.IText,e.Observable,{type:"textbox",minWidth:20,dynamicMinWidth:0,__cachedLines:null,lockScalingY:!0,lockScalingFlip:!0,initialize:function(t,n){this.ctx=e.util.createCanvasElement().getContext("2d"),this.callSuper("initialize",t,n),this.setControlsVisibility(e.Textbox.getTextboxControlVisibility()),this._dimensionAffectingProps.width=!0},_initDimensions:function(t){this.__skipDimension||(t||(t=e.util.createCanvasElement().getContext("2d"),this._setTextStyles(t)),this.dynamicMinWidth=0,this._textLines=this._splitTextIntoLines(),this.dynamicMinWidth>this.width&&this._set("width",this.dynamicMinWidth),this._clearCache(),this.height=this._getTextHeight(t))},_generateStyleMap:function(){for(var t=0,e=0,n=0,i={},r=0;r<this._textLines.length;r++)"\n"===this.text[n]?(e=0,n++,t++):" "===this.text[n]&&(e++,n++),i[r]={line:t,offset:e},n+=this._textLines[r].length,e+=this._textLines[r].length;return i},_getStyleDeclaration:function(t,e,n){if(this._styleMap){var i=this._styleMap[t];if(!i)return n?{}:null;t=i.line,e=i.offset+e}return this.callSuper("_getStyleDeclaration",t,e,n)},_setStyleDeclaration:function(t,e,n){var i=this._styleMap[t];t=i.line,e=i.offset+e,this.styles[t][e]=n},_deleteStyleDeclaration:function(t,e){var n=this._styleMap[t];t=n.line,e=n.offset+e,delete this.styles[t][e]},_getLineStyle:function(t){var e=this._styleMap[t];return this.styles[e.line]},_setLineStyle:function(t,e){var n=this._styleMap[t];this.styles[n.line]=e},_deleteLineStyle:function(t){var e=this._styleMap[t];delete this.styles[e.line]},_wrapText:function(t,e){var n,i=e.split(this._reNewline),r=[];for(n=0;n<i.length;n++)r=r.concat(this._wrapLine(t,i[n],n));return r},_measureText:function(t,e,n,i){var r=0;i=i||0;for(var s=0,o=e.length;s<o;s++)r+=this._getWidthOfChar(t,e[s],n,s+i);return r},_wrapLine:function(t,e,n){for(var i=0,r=[],s="",o=e.split(" "),a="",c=0,l=" ",u=0,h=0,f=0,d=!0,p=this._getWidthOfCharSpacing(),g=0;g<o.length;g++)a=o[g],u=this._measureText(t,a,n,c),c+=a.length,i+=h+u-p,i>=this.width&&!d?(r.push(s),s="",i=u,d=!0):i+=p,d||(s+=l),s+=a,h=this._measureText(t,l,n,c)+p,c++,d=!1,u>f&&(f=u);return g&&r.push(s),f>this.dynamicMinWidth&&(this.dynamicMinWidth=f-p),r},_splitTextIntoLines:function(){var t=this.textAlign;this.ctx.save(),this._setTextStyles(this.ctx),this.textAlign="left";var e=this._wrapText(this.ctx,this.text);return this.textAlign=t,this.ctx.restore(),this._textLines=e,this._styleMap=this._generateStyleMap(),e},setOnGroup:function(t,e){"scaleX"===t&&(this.set("scaleX",Math.abs(1/e)),this.set("width",this.get("width")*e/("undefined"==typeof this.__oldScaleX?1:this.__oldScaleX)),this.__oldScaleX=e)},get2DCursorLocation:function(t){"undefined"==typeof t&&(t=this.selectionStart);for(var e=this._textLines.length,n=0,i=0;i<e;i++){var r=this._textLines[i],s=r.length;if(t<=n+s)return{lineIndex:i,charIndex:t-n};n+=s,"\n"!==this.text[n]&&" "!==this.text[n]||n++}return{lineIndex:e-1,charIndex:this._textLines[e-1].length}},_getCursorBoundariesOffsets:function(t,e){for(var n=0,i=0,r=this.get2DCursorLocation(),s=this._textLines[r.lineIndex].split(""),o=this._getLineLeftOffset(this._getLineWidth(this.ctx,r.lineIndex)),a=0;a<r.charIndex;a++)i+=this._getWidthOfChar(this.ctx,s[a],r.lineIndex,a);for(a=0;a<r.lineIndex;a++)n+=this._getHeightOfLine(this.ctx,a);return"cursor"===e&&(n+=(1-this._fontSizeFraction)*this._getHeightOfLine(this.ctx,r.lineIndex)/this.lineHeight-this.getCurrentCharFontSize(r.lineIndex,r.charIndex)*(1-this._fontSizeFraction)),{top:n,left:i,lineLeft:o}},getMinWidth:function(){return Math.max(this.minWidth,this.dynamicMinWidth)},toObject:function(t){return e.util.object.extend(this.callSuper("toObject",t),{minWidth:this.minWidth})}}),e.Textbox.fromObject=function(t){return new e.Textbox(t.text,n(t))},e.Textbox.getTextboxControlVisibility=function(){return{tl:!1,tr:!1,br:!1,bl:!1,ml:!0,mt:!1,mr:!0,mb:!1,mtr:!0}}}("undefined"!=typeof exports?exports:this),function(){var t=fabric.Canvas.prototype._setObjectScale;fabric.Canvas.prototype._setObjectScale=function(e,n,i,r,s,o,a){var c=n.target;if(!(c instanceof fabric.Textbox))return t.call(fabric.Canvas.prototype,e,n,i,r,s,o,a);var l=c.width*(e.x/n.scaleX/(c.width+c.strokeWidth));return l>=c.getMinWidth()?(c.set("width",l),!0):void 0},fabric.Group.prototype._refreshControlsVisibility=function(){if("undefined"!=typeof fabric.Textbox)for(var t=this._objects.length;t--;)if(this._objects[t]instanceof fabric.Textbox)return void this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility())};var e=fabric.util.object.clone;fabric.util.object.extend(fabric.Textbox.prototype,{_removeExtraneousStyles:function(){for(var t in this._styleMap)this._textLines[t]||delete this.styles[this._styleMap[t].line]},insertCharStyleObject:function(t,e,n){var i=this._styleMap[t];t=i.line,e=i.offset+e,fabric.IText.prototype.insertCharStyleObject.apply(this,[t,e,n])},insertNewlineStyleObject:function(t,e,n){var i=this._styleMap[t];t=i.line,e=i.offset+e,fabric.IText.prototype.insertNewlineStyleObject.apply(this,[t,e,n])},shiftLineStyles:function(t,n){var i=e(this.styles),r=this._styleMap[t];t=r.line;for(var s in this.styles){var o=parseInt(s,10);o>t&&(this.styles[o+n]=i[o],i[o-n]||delete this.styles[o])}},_getTextOnPreviousLine:function(t){for(var e=this._textLines[t-1];this._styleMap[t-2]&&this._styleMap[t-2].line===this._styleMap[t-1].line;)e=this._textLines[t-2]+e,t--;return e},removeStyleObject:function(t,e){var n=this.get2DCursorLocation(e),i=this._styleMap[n.lineIndex],r=i.line,s=i.offset+n.charIndex;this._removeStyleObject(t,n,r,s)}})}(),function(){var t=fabric.IText.prototype._getNewSelectionStartFromOffset;fabric.IText.prototype._getNewSelectionStartFromOffset=function(e,n,i,r,s){r=t.call(this,e,n,i,r,s);for(var o=0,a=0,c=0;c<this._textLines.length&&(o+=this._textLines[c].length,!(o+a>=r));c++)"\n"!==this.text[o+a]&&" "!==this.text[o+a]||a++;return r-c+a}}(),function(){function request(t,e,n){var i=URL.parse(t);i.port||(i.port=0===i.protocol.indexOf("https:")?443:80);var r=0===i.protocol.indexOf("https:")?HTTPS:HTTP,s=r.request({hostname:i.hostname,port:i.port,path:i.path,method:"GET"},function(t){var i="";e&&t.setEncoding(e),t.on("end",function(){n(i)}),t.on("data",function(e){200===t.statusCode&&(i+=e)})});s.on("error",function(t){t.errno===process.ECONNREFUSED?fabric.log("ECONNREFUSED: connection refused to "+i.hostname+":"+i.port):fabric.log(t.message),n(null)}),s.end()}function requestFs(t,e){var n=require("fs");n.readFile(t,function(t,n){if(t)throw fabric.log(t),t;e(n)})}if("undefined"==typeof document||"undefined"==typeof window){var DOMParser=require("xmldom").DOMParser,URL=require("url"),HTTP=require("http"),HTTPS=require("https"),Canvas=require("canvas"),Image=require("canvas").Image;fabric.util.loadImage=function(t,e,n){function i(i){i?(r.src=new Buffer(i,"binary"),r._src=t,e&&e.call(n,r)):(r=null,e&&e.call(n,null,!0))}var r=new Image;t&&(t instanceof Buffer||0===t.indexOf("data"))?(r.src=r._src=t,e&&e.call(n,r)):t&&0!==t.indexOf("http")?requestFs(t,i):t?request(t,"binary",i):e&&e.call(n,t)},fabric.loadSVGFromURL=function(t,e,n){t=t.replace(/^\n\s*/,"").replace(/\?.*$/,"").trim(),0!==t.indexOf("http")?requestFs(t,function(t){fabric.loadSVGFromString(t.toString(),e,n)}):request(t,"",function(t){fabric.loadSVGFromString(t,e,n)})},fabric.loadSVGFromString=function(t,e,n){var i=(new DOMParser).parseFromString(t);fabric.parseSVGDocument(i.documentElement,function(t,n){e&&e(t,n)},n)},fabric.util.getScript=function(url,callback){request(url,"",function(body){eval(body),callback&&callback()})},fabric.createCanvasForNode=function(t,e,n,i){i=i||n;var r=fabric.document.createElement("canvas"),s=new Canvas(t||600,e||600,i),o=new Canvas(t||600,e||600,i);r.style={},r.width=s.width,r.height=s.height;var a=fabric.Canvas||fabric.StaticCanvas,c=new a(r,n);return c.contextContainer=s.getContext("2d"),c.nodeCanvas=s,c.contextCache=o.getContext("2d"),c.nodeCacheCanvas=o,c.Font=Canvas.Font,c},fabric.StaticCanvas.prototype.createPNGStream=function(){return this.nodeCanvas.createPNGStream()},fabric.StaticCanvas.prototype.createJPEGStream=function(t){return this.nodeCanvas.createJPEGStream(t)};var origSetWidth=fabric.StaticCanvas.prototype.setWidth;fabric.StaticCanvas.prototype.setWidth=function(t,e){return origSetWidth.call(this,t,e),this.nodeCanvas.width=t,this},fabric.Canvas&&(fabric.Canvas.prototype.setWidth=fabric.StaticCanvas.prototype.setWidth);var origSetHeight=fabric.StaticCanvas.prototype.setHeight;fabric.StaticCanvas.prototype.setHeight=function(t,e){return origSetHeight.call(this,t,e),this.nodeCanvas.height=t,this},fabric.Canvas&&(fabric.Canvas.prototype.setHeight=fabric.StaticCanvas.prototype.setHeight)}}(),$(document).ready(function(){}),console.log("from app2.js");
//# sourceMappingURL=data:application/json;base64,
